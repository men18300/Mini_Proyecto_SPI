

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 16:11:54 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0013                     _SSPBUF	set	19
   288  0014                     _SSPCON	set	20
   289  0007                     _PORTC	set	7
   290  0006                     _PORTB	set	6
   291  0005                     _PORTA	set	5
   292  0009                     _PORTE	set	9
   293  0008                     _PORTD	set	8
   294  0006                     _PORTBbits	set	6
   295  000B                     _INTCONbits	set	11
   296  0063                     _SSPIF	set	99
   297  0094                     _SSPSTATbits	set	148
   298  0094                     _SSPSTAT	set	148
   299  0085                     _TRISAbits	set	133
   300  0096                     _IOCBbits	set	150
   301  0089                     _TRISE	set	137
   302  0088                     _TRISD	set	136
   303  0087                     _TRISC	set	135
   304  0086                     _TRISB	set	134
   305  0085                     _TRISA	set	133
   306  043B                     _TRISC3	set	1083
   307  043D                     _TRISC5	set	1085
   308  0189                     _ANSELH	set	393
   309  0188                     _ANSEL	set	392
   310                           
   311                           	psect	cinit
   312  000F                     start_initialization:	
   313                           ; #config settings
   314                           
   315  000F                     __initialization:
   316                           
   317                           ; Clear objects allocated to COMMON
   318  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   319  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   320  0011                     end_of_initialization:	
   321                           ;End of C runtime variable initialization code
   322                           
   323  0011                     __end_of__initialization:
   324  0011  0183               	clrf	3
   325  0012  120A  118A  289A   	ljmp	_main	;jump to C main() function
   326                           
   327                           	psect	bssCOMMON
   328  0078                     __pbssCOMMON:
   329  0078                     _CAMBIO:
   330  0078                     	ds	1
   331  0079                     _contador:
   332  0079                     	ds	1
   333                           
   334                           	psect	cstackCOMMON
   335  0070                     __pcstackCOMMON:
   336  0070                     ?_spiRead:
   337  0070                     ??_spiRead:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  0070                     ?_spiWrite:	
   341                           ; 1 bytes @ 0x0
   342                           
   343  0070                     ?_setup:	
   344                           ; 1 bytes @ 0x0
   345                           
   346  0070                     ?_isr:	
   347                           ; 1 bytes @ 0x0
   348                           
   349  0070                     ?_main:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  0070                     ?_spiReceiveWait:	
   353                           ; 1 bytes @ 0x0
   354                           
   355  0070                     ??_spiReceiveWait:	
   356                           ; 1 bytes @ 0x0
   357                           
   358  0070                     ?i1_spiWrite:	
   359                           ; 1 bytes @ 0x0
   360                           
   361  0070                     ??i1_spiWrite:	
   362                           ; 1 bytes @ 0x0
   363                           
   364  0070                     i1spiWrite@dat:	
   365                           ; 1 bytes @ 0x0
   366                           
   367                           
   368                           ; 1 bytes @ 0x0
   369  0070                     	ds	1
   370  0071                     ??_isr:
   371                           
   372                           ; 1 bytes @ 0x1
   373  0071                     	ds	3
   374  0074                     ??_spiWrite:
   375  0074                     ?_spiInit:	
   376                           ; 1 bytes @ 0x4
   377                           
   378  0074                     spiInit@sDataSample:	
   379                           ; 1 bytes @ 0x4
   380                           
   381  0074                     spiWrite@dat:	
   382                           ; 1 bytes @ 0x4
   383                           
   384                           
   385                           ; 1 bytes @ 0x4
   386  0074                     	ds	1
   387  0075                     spiInit@sClockIdle:
   388                           
   389                           ; 1 bytes @ 0x5
   390  0075                     	ds	1
   391  0076                     spiInit@sTransmitEdge:
   392                           
   393                           ; 1 bytes @ 0x6
   394  0076                     	ds	1
   395  0077                     ??_spiInit:
   396  0077                     spiInit@sType:	
   397                           ; 1 bytes @ 0x7
   398                           
   399                           
   400                           ; 1 bytes @ 0x7
   401  0077                     	ds	1
   402  0078                     ??_setup:
   403  0078                     ??_main:	
   404                           ; 1 bytes @ 0x8
   405                           
   406                           
   407                           	psect	maintext
   408  009A                     __pmaintext:	
   409                           ; 1 bytes @ 0x8
   410 ;;
   411 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   412 ;;
   413 ;; *************** function _main *****************
   414 ;; Defined at:
   415 ;;		line 84 in file "PICCONTADOR.c"
   416 ;; Parameters:    Size  Location     Type
   417 ;;		None
   418 ;; Auto vars:     Size  Location     Type
   419 ;;		None
   420 ;; Return value:  Size  Location     Type
   421 ;;                  1    wreg      void 
   422 ;; Registers used:
   423 ;;		wreg, status,2, status,0, pclath, cstack
   424 ;; Tracked objects:
   425 ;;		On entry : B00/0
   426 ;;		On exit  : 0/0
   427 ;;		Unchanged: 0/0
   428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   429 ;;      Params:         0       0       0       0       0
   430 ;;      Locals:         0       0       0       0       0
   431 ;;      Temps:          0       0       0       0       0
   432 ;;      Totals:         0       0       0       0       0
   433 ;;Total ram usage:        0 bytes
   434 ;; Hardware stack levels required when called:    5
   435 ;; This function calls:
   436 ;;		_setup
   437 ;;		_spiWrite
   438 ;; This function is called by:
   439 ;;		Startup code after reset
   440 ;; This function uses a non-reentrant model
   441 ;;
   442                           
   443                           
   444                           ;psect for function _main
   445  009A                     _main:
   446  009A                     l848:	
   447                           ;incstack = 0
   448                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   449                           
   450                           
   451                           ;PICCONTADOR.c: 85:     setup();
   452  009A  120A  118A  2015  120A  118A  	fcall	_setup
   453  009F                     l62:	
   454                           ;PICCONTADOR.c: 86:     while (1) {
   455                           
   456                           
   457                           ;PICCONTADOR.c: 89:         spiWrite(PORTD);
   458  009F  1283               	bcf	3,5	;RP0=0, select bank0
   459  00A0  1303               	bcf	3,6	;RP1=0, select bank0
   460  00A1  0808               	movf	8,w	;volatile
   461  00A2  120A  118A  20BB  120A  118A  	fcall	_spiWrite
   462  00A7  289F               	goto	l62
   463  00A8  120A  118A  280C   	ljmp	start
   464  00AB                     __end_of_main:
   465                           
   466                           	psect	text1
   467  00BB                     __ptext1:	
   468 ;; *************** function _spiWrite *****************
   469 ;; Defined at:
   470 ;;		line 34 in file "SPI.c"
   471 ;; Parameters:    Size  Location     Type
   472 ;;  dat             1    wreg     unsigned char 
   473 ;; Auto vars:     Size  Location     Type
   474 ;;  dat             1    4[COMMON] unsigned char 
   475 ;; Return value:  Size  Location     Type
   476 ;;                  1    wreg      void 
   477 ;; Registers used:
   478 ;;		wreg
   479 ;; Tracked objects:
   480 ;;		On entry : 0/0
   481 ;;		On exit  : 0/0
   482 ;;		Unchanged: 0/0
   483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   484 ;;      Params:         0       0       0       0       0
   485 ;;      Locals:         1       0       0       0       0
   486 ;;      Temps:          0       0       0       0       0
   487 ;;      Totals:         1       0       0       0       0
   488 ;;Total ram usage:        1 bytes
   489 ;; Hardware stack levels used:    1
   490 ;; Hardware stack levels required when called:    3
   491 ;; This function calls:
   492 ;;		Nothing
   493 ;; This function is called by:
   494 ;;		_main
   495 ;; This function uses a non-reentrant model
   496 ;;
   497                           
   498                           
   499                           ;psect for function _spiWrite
   500  00BB                     _spiWrite:
   501                           
   502                           ;incstack = 0
   503                           ; Regs used in _spiWrite: [wreg]
   504                           ;spiWrite@dat stored from wreg
   505  00BB  00F4               	movwf	spiWrite@dat
   506  00BC                     l712:
   507                           
   508                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
   509  00BC  0874               	movf	spiWrite@dat,w
   510  00BD  1283               	bcf	3,5	;RP0=0, select bank0
   511  00BE  1303               	bcf	3,6	;RP1=0, select bank0
   512  00BF  0093               	movwf	19	;volatile
   513  00C0                     l94:
   514  00C0  0008               	return
   515  00C1                     __end_of_spiWrite:
   516                           
   517                           	psect	text2
   518  0015                     __ptext2:	
   519 ;; *************** function _setup *****************
   520 ;; Defined at:
   521 ;;		line 98 in file "PICCONTADOR.c"
   522 ;; Parameters:    Size  Location     Type
   523 ;;		None
   524 ;; Auto vars:     Size  Location     Type
   525 ;;		None
   526 ;; Return value:  Size  Location     Type
   527 ;;                  1    wreg      void 
   528 ;; Registers used:
   529 ;;		wreg, status,2, status,0, pclath, cstack
   530 ;; Tracked objects:
   531 ;;		On entry : 0/0
   532 ;;		On exit  : 0/0
   533 ;;		Unchanged: 0/0
   534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   535 ;;      Params:         0       0       0       0       0
   536 ;;      Locals:         0       0       0       0       0
   537 ;;      Temps:          0       0       0       0       0
   538 ;;      Totals:         0       0       0       0       0
   539 ;;Total ram usage:        0 bytes
   540 ;; Hardware stack levels used:    1
   541 ;; Hardware stack levels required when called:    4
   542 ;; This function calls:
   543 ;;		_spiInit
   544 ;; This function is called by:
   545 ;;		_main
   546 ;; This function uses a non-reentrant model
   547 ;;
   548                           
   549                           
   550                           ;psect for function _setup
   551  0015                     _setup:
   552  0015                     l790:	
   553                           ;incstack = 0
   554                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   555                           
   556                           
   557                           ;PICCONTADOR.c: 101:     ANSEL = 0;
   558  0015  1683               	bsf	3,5	;RP0=1, select bank3
   559  0016  1703               	bsf	3,6	;RP1=1, select bank3
   560  0017  0188               	clrf	8	;volatile
   561                           
   562                           ;PICCONTADOR.c: 102:     ANSELH = 0;
   563  0018  0189               	clrf	9	;volatile
   564                           
   565                           ;PICCONTADOR.c: 103:     TRISA = 0;
   566  0019  1683               	bsf	3,5	;RP0=1, select bank1
   567  001A  1303               	bcf	3,6	;RP1=0, select bank1
   568  001B  0185               	clrf	5	;volatile
   569                           
   570                           ;PICCONTADOR.c: 104:     PORTA = 0;
   571  001C  1283               	bcf	3,5	;RP0=0, select bank0
   572  001D  1303               	bcf	3,6	;RP1=0, select bank0
   573  001E  0185               	clrf	5	;volatile
   574  001F                     l792:
   575                           
   576                           ;PICCONTADOR.c: 105:     TRISB = 0b00000011;
   577  001F  3003               	movlw	3
   578  0020  1683               	bsf	3,5	;RP0=1, select bank1
   579  0021  1303               	bcf	3,6	;RP1=0, select bank1
   580  0022  0086               	movwf	6	;volatile
   581  0023                     l794:
   582                           
   583                           ;PICCONTADOR.c: 106:     PORTB = 0;
   584  0023  1283               	bcf	3,5	;RP0=0, select bank0
   585  0024  1303               	bcf	3,6	;RP1=0, select bank0
   586  0025  0186               	clrf	6	;volatile
   587  0026                     l796:
   588                           
   589                           ;PICCONTADOR.c: 107:     TRISC = 0;
   590  0026  1683               	bsf	3,5	;RP0=1, select bank1
   591  0027  1303               	bcf	3,6	;RP1=0, select bank1
   592  0028  0187               	clrf	7	;volatile
   593  0029                     l798:
   594                           
   595                           ;PICCONTADOR.c: 108:     PORTC = 0;
   596  0029  1283               	bcf	3,5	;RP0=0, select bank0
   597  002A  1303               	bcf	3,6	;RP1=0, select bank0
   598  002B  0187               	clrf	7	;volatile
   599  002C                     l800:
   600                           
   601                           ;PICCONTADOR.c: 109:     TRISD = 0;
   602  002C  1683               	bsf	3,5	;RP0=1, select bank1
   603  002D  1303               	bcf	3,6	;RP1=0, select bank1
   604  002E  0188               	clrf	8	;volatile
   605  002F                     l802:
   606                           
   607                           ;PICCONTADOR.c: 110:     PORTD = 0;
   608  002F  1283               	bcf	3,5	;RP0=0, select bank0
   609  0030  1303               	bcf	3,6	;RP1=0, select bank0
   610  0031  0188               	clrf	8	;volatile
   611  0032                     l804:
   612                           
   613                           ;PICCONTADOR.c: 111:     TRISE = 0;
   614  0032  1683               	bsf	3,5	;RP0=1, select bank1
   615  0033  1303               	bcf	3,6	;RP1=0, select bank1
   616  0034  0189               	clrf	9	;volatile
   617  0035                     l806:
   618                           
   619                           ;PICCONTADOR.c: 112:     PORTE = 0;
   620  0035  1283               	bcf	3,5	;RP0=0, select bank0
   621  0036  1303               	bcf	3,6	;RP1=0, select bank0
   622  0037  0189               	clrf	9	;volatile
   623  0038                     l808:
   624                           
   625                           ;PICCONTADOR.c: 113:     INTCONbits.GIE = 1;
   626  0038  178B               	bsf	11,7	;volatile
   627  0039                     l810:
   628                           
   629                           ;PICCONTADOR.c: 114:     INTCONbits.PEIE = 1;
   630  0039  170B               	bsf	11,6	;volatile
   631  003A                     l812:
   632                           
   633                           ;PICCONTADOR.c: 115:     INTCONbits.RBIE = 1;
   634  003A  158B               	bsf	11,3	;volatile
   635  003B                     l814:
   636                           
   637                           ;PICCONTADOR.c: 116:     INTCONbits.RBIF = 0;
   638  003B  100B               	bcf	11,0	;volatile
   639  003C                     l816:
   640                           
   641                           ;PICCONTADOR.c: 117:     IOCBbits.IOCB0 = 1;
   642  003C  1683               	bsf	3,5	;RP0=1, select bank1
   643  003D  1303               	bcf	3,6	;RP1=0, select bank1
   644  003E  1416               	bsf	22,0	;volatile
   645  003F                     l818:
   646                           
   647                           ;PICCONTADOR.c: 118:     IOCBbits.IOCB1 = 1;
   648  003F  1496               	bsf	22,1	;volatile
   649  0040                     l820:
   650                           
   651                           ;PICCONTADOR.c: 120:     INTCONbits.GIE = 1;
   652  0040  178B               	bsf	11,7	;volatile
   653  0041                     l822:
   654                           
   655                           ;PICCONTADOR.c: 121:     INTCONbits.PEIE = 1;
   656  0041  170B               	bsf	11,6	;volatile
   657  0042                     l824:
   658                           
   659                           ;PICCONTADOR.c: 124:     TRISAbits.TRISA5 = 1;
   660  0042  1685               	bsf	5,5	;volatile
   661  0043                     l826:
   662                           
   663                           ;PICCONTADOR.c: 126:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE
      +                          _LOW, SPI_IDLE_2_ACTIVE);
   664  0043  01F4               	clrf	spiInit@sDataSample
   665  0044  01F5               	clrf	spiInit@sClockIdle
   666  0045  01F6               	clrf	spiInit@sTransmitEdge
   667  0046  3024               	movlw	36
   668  0047  120A  118A  2084  120A  118A  	fcall	_spiInit
   669  004C                     l68:
   670  004C  0008               	return
   671  004D                     __end_of_setup:
   672                           
   673                           	psect	text3
   674  0084                     __ptext3:	
   675 ;; *************** function _spiInit *****************
   676 ;; Defined at:
   677 ;;		line 12 in file "SPI.c"
   678 ;; Parameters:    Size  Location     Type
   679 ;;  sType           1    wreg     enum E1264
   680 ;;  sDataSample     1    4[COMMON] enum E1272
   681 ;;  sClockIdle      1    5[COMMON] enum E1276
   682 ;;  sTransmitEdg    1    6[COMMON] enum E1280
   683 ;; Auto vars:     Size  Location     Type
   684 ;;  sType           1    7[COMMON] enum E1264
   685 ;; Return value:  Size  Location     Type
   686 ;;                  1    wreg      void 
   687 ;; Registers used:
   688 ;;		wreg, status,2, status,0
   689 ;; Tracked objects:
   690 ;;		On entry : 0/0
   691 ;;		On exit  : 0/0
   692 ;;		Unchanged: 0/0
   693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   694 ;;      Params:         3       0       0       0       0
   695 ;;      Locals:         1       0       0       0       0
   696 ;;      Temps:          0       0       0       0       0
   697 ;;      Totals:         4       0       0       0       0
   698 ;;Total ram usage:        4 bytes
   699 ;; Hardware stack levels used:    1
   700 ;; Hardware stack levels required when called:    3
   701 ;; This function calls:
   702 ;;		Nothing
   703 ;; This function is called by:
   704 ;;		_setup
   705 ;; This function uses a non-reentrant model
   706 ;;
   707                           
   708                           
   709                           ;psect for function _spiInit
   710  0084                     _spiInit:
   711                           
   712                           ;incstack = 0
   713                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   714                           ;spiInit@sType stored from wreg
   715  0084  00F7               	movwf	spiInit@sType
   716  0085                     l780:
   717                           
   718                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   719  0085  1683               	bsf	3,5	;RP0=1, select bank1
   720  0086  1303               	bcf	3,6	;RP1=0, select bank1
   721  0087  1287               	bcf	7,5	;volatile
   722                           
   723                           ;SPI.c: 15:     if(sType & 0b00000100)
   724  0088  1D77               	btfss	spiInit@sType,2
   725  0089  288B               	goto	u71
   726  008A  288C               	goto	u70
   727  008B                     u71:
   728  008B  2890               	goto	l786
   729  008C                     u70:
   730  008C                     l782:
   731                           
   732                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   733  008C  0876               	movf	spiInit@sTransmitEdge,w
   734  008D  0094               	movwf	20	;volatile
   735  008E                     l784:
   736                           
   737                           ;SPI.c: 18:         TRISC3 = 1;
   738  008E  1587               	bsf	7,3	;volatile
   739                           
   740                           ;SPI.c: 19:     }
   741  008F  2894               	goto	l84
   742  0090                     l786:
   743                           
   744                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   745  0090  0874               	movf	spiInit@sDataSample,w
   746  0091  0476               	iorwf	spiInit@sTransmitEdge,w
   747  0092  0094               	movwf	20	;volatile
   748  0093                     l788:
   749                           
   750                           ;SPI.c: 23:         TRISC3 = 0;
   751  0093  1187               	bcf	7,3	;volatile
   752  0094                     l84:	
   753                           ;SPI.c: 24:     }
   754                           
   755                           
   756                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   757  0094  0877               	movf	spiInit@sType,w
   758  0095  0475               	iorwf	spiInit@sClockIdle,w
   759  0096  1283               	bcf	3,5	;RP0=0, select bank0
   760  0097  1303               	bcf	3,6	;RP1=0, select bank0
   761  0098  0094               	movwf	20	;volatile
   762  0099                     l85:
   763  0099  0008               	return
   764  009A                     __end_of_spiInit:
   765                           
   766                           	psect	text4
   767  004D                     __ptext4:	
   768 ;; *************** function _isr *****************
   769 ;; Defined at:
   770 ;;		line 56 in file "PICCONTADOR.c"
   771 ;; Parameters:    Size  Location     Type
   772 ;;		None
   773 ;; Auto vars:     Size  Location     Type
   774 ;;		None
   775 ;; Return value:  Size  Location     Type
   776 ;;                  1    wreg      void 
   777 ;; Registers used:
   778 ;;		wreg, status,2, status,0, pclath, cstack
   779 ;; Tracked objects:
   780 ;;		On entry : 0/0
   781 ;;		On exit  : 0/0
   782 ;;		Unchanged: 0/0
   783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   784 ;;      Params:         0       0       0       0       0
   785 ;;      Locals:         0       0       0       0       0
   786 ;;      Temps:          3       0       0       0       0
   787 ;;      Totals:         3       0       0       0       0
   788 ;;Total ram usage:        3 bytes
   789 ;; Hardware stack levels used:    1
   790 ;; Hardware stack levels required when called:    2
   791 ;; This function calls:
   792 ;;		_spiRead
   793 ;;		i1_spiWrite
   794 ;; This function is called by:
   795 ;;		Interrupt level 1
   796 ;; This function uses a non-reentrant model
   797 ;;
   798                           
   799                           
   800                           ;psect for function _isr
   801  004D                     _isr:
   802  004D                     i1l830:
   803  004D  1C0B               	btfss	11,0	;volatile
   804  004E  2850               	goto	u8_21
   805  004F  2851               	goto	u8_20
   806  0050                     u8_21:
   807  0050  287D               	goto	i1l57
   808  0051                     u8_20:
   809  0051                     i1l832:
   810  0051  1283               	bcf	3,5	;RP0=0, select bank0
   811  0052  1303               	bcf	3,6	;RP1=0, select bank0
   812  0053  1C06               	btfss	6,0	;volatile
   813  0054  2856               	goto	u9_21
   814  0055  2857               	goto	u9_20
   815  0056                     u9_21:
   816  0056  2860               	goto	i1l52
   817  0057                     u9_20:
   818  0057                     i1l834:
   819  0057  3001               	movlw	1
   820  0058  00F1               	movwf	??_isr
   821  0059  0871               	movf	??_isr,w
   822  005A  0788               	addwf	8,f	;volatile
   823  005B                     i1l836:
   824  005B  0808               	movf	8,w	;volatile
   825  005C  00F1               	movwf	??_isr
   826  005D  0871               	movf	??_isr,w
   827  005E  00F9               	movwf	_contador
   828  005F  287C               	goto	i1l846
   829  0060                     i1l52:
   830  0060  1C86               	btfss	6,1	;volatile
   831  0061  2863               	goto	u10_21
   832  0062  2864               	goto	u10_20
   833  0063                     u10_21:
   834  0063  2867               	goto	i1l54
   835  0064                     u10_20:
   836  0064                     i1l838:
   837  0064  3001               	movlw	1
   838  0065  0288               	subwf	8,f	;volatile
   839  0066  285B               	goto	i1l836
   840  0067                     i1l54:
   841  0067  1D8C               	btfss	12,3	;volatile
   842  0068  286A               	goto	u11_21
   843  0069  286B               	goto	u11_20
   844  006A                     u11_21:
   845  006A  287C               	goto	i1l846
   846  006B                     u11_20:
   847  006B                     i1l842:
   848  006B  120A  118A  20AB  120A  118A  	fcall	_spiRead
   849  0070  1283               	bcf	3,5	;RP0=0, select bank0
   850  0071  1303               	bcf	3,6	;RP1=0, select bank0
   851  0072  0089               	movwf	9	;volatile
   852  0073  0808               	movf	8,w	;volatile
   853  0074  120A  118A  20C1  120A  118A  	fcall	i1_spiWrite
   854  0079                     i1l844:
   855  0079  1283               	bcf	3,5	;RP0=0, select bank0
   856  007A  1303               	bcf	3,6	;RP1=0, select bank0
   857  007B  118C               	bcf	12,3	;volatile
   858  007C                     i1l846:
   859  007C  100B               	bcf	11,0	;volatile
   860  007D                     i1l57:
   861  007D  0873               	movf	??_isr+2,w
   862  007E  008A               	movwf	10
   863  007F  0E72               	swapf	??_isr+1,w
   864  0080  0083               	movwf	3
   865  0081  0EFE               	swapf	btemp,f
   866  0082  0E7E               	swapf	btemp,w
   867  0083  0009               	retfie
   868  0084                     __end_of_isr:
   869                           
   870                           	psect	intentry
   871  0004                     __pintentry:	
   872                           ;incstack = 0
   873                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
   874                           
   875  0004                     interrupt_function:
   876  007E                     saved_w	set	btemp
   877  0004  00FE               	movwf	btemp
   878  0005  0E03               	swapf	3,w
   879  0006  00F2               	movwf	??_isr+1
   880  0007  080A               	movf	10,w
   881  0008  00F3               	movwf	??_isr+2
   882  0009  120A  118A  284D   	ljmp	_isr
   883                           
   884                           	psect	text5
   885  00C1                     __ptext5:	
   886 ;; *************** function i1_spiWrite *****************
   887 ;; Defined at:
   888 ;;		line 34 in file "SPI.c"
   889 ;; Parameters:    Size  Location     Type
   890 ;;  dat             1    wreg     unsigned char 
   891 ;; Auto vars:     Size  Location     Type
   892 ;;  dat             1    0[COMMON] unsigned char 
   893 ;; Return value:  Size  Location     Type
   894 ;;                  1    wreg      void 
   895 ;; Registers used:
   896 ;;		wreg
   897 ;; Tracked objects:
   898 ;;		On entry : 0/0
   899 ;;		On exit  : 0/0
   900 ;;		Unchanged: 0/0
   901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   902 ;;      Params:         0       0       0       0       0
   903 ;;      Locals:         1       0       0       0       0
   904 ;;      Temps:          0       0       0       0       0
   905 ;;      Totals:         1       0       0       0       0
   906 ;;Total ram usage:        1 bytes
   907 ;; Hardware stack levels used:    1
   908 ;; This function calls:
   909 ;;		Nothing
   910 ;; This function is called by:
   911 ;;		_isr
   912 ;; This function uses a non-reentrant model
   913 ;;
   914                           
   915                           
   916                           ;psect for function i1_spiWrite
   917  00C1                     i1_spiWrite:
   918                           
   919                           ;incstack = 0
   920                           ; Regs used in i1_spiWrite: [wreg]
   921                           ;i1spiWrite@dat stored from wreg
   922  00C1  00F0               	movwf	i1spiWrite@dat
   923  00C2                     i1l828:
   924                           
   925                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
   926  00C2  0870               	movf	i1spiWrite@dat,w
   927  00C3  1283               	bcf	3,5	;RP0=0, select bank0
   928  00C4  1303               	bcf	3,6	;RP1=0, select bank0
   929  00C5  0093               	movwf	19	;volatile
   930  00C6                     i1l94:
   931  00C6  0008               	return
   932  00C7                     __end_ofi1_spiWrite:
   933                           
   934                           	psect	text6
   935  00AB                     __ptext6:	
   936 ;; *************** function _spiRead *****************
   937 ;; Defined at:
   938 ;;		line 47 in file "SPI.c"
   939 ;; Parameters:    Size  Location     Type
   940 ;;		None
   941 ;; Auto vars:     Size  Location     Type
   942 ;;		None
   943 ;; Return value:  Size  Location     Type
   944 ;;                  1    wreg      unsigned char 
   945 ;; Registers used:
   946 ;;		wreg, status,2, status,0, pclath, cstack
   947 ;; Tracked objects:
   948 ;;		On entry : 0/0
   949 ;;		On exit  : 0/0
   950 ;;		Unchanged: 0/0
   951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   952 ;;      Params:         0       0       0       0       0
   953 ;;      Locals:         0       0       0       0       0
   954 ;;      Temps:          0       0       0       0       0
   955 ;;      Totals:         0       0       0       0       0
   956 ;;Total ram usage:        0 bytes
   957 ;; Hardware stack levels used:    1
   958 ;; Hardware stack levels required when called:    1
   959 ;; This function calls:
   960 ;;		_spiReceiveWait
   961 ;; This function is called by:
   962 ;;		_isr
   963 ;; This function uses a non-reentrant model
   964 ;;
   965                           
   966                           
   967                           ;psect for function _spiRead
   968  00AB                     _spiRead:
   969  00AB                     i1l706:	
   970                           ;incstack = 0
   971                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   972                           
   973                           
   974                           ;SPI.c: 49:     spiReceiveWait();
   975  00AB  120A  118A  20B4  120A  118A  	fcall	_spiReceiveWait
   976  00B0                     i1l708:
   977                           
   978                           ;SPI.c: 50:     return(SSPBUF);
   979  00B0  1283               	bcf	3,5	;RP0=0, select bank0
   980  00B1  1303               	bcf	3,6	;RP1=0, select bank0
   981  00B2  0813               	movf	19,w	;volatile
   982  00B3                     i1l102:
   983  00B3  0008               	return
   984  00B4                     __end_of_spiRead:
   985                           
   986                           	psect	text7
   987  00B4                     __ptext7:	
   988 ;; *************** function _spiReceiveWait *****************
   989 ;; Defined at:
   990 ;;		line 29 in file "SPI.c"
   991 ;; Parameters:    Size  Location     Type
   992 ;;		None
   993 ;; Auto vars:     Size  Location     Type
   994 ;;		None
   995 ;; Return value:  Size  Location     Type
   996 ;;                  1    wreg      void 
   997 ;; Registers used:
   998 ;;		None
   999 ;; Tracked objects:
  1000 ;;		On entry : 0/0
  1001 ;;		On exit  : 0/0
  1002 ;;		Unchanged: 0/0
  1003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1004 ;;      Params:         0       0       0       0       0
  1005 ;;      Locals:         0       0       0       0       0
  1006 ;;      Temps:          0       0       0       0       0
  1007 ;;      Totals:         0       0       0       0       0
  1008 ;;Total ram usage:        0 bytes
  1009 ;; Hardware stack levels used:    1
  1010 ;; This function calls:
  1011 ;;		Nothing
  1012 ;; This function is called by:
  1013 ;;		_spiRead
  1014 ;; This function uses a non-reentrant model
  1015 ;;
  1016                           
  1017                           
  1018                           ;psect for function _spiReceiveWait
  1019  00B4                     _spiReceiveWait:
  1020  00B4                     i1l704:	
  1021                           ;incstack = 0
  1022                           ; Regs used in _spiReceiveWait: []
  1023                           
  1024  00B4                     i1l88:	
  1025                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  1026                           
  1027  00B4  1683               	bsf	3,5	;RP0=1, select bank1
  1028  00B5  1303               	bcf	3,6	;RP1=0, select bank1
  1029  00B6  1C14               	btfss	20,0	;volatile
  1030  00B7  28B9               	goto	u2_21
  1031  00B8  28BA               	goto	u2_20
  1032  00B9                     u2_21:
  1033  00B9  28B4               	goto	i1l88
  1034  00BA                     u2_20:
  1035  00BA                     i1l91:
  1036  00BA  0008               	return
  1037  00BB                     __end_of_spiReceiveWait:
  1038  007E                     btemp	set	126	;btemp
  1039  007E                     wtemp0	set	126
  1040                           
  1041                           	psect	config
  1042                           
  1043                           ;Config register CONFIG1 @ 0x2007
  1044                           ;	Oscillator Selection bits
  1045                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1046                           ;	Watchdog Timer Enable bit
  1047                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1048                           ;	Power-up Timer Enable bit
  1049                           ;	PWRTE = OFF, PWRT disabled
  1050                           ;	RE3/MCLR pin function select bit
  1051                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1052                           ;	Code Protection bit
  1053                           ;	CP = OFF, Program memory code protection is disabled
  1054                           ;	Data Code Protection bit
  1055                           ;	CPD = OFF, Data memory code protection is disabled
  1056                           ;	Brown Out Reset Selection bits
  1057                           ;	BOREN = OFF, BOR disabled
  1058                           ;	Internal External Switchover bit
  1059                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1060                           ;	Fail-Safe Clock Monitor Enabled bit
  1061                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1062                           ;	Low Voltage Programming Enable bit
  1063                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1064                           ;	In-Circuit Debugger Mode bit
  1065                           ;	DEBUG = 0x1, unprogrammed default
  1066  2007                     	org	8199
  1067  2007  20F4               	dw	8436
  1068                           
  1069                           ;Config register CONFIG2 @ 0x2008
  1070                           ;	Brown-out Reset Selection bit
  1071                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1072                           ;	Flash Program Memory Self Write Enable bits
  1073                           ;	WRT = OFF, Write protection off
  1074  2008                     	org	8200
  1075  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _isr in COMMON

    _isr->i1_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     375
                              _setup
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              4 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0      22
                                              1 COMMON     3     3      0
                            _spiRead
                         i1_spiWrite
 ---------------------------------------------------------------------------------
 (4) i1_spiWrite                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _spiInit
   _spiWrite

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   i1_spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 16:11:54 2021

            _SSPSTATbits 0094                       l62 009F                       l84 0094  
                     l68 004C                       l85 0099                       l94 00C0  
                     u70 008C                       u71 008B                      l800 002C  
                    l712 00BC                      l810 0039                      l802 002F  
                    l820 0040                      l812 003A                      l804 0032  
                    l822 0041                      l814 003B                      l806 0035  
                    l824 0042                      l816 003C                      l808 0038  
                    l826 0043                      l818 003F                      l780 0085  
                    l782 008C                      l790 0015                      l784 008E  
                    l792 001F                      l848 009A                      l786 0090  
                    l794 0023                      l788 0093                      l796 0026  
                    l798 0029                      _isr 004D                     ?_isr 0070  
          i1spiWrite@dat 0070                     i1l52 0060                     i1l54 0067  
                   i1l57 007D                     i1l91 00BA                     i1l94 00C6  
                   i1l88 00B4                     u2_20 00BA                     u2_21 00B9  
                   u8_20 0051                     u8_21 0050                     u9_20 0057  
                   u9_21 0056                     _main 009A                     btemp 007E  
                   start 000C               i1_spiWrite 00C1                    ??_isr 0071  
                  ?_main 0070                    _ANSEL 0188                    i1l102 00B3  
                  i1l704 00B4                    i1l706 00AB                    i1l708 00B0  
                  i1l830 004D                    i1l832 0051                    i1l842 006B  
                  i1l834 0057                    i1l828 00C2                    i1l844 0079  
                  i1l836 005B                    i1l838 0064                    i1l846 007C  
                  u10_20 0064                    u10_21 0063                    u11_20 006B  
                  u11_21 006A                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _SSPIF 0063  
                  _setup 0015                    pclath 000A          __end_of_spiInit 009A  
        __end_of_spiRead 00B4                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 00AB                   ??_main 0078  
                 _CAMBIO 0078                   ?_setup 0070                   _ANSELH 0189  
                 _TRISC3 043B                   _TRISC5 043D                   _SSPCON 0014  
                 _SSPBUF 0013              ?i1_spiWrite 0070                   saved_w 007E  
       __end_of_spiWrite 00C1                ??_spiInit 0077                ??_spiRead 0070  
__end_of__initialization 0011           __pcstackCOMMON 0070            __end_of_setup 004D  
    __size_ofi1_spiWrite 0006                  ??_setup 0078               __pmaintext 009A  
             __pintentry 0004  __size_of_spiReceiveWait 0007                  _SSPSTAT 0094  
              ?_spiWrite 0070                  __ptext1 00BB                  __ptext2 0015  
                __ptext3 0084                  __ptext4 004D                  __ptext5 00C1  
                __ptext6 00AB                  __ptext7 00B4             __size_of_isr 0037  
                _spiInit 0084                  _spiRead 00AB     end_of_initialization 0011  
           ??i1_spiWrite 0070               ??_spiWrite 0074                _PORTBbits 0006  
              _TRISAbits 0085       __end_ofi1_spiWrite 00C7              spiWrite@dat 0074  
         _spiReceiveWait 00B4      start_initialization 000F              __end_of_isr 0084  
 __end_of_spiReceiveWait 00BB              __pbssCOMMON 0078                ___latbits 0002  
        ?_spiReceiveWait 0070        __size_of_spiWrite 0006                 ?_spiInit 0074  
               ?_spiRead 0070           __size_of_setup 0038     spiInit@sTransmitEdge 0076  
      interrupt_function 0004                 _IOCBbits 0096       spiInit@sDataSample 0074  
       __size_of_spiInit 0016         __size_of_spiRead 0009                 _contador 0079  
          __size_of_main 0011                 _spiWrite 00BB             spiInit@sType 0077  
      spiInit@sClockIdle 0075               _INTCONbits 000B                 intlevel1 0000  
       ??_spiReceiveWait 0070  
