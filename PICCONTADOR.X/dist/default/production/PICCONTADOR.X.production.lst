

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 23:08:30 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0013                     _SSPBUF	set	19
   288  0014                     _SSPCON	set	20
   289  0007                     _PORTC	set	7
   290  0006                     _PORTB	set	6
   291  0005                     _PORTA	set	5
   292  0009                     _PORTE	set	9
   293  0008                     _PORTD	set	8
   294  0006                     _PORTBbits	set	6
   295  000B                     _INTCONbits	set	11
   296  0063                     _SSPIF	set	99
   297  0094                     _SSPSTATbits	set	148
   298  0094                     _SSPSTAT	set	148
   299  0096                     _IOCBbits	set	150
   300  0089                     _TRISE	set	137
   301  0088                     _TRISD	set	136
   302  0087                     _TRISC	set	135
   303  0086                     _TRISB	set	134
   304  0085                     _TRISA	set	133
   305  043B                     _TRISC3	set	1083
   306  043D                     _TRISC5	set	1085
   307  0189                     _ANSELH	set	393
   308  0188                     _ANSEL	set	392
   309                           
   310                           	psect	cinit
   311  000F                     start_initialization:	
   312                           ; #config settings
   313                           
   314  000F                     __initialization:
   315                           
   316                           ; Clear objects allocated to COMMON
   317  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   318  0010                     end_of_initialization:	
   319                           ;End of C runtime variable initialization code
   320                           
   321  0010                     __end_of__initialization:
   322  0010  0183               	clrf	3
   323  0011  120A  118A  289A   	ljmp	_main	;jump to C main() function
   324                           
   325                           	psect	bssCOMMON
   326  0078                     __pbssCOMMON:
   327  0078                     _contador:
   328  0078                     	ds	1
   329                           
   330                           	psect	cstackCOMMON
   331  0070                     __pcstackCOMMON:
   332  0070                     ?_spiRead:
   333  0070                     ??_spiRead:	
   334                           ; 1 bytes @ 0x0
   335                           
   336  0070                     ?_spiWrite:	
   337                           ; 1 bytes @ 0x0
   338                           
   339  0070                     ?_setup:	
   340                           ; 1 bytes @ 0x0
   341                           
   342  0070                     ?_isr:	
   343                           ; 1 bytes @ 0x0
   344                           
   345  0070                     ?_main:	
   346                           ; 1 bytes @ 0x0
   347                           
   348  0070                     ?_spiReceiveWait:	
   349                           ; 1 bytes @ 0x0
   350                           
   351  0070                     ??_spiReceiveWait:	
   352                           ; 1 bytes @ 0x0
   353                           
   354  0070                     ?i1_spiWrite:	
   355                           ; 1 bytes @ 0x0
   356                           
   357  0070                     ??i1_spiWrite:	
   358                           ; 1 bytes @ 0x0
   359                           
   360  0070                     i1spiWrite@dat:	
   361                           ; 1 bytes @ 0x0
   362                           
   363                           
   364                           ; 1 bytes @ 0x0
   365  0070                     	ds	1
   366  0071                     ??_isr:
   367                           
   368                           ; 1 bytes @ 0x1
   369  0071                     	ds	3
   370  0074                     ??_spiWrite:
   371  0074                     ?_spiInit:	
   372                           ; 1 bytes @ 0x4
   373                           
   374  0074                     spiInit@sDataSample:	
   375                           ; 1 bytes @ 0x4
   376                           
   377  0074                     spiWrite@dat:	
   378                           ; 1 bytes @ 0x4
   379                           
   380                           
   381                           ; 1 bytes @ 0x4
   382  0074                     	ds	1
   383  0075                     spiInit@sClockIdle:
   384                           
   385                           ; 1 bytes @ 0x5
   386  0075                     	ds	1
   387  0076                     spiInit@sTransmitEdge:
   388                           
   389                           ; 1 bytes @ 0x6
   390  0076                     	ds	1
   391  0077                     ??_spiInit:
   392  0077                     spiInit@sType:	
   393                           ; 1 bytes @ 0x7
   394                           
   395                           
   396                           ; 1 bytes @ 0x7
   397  0077                     	ds	1
   398  0078                     ??_setup:
   399  0078                     ??_main:	
   400                           ; 1 bytes @ 0x8
   401                           
   402                           
   403                           	psect	maintext
   404  009A                     __pmaintext:	
   405                           ; 1 bytes @ 0x8
   406 ;;
   407 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   408 ;;
   409 ;; *************** function _main *****************
   410 ;; Defined at:
   411 ;;		line 76 in file "PICCONTADOR.c"
   412 ;; Parameters:    Size  Location     Type
   413 ;;		None
   414 ;; Auto vars:     Size  Location     Type
   415 ;;		None
   416 ;; Return value:  Size  Location     Type
   417 ;;                  1    wreg      void 
   418 ;; Registers used:
   419 ;;		wreg, status,2, status,0, pclath, cstack
   420 ;; Tracked objects:
   421 ;;		On entry : B00/0
   422 ;;		On exit  : 0/0
   423 ;;		Unchanged: 0/0
   424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   425 ;;      Params:         0       0       0       0       0
   426 ;;      Locals:         0       0       0       0       0
   427 ;;      Temps:          0       0       0       0       0
   428 ;;      Totals:         0       0       0       0       0
   429 ;;Total ram usage:        0 bytes
   430 ;; Hardware stack levels required when called:    5
   431 ;; This function calls:
   432 ;;		_setup
   433 ;;		_spiWrite
   434 ;; This function is called by:
   435 ;;		Startup code after reset
   436 ;; This function uses a non-reentrant model
   437 ;;
   438                           
   439                           
   440                           ;psect for function _main
   441  009A                     _main:
   442  009A                     l824:	
   443                           ;incstack = 0
   444                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   445                           
   446                           
   447                           ;PICCONTADOR.c: 77:     setup();
   448  009A  120A  118A  2014  120A  118A  	fcall	_setup
   449  009F                     l58:	
   450                           ;PICCONTADOR.c: 78:     while (1) {
   451                           
   452                           
   453                           ;PICCONTADOR.c: 79:         spiWrite(PORTD);
   454  009F  1283               	bcf	3,5	;RP0=0, select bank0
   455  00A0  1303               	bcf	3,6	;RP1=0, select bank0
   456  00A1  0808               	movf	8,w	;volatile
   457  00A2  120A  118A  20BB  120A  118A  	fcall	_spiWrite
   458  00A7  289F               	goto	l58
   459  00A8  120A  118A  280C   	ljmp	start
   460  00AB                     __end_of_main:
   461                           
   462                           	psect	text1
   463  00BB                     __ptext1:	
   464 ;; *************** function _spiWrite *****************
   465 ;; Defined at:
   466 ;;		line 34 in file "SPI.c"
   467 ;; Parameters:    Size  Location     Type
   468 ;;  dat             1    wreg     unsigned char 
   469 ;; Auto vars:     Size  Location     Type
   470 ;;  dat             1    4[COMMON] unsigned char 
   471 ;; Return value:  Size  Location     Type
   472 ;;                  1    wreg      void 
   473 ;; Registers used:
   474 ;;		wreg
   475 ;; Tracked objects:
   476 ;;		On entry : 0/0
   477 ;;		On exit  : 0/0
   478 ;;		Unchanged: 0/0
   479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   480 ;;      Params:         0       0       0       0       0
   481 ;;      Locals:         1       0       0       0       0
   482 ;;      Temps:          0       0       0       0       0
   483 ;;      Totals:         1       0       0       0       0
   484 ;;Total ram usage:        1 bytes
   485 ;; Hardware stack levels used:    1
   486 ;; Hardware stack levels required when called:    3
   487 ;; This function calls:
   488 ;;		Nothing
   489 ;; This function is called by:
   490 ;;		_main
   491 ;; This function uses a non-reentrant model
   492 ;;
   493                           
   494                           
   495                           ;psect for function _spiWrite
   496  00BB                     _spiWrite:
   497                           
   498                           ;incstack = 0
   499                           ; Regs used in _spiWrite: [wreg]
   500                           ;spiWrite@dat stored from wreg
   501  00BB  00F4               	movwf	spiWrite@dat
   502  00BC                     l708:
   503                           
   504                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
   505  00BC  0874               	movf	spiWrite@dat,w
   506  00BD  1283               	bcf	3,5	;RP0=0, select bank0
   507  00BE  1303               	bcf	3,6	;RP1=0, select bank0
   508  00BF  0093               	movwf	19	;volatile
   509  00C0                     l90:
   510  00C0  0008               	return
   511  00C1                     __end_of_spiWrite:
   512                           
   513                           	psect	text2
   514  0014                     __ptext2:	
   515 ;; *************** function _setup *****************
   516 ;; Defined at:
   517 ;;		line 89 in file "PICCONTADOR.c"
   518 ;; Parameters:    Size  Location     Type
   519 ;;		None
   520 ;; Auto vars:     Size  Location     Type
   521 ;;		None
   522 ;; Return value:  Size  Location     Type
   523 ;;                  1    wreg      void 
   524 ;; Registers used:
   525 ;;		wreg, status,2, status,0, pclath, cstack
   526 ;; Tracked objects:
   527 ;;		On entry : 0/0
   528 ;;		On exit  : 0/0
   529 ;;		Unchanged: 0/0
   530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   531 ;;      Params:         0       0       0       0       0
   532 ;;      Locals:         0       0       0       0       0
   533 ;;      Temps:          0       0       0       0       0
   534 ;;      Totals:         0       0       0       0       0
   535 ;;Total ram usage:        0 bytes
   536 ;; Hardware stack levels used:    1
   537 ;; Hardware stack levels required when called:    4
   538 ;; This function calls:
   539 ;;		_spiInit
   540 ;; This function is called by:
   541 ;;		_main
   542 ;; This function uses a non-reentrant model
   543 ;;
   544                           
   545                           
   546                           ;psect for function _setup
   547  0014                     _setup:
   548  0014                     l776:	
   549                           ;incstack = 0
   550                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   551                           
   552                           
   553                           ;PICCONTADOR.c: 91:     ANSEL = 0;
   554  0014  1683               	bsf	3,5	;RP0=1, select bank3
   555  0015  1703               	bsf	3,6	;RP1=1, select bank3
   556  0016  0188               	clrf	8	;volatile
   557                           
   558                           ;PICCONTADOR.c: 92:     ANSELH = 0;
   559  0017  0189               	clrf	9	;volatile
   560  0018                     l778:
   561                           
   562                           ;PICCONTADOR.c: 93:     TRISA = 0b00100000;
   563  0018  3020               	movlw	32
   564  0019  1683               	bsf	3,5	;RP0=1, select bank1
   565  001A  1303               	bcf	3,6	;RP1=0, select bank1
   566  001B  0085               	movwf	5	;volatile
   567  001C                     l780:
   568                           
   569                           ;PICCONTADOR.c: 94:     PORTA = 0;
   570  001C  1283               	bcf	3,5	;RP0=0, select bank0
   571  001D  1303               	bcf	3,6	;RP1=0, select bank0
   572  001E  0185               	clrf	5	;volatile
   573                           
   574                           ;PICCONTADOR.c: 95:     TRISB = 0b00000011;
   575  001F  3003               	movlw	3
   576  0020  1683               	bsf	3,5	;RP0=1, select bank1
   577  0021  1303               	bcf	3,6	;RP1=0, select bank1
   578  0022  0086               	movwf	6	;volatile
   579  0023                     l782:
   580                           
   581                           ;PICCONTADOR.c: 96:     PORTB = 0;
   582  0023  1283               	bcf	3,5	;RP0=0, select bank0
   583  0024  1303               	bcf	3,6	;RP1=0, select bank0
   584  0025  0186               	clrf	6	;volatile
   585  0026                     l784:
   586                           
   587                           ;PICCONTADOR.c: 97:     TRISC = 0b00011000;
   588  0026  3018               	movlw	24
   589  0027  1683               	bsf	3,5	;RP0=1, select bank1
   590  0028  1303               	bcf	3,6	;RP1=0, select bank1
   591  0029  0087               	movwf	7	;volatile
   592                           
   593                           ;PICCONTADOR.c: 98:     PORTC = 0;
   594  002A  1283               	bcf	3,5	;RP0=0, select bank0
   595  002B  1303               	bcf	3,6	;RP1=0, select bank0
   596  002C  0187               	clrf	7	;volatile
   597                           
   598                           ;PICCONTADOR.c: 99:     TRISD = 0;
   599  002D  1683               	bsf	3,5	;RP0=1, select bank1
   600  002E  1303               	bcf	3,6	;RP1=0, select bank1
   601  002F  0188               	clrf	8	;volatile
   602                           
   603                           ;PICCONTADOR.c: 100:     PORTD = 0;
   604  0030  1283               	bcf	3,5	;RP0=0, select bank0
   605  0031  1303               	bcf	3,6	;RP1=0, select bank0
   606  0032  0188               	clrf	8	;volatile
   607                           
   608                           ;PICCONTADOR.c: 101:     TRISE = 0;
   609  0033  1683               	bsf	3,5	;RP0=1, select bank1
   610  0034  1303               	bcf	3,6	;RP1=0, select bank1
   611  0035  0189               	clrf	9	;volatile
   612                           
   613                           ;PICCONTADOR.c: 102:     PORTE = 0;
   614  0036  1283               	bcf	3,5	;RP0=0, select bank0
   615  0037  1303               	bcf	3,6	;RP1=0, select bank0
   616  0038  0189               	clrf	9	;volatile
   617  0039                     l786:
   618                           
   619                           ;PICCONTADOR.c: 103:     INTCONbits.GIE = 1;
   620  0039  178B               	bsf	11,7	;volatile
   621  003A                     l788:
   622                           
   623                           ;PICCONTADOR.c: 104:     INTCONbits.PEIE = 1;
   624  003A  170B               	bsf	11,6	;volatile
   625  003B                     l790:
   626                           
   627                           ;PICCONTADOR.c: 105:     INTCONbits.RBIE = 1;
   628  003B  158B               	bsf	11,3	;volatile
   629  003C                     l792:
   630                           
   631                           ;PICCONTADOR.c: 106:     INTCONbits.RBIF = 0;
   632  003C  100B               	bcf	11,0	;volatile
   633  003D                     l794:
   634                           
   635                           ;PICCONTADOR.c: 107:     IOCBbits.IOCB0 = 1;
   636  003D  1683               	bsf	3,5	;RP0=1, select bank1
   637  003E  1303               	bcf	3,6	;RP1=0, select bank1
   638  003F  1416               	bsf	22,0	;volatile
   639  0040                     l796:
   640                           
   641                           ;PICCONTADOR.c: 108:     IOCBbits.IOCB1 = 1;
   642  0040  1496               	bsf	22,1	;volatile
   643  0041                     l798:
   644                           
   645                           ;PICCONTADOR.c: 110:     INTCONbits.GIE = 1;
   646  0041  178B               	bsf	11,7	;volatile
   647  0042                     l800:
   648                           
   649                           ;PICCONTADOR.c: 111:     INTCONbits.PEIE = 1;
   650  0042  170B               	bsf	11,6	;volatile
   651  0043                     l802:
   652                           
   653                           ;PICCONTADOR.c: 114:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE
      +                          _LOW, SPI_IDLE_2_ACTIVE);
   654  0043  01F4               	clrf	spiInit@sDataSample
   655  0044  01F5               	clrf	spiInit@sClockIdle
   656  0045  01F6               	clrf	spiInit@sTransmitEdge
   657  0046  3024               	movlw	36
   658  0047  120A  118A  2084  120A  118A  	fcall	_spiInit
   659  004C                     l64:
   660  004C  0008               	return
   661  004D                     __end_of_setup:
   662                           
   663                           	psect	text3
   664  0084                     __ptext3:	
   665 ;; *************** function _spiInit *****************
   666 ;; Defined at:
   667 ;;		line 12 in file "SPI.c"
   668 ;; Parameters:    Size  Location     Type
   669 ;;  sType           1    wreg     enum E1264
   670 ;;  sDataSample     1    4[COMMON] enum E1272
   671 ;;  sClockIdle      1    5[COMMON] enum E1276
   672 ;;  sTransmitEdg    1    6[COMMON] enum E1280
   673 ;; Auto vars:     Size  Location     Type
   674 ;;  sType           1    7[COMMON] enum E1264
   675 ;; Return value:  Size  Location     Type
   676 ;;                  1    wreg      void 
   677 ;; Registers used:
   678 ;;		wreg, status,2, status,0
   679 ;; Tracked objects:
   680 ;;		On entry : 0/0
   681 ;;		On exit  : 0/0
   682 ;;		Unchanged: 0/0
   683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   684 ;;      Params:         3       0       0       0       0
   685 ;;      Locals:         1       0       0       0       0
   686 ;;      Temps:          0       0       0       0       0
   687 ;;      Totals:         4       0       0       0       0
   688 ;;Total ram usage:        4 bytes
   689 ;; Hardware stack levels used:    1
   690 ;; Hardware stack levels required when called:    3
   691 ;; This function calls:
   692 ;;		Nothing
   693 ;; This function is called by:
   694 ;;		_setup
   695 ;; This function uses a non-reentrant model
   696 ;;
   697                           
   698                           
   699                           ;psect for function _spiInit
   700  0084                     _spiInit:
   701                           
   702                           ;incstack = 0
   703                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   704                           ;spiInit@sType stored from wreg
   705  0084  00F7               	movwf	spiInit@sType
   706  0085                     l766:
   707                           
   708                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   709  0085  1683               	bsf	3,5	;RP0=1, select bank1
   710  0086  1303               	bcf	3,6	;RP1=0, select bank1
   711  0087  1287               	bcf	7,5	;volatile
   712                           
   713                           ;SPI.c: 15:     if(sType & 0b00000100)
   714  0088  1D77               	btfss	spiInit@sType,2
   715  0089  288B               	goto	u71
   716  008A  288C               	goto	u70
   717  008B                     u71:
   718  008B  2890               	goto	l772
   719  008C                     u70:
   720  008C                     l768:
   721                           
   722                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   723  008C  0876               	movf	spiInit@sTransmitEdge,w
   724  008D  0094               	movwf	20	;volatile
   725  008E                     l770:
   726                           
   727                           ;SPI.c: 18:         TRISC3 = 1;
   728  008E  1587               	bsf	7,3	;volatile
   729                           
   730                           ;SPI.c: 19:     }
   731  008F  2894               	goto	l80
   732  0090                     l772:
   733                           
   734                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   735  0090  0874               	movf	spiInit@sDataSample,w
   736  0091  0476               	iorwf	spiInit@sTransmitEdge,w
   737  0092  0094               	movwf	20	;volatile
   738  0093                     l774:
   739                           
   740                           ;SPI.c: 23:         TRISC3 = 0;
   741  0093  1187               	bcf	7,3	;volatile
   742  0094                     l80:	
   743                           ;SPI.c: 24:     }
   744                           
   745                           
   746                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   747  0094  0877               	movf	spiInit@sType,w
   748  0095  0475               	iorwf	spiInit@sClockIdle,w
   749  0096  1283               	bcf	3,5	;RP0=0, select bank0
   750  0097  1303               	bcf	3,6	;RP1=0, select bank0
   751  0098  0094               	movwf	20	;volatile
   752  0099                     l81:
   753  0099  0008               	return
   754  009A                     __end_of_spiInit:
   755                           
   756                           	psect	text4
   757  004D                     __ptext4:	
   758 ;; *************** function _isr *****************
   759 ;; Defined at:
   760 ;;		line 48 in file "PICCONTADOR.c"
   761 ;; Parameters:    Size  Location     Type
   762 ;;		None
   763 ;; Auto vars:     Size  Location     Type
   764 ;;		None
   765 ;; Return value:  Size  Location     Type
   766 ;;                  1    wreg      void 
   767 ;; Registers used:
   768 ;;		wreg, status,2, status,0, pclath, cstack
   769 ;; Tracked objects:
   770 ;;		On entry : 0/0
   771 ;;		On exit  : 0/0
   772 ;;		Unchanged: 0/0
   773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   774 ;;      Params:         0       0       0       0       0
   775 ;;      Locals:         0       0       0       0       0
   776 ;;      Temps:          3       0       0       0       0
   777 ;;      Totals:         3       0       0       0       0
   778 ;;Total ram usage:        3 bytes
   779 ;; Hardware stack levels used:    1
   780 ;; Hardware stack levels required when called:    2
   781 ;; This function calls:
   782 ;;		_spiRead
   783 ;;		i1_spiWrite
   784 ;; This function is called by:
   785 ;;		Interrupt level 1
   786 ;; This function uses a non-reentrant model
   787 ;;
   788                           
   789                           
   790                           ;psect for function _isr
   791  004D                     _isr:
   792  004D                     i1l806:
   793  004D  1C0B               	btfss	11,0	;volatile
   794  004E  2850               	goto	u8_21
   795  004F  2851               	goto	u8_20
   796  0050                     u8_21:
   797  0050  287D               	goto	i1l53
   798  0051                     u8_20:
   799  0051                     i1l808:
   800  0051  1283               	bcf	3,5	;RP0=0, select bank0
   801  0052  1303               	bcf	3,6	;RP1=0, select bank0
   802  0053  1C06               	btfss	6,0	;volatile
   803  0054  2856               	goto	u9_21
   804  0055  2857               	goto	u9_20
   805  0056                     u9_21:
   806  0056  2860               	goto	i1l48
   807  0057                     u9_20:
   808  0057                     i1l810:
   809  0057  3001               	movlw	1
   810  0058  00F1               	movwf	??_isr
   811  0059  0871               	movf	??_isr,w
   812  005A  0788               	addwf	8,f	;volatile
   813  005B                     i1l812:
   814  005B  0808               	movf	8,w	;volatile
   815  005C  00F1               	movwf	??_isr
   816  005D  0871               	movf	??_isr,w
   817  005E  00F8               	movwf	_contador
   818  005F  287C               	goto	i1l822
   819  0060                     i1l48:
   820  0060  1C86               	btfss	6,1	;volatile
   821  0061  2863               	goto	u10_21
   822  0062  2864               	goto	u10_20
   823  0063                     u10_21:
   824  0063  2867               	goto	i1l50
   825  0064                     u10_20:
   826  0064                     i1l814:
   827  0064  3001               	movlw	1
   828  0065  0288               	subwf	8,f	;volatile
   829  0066  285B               	goto	i1l812
   830  0067                     i1l50:
   831  0067  1D8C               	btfss	12,3	;volatile
   832  0068  286A               	goto	u11_21
   833  0069  286B               	goto	u11_20
   834  006A                     u11_21:
   835  006A  287C               	goto	i1l822
   836  006B                     u11_20:
   837  006B                     i1l818:
   838  006B  120A  118A  20AB  120A  118A  	fcall	_spiRead
   839  0070  1283               	bcf	3,5	;RP0=0, select bank0
   840  0071  1303               	bcf	3,6	;RP1=0, select bank0
   841  0072  0089               	movwf	9	;volatile
   842  0073  0808               	movf	8,w	;volatile
   843  0074  120A  118A  20C1  120A  118A  	fcall	i1_spiWrite
   844  0079                     i1l820:
   845  0079  1283               	bcf	3,5	;RP0=0, select bank0
   846  007A  1303               	bcf	3,6	;RP1=0, select bank0
   847  007B  118C               	bcf	12,3	;volatile
   848  007C                     i1l822:
   849  007C  100B               	bcf	11,0	;volatile
   850  007D                     i1l53:
   851  007D  0873               	movf	??_isr+2,w
   852  007E  008A               	movwf	10
   853  007F  0E72               	swapf	??_isr+1,w
   854  0080  0083               	movwf	3
   855  0081  0EFE               	swapf	btemp,f
   856  0082  0E7E               	swapf	btemp,w
   857  0083  0009               	retfie
   858  0084                     __end_of_isr:
   859                           
   860                           	psect	intentry
   861  0004                     __pintentry:	
   862                           ;incstack = 0
   863                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
   864                           
   865  0004                     interrupt_function:
   866  007E                     saved_w	set	btemp
   867  0004  00FE               	movwf	btemp
   868  0005  0E03               	swapf	3,w
   869  0006  00F2               	movwf	??_isr+1
   870  0007  080A               	movf	10,w
   871  0008  00F3               	movwf	??_isr+2
   872  0009  120A  118A  284D   	ljmp	_isr
   873                           
   874                           	psect	text5
   875  00C1                     __ptext5:	
   876 ;; *************** function i1_spiWrite *****************
   877 ;; Defined at:
   878 ;;		line 34 in file "SPI.c"
   879 ;; Parameters:    Size  Location     Type
   880 ;;  dat             1    wreg     unsigned char 
   881 ;; Auto vars:     Size  Location     Type
   882 ;;  dat             1    0[COMMON] unsigned char 
   883 ;; Return value:  Size  Location     Type
   884 ;;                  1    wreg      void 
   885 ;; Registers used:
   886 ;;		wreg
   887 ;; Tracked objects:
   888 ;;		On entry : 0/0
   889 ;;		On exit  : 0/0
   890 ;;		Unchanged: 0/0
   891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   892 ;;      Params:         0       0       0       0       0
   893 ;;      Locals:         1       0       0       0       0
   894 ;;      Temps:          0       0       0       0       0
   895 ;;      Totals:         1       0       0       0       0
   896 ;;Total ram usage:        1 bytes
   897 ;; Hardware stack levels used:    1
   898 ;; This function calls:
   899 ;;		Nothing
   900 ;; This function is called by:
   901 ;;		_isr
   902 ;; This function uses a non-reentrant model
   903 ;;
   904                           
   905                           
   906                           ;psect for function i1_spiWrite
   907  00C1                     i1_spiWrite:
   908                           
   909                           ;incstack = 0
   910                           ; Regs used in i1_spiWrite: [wreg]
   911                           ;i1spiWrite@dat stored from wreg
   912  00C1  00F0               	movwf	i1spiWrite@dat
   913  00C2                     i1l804:
   914                           
   915                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
   916  00C2  0870               	movf	i1spiWrite@dat,w
   917  00C3  1283               	bcf	3,5	;RP0=0, select bank0
   918  00C4  1303               	bcf	3,6	;RP1=0, select bank0
   919  00C5  0093               	movwf	19	;volatile
   920  00C6                     i1l90:
   921  00C6  0008               	return
   922  00C7                     __end_ofi1_spiWrite:
   923                           
   924                           	psect	text6
   925  00AB                     __ptext6:	
   926 ;; *************** function _spiRead *****************
   927 ;; Defined at:
   928 ;;		line 47 in file "SPI.c"
   929 ;; Parameters:    Size  Location     Type
   930 ;;		None
   931 ;; Auto vars:     Size  Location     Type
   932 ;;		None
   933 ;; Return value:  Size  Location     Type
   934 ;;                  1    wreg      unsigned char 
   935 ;; Registers used:
   936 ;;		wreg, status,2, status,0, pclath, cstack
   937 ;; Tracked objects:
   938 ;;		On entry : 0/0
   939 ;;		On exit  : 0/0
   940 ;;		Unchanged: 0/0
   941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   942 ;;      Params:         0       0       0       0       0
   943 ;;      Locals:         0       0       0       0       0
   944 ;;      Temps:          0       0       0       0       0
   945 ;;      Totals:         0       0       0       0       0
   946 ;;Total ram usage:        0 bytes
   947 ;; Hardware stack levels used:    1
   948 ;; Hardware stack levels required when called:    1
   949 ;; This function calls:
   950 ;;		_spiReceiveWait
   951 ;; This function is called by:
   952 ;;		_isr
   953 ;; This function uses a non-reentrant model
   954 ;;
   955                           
   956                           
   957                           ;psect for function _spiRead
   958  00AB                     _spiRead:
   959  00AB                     i1l702:	
   960                           ;incstack = 0
   961                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   962                           
   963                           
   964                           ;SPI.c: 49:     spiReceiveWait();
   965  00AB  120A  118A  20B4  120A  118A  	fcall	_spiReceiveWait
   966  00B0                     i1l704:
   967                           
   968                           ;SPI.c: 50:     return(SSPBUF);
   969  00B0  1283               	bcf	3,5	;RP0=0, select bank0
   970  00B1  1303               	bcf	3,6	;RP1=0, select bank0
   971  00B2  0813               	movf	19,w	;volatile
   972  00B3                     i1l98:
   973  00B3  0008               	return
   974  00B4                     __end_of_spiRead:
   975                           
   976                           	psect	text7
   977  00B4                     __ptext7:	
   978 ;; *************** function _spiReceiveWait *****************
   979 ;; Defined at:
   980 ;;		line 29 in file "SPI.c"
   981 ;; Parameters:    Size  Location     Type
   982 ;;		None
   983 ;; Auto vars:     Size  Location     Type
   984 ;;		None
   985 ;; Return value:  Size  Location     Type
   986 ;;                  1    wreg      void 
   987 ;; Registers used:
   988 ;;		None
   989 ;; Tracked objects:
   990 ;;		On entry : 0/0
   991 ;;		On exit  : 0/0
   992 ;;		Unchanged: 0/0
   993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   994 ;;      Params:         0       0       0       0       0
   995 ;;      Locals:         0       0       0       0       0
   996 ;;      Temps:          0       0       0       0       0
   997 ;;      Totals:         0       0       0       0       0
   998 ;;Total ram usage:        0 bytes
   999 ;; Hardware stack levels used:    1
  1000 ;; This function calls:
  1001 ;;		Nothing
  1002 ;; This function is called by:
  1003 ;;		_spiRead
  1004 ;; This function uses a non-reentrant model
  1005 ;;
  1006                           
  1007                           
  1008                           ;psect for function _spiReceiveWait
  1009  00B4                     _spiReceiveWait:
  1010  00B4                     i1l700:	
  1011                           ;incstack = 0
  1012                           ; Regs used in _spiReceiveWait: []
  1013                           
  1014  00B4                     i1l84:	
  1015                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  1016                           
  1017  00B4  1683               	bsf	3,5	;RP0=1, select bank1
  1018  00B5  1303               	bcf	3,6	;RP1=0, select bank1
  1019  00B6  1C14               	btfss	20,0	;volatile
  1020  00B7  28B9               	goto	u2_21
  1021  00B8  28BA               	goto	u2_20
  1022  00B9                     u2_21:
  1023  00B9  28B4               	goto	i1l84
  1024  00BA                     u2_20:
  1025  00BA                     i1l87:
  1026  00BA  0008               	return
  1027  00BB                     __end_of_spiReceiveWait:
  1028  007E                     btemp	set	126	;btemp
  1029  007E                     wtemp0	set	126
  1030                           
  1031                           	psect	config
  1032                           
  1033                           ;Config register CONFIG1 @ 0x2007
  1034                           ;	Oscillator Selection bits
  1035                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1036                           ;	Watchdog Timer Enable bit
  1037                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1038                           ;	Power-up Timer Enable bit
  1039                           ;	PWRTE = OFF, PWRT disabled
  1040                           ;	RE3/MCLR pin function select bit
  1041                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1042                           ;	Code Protection bit
  1043                           ;	CP = OFF, Program memory code protection is disabled
  1044                           ;	Data Code Protection bit
  1045                           ;	CPD = OFF, Data memory code protection is disabled
  1046                           ;	Brown Out Reset Selection bits
  1047                           ;	BOREN = OFF, BOR disabled
  1048                           ;	Internal External Switchover bit
  1049                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1050                           ;	Fail-Safe Clock Monitor Enabled bit
  1051                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1052                           ;	Low Voltage Programming Enable bit
  1053                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1054                           ;	In-Circuit Debugger Mode bit
  1055                           ;	DEBUG = 0x1, unprogrammed default
  1056  2007                     	org	8199
  1057  2007  20F4               	dw	8436
  1058                           
  1059                           ;Config register CONFIG2 @ 0x2008
  1060                           ;	Brown-out Reset Selection bit
  1061                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1062                           ;	Flash Program Memory Self Write Enable bits
  1063                           ;	WRT = OFF, Write protection off
  1064  2008                     	org	8200
  1065  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _isr in COMMON

    _isr->i1_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     375
                              _setup
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              4 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0      22
                                              1 COMMON     3     3      0
                            _spiRead
                         i1_spiWrite
 ---------------------------------------------------------------------------------
 (4) i1_spiWrite                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _spiInit
   _spiWrite

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   i1_spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 23:08:30 2021

            _SSPSTATbits 0094                       l80 0094                       l64 004C  
                     l81 0099                       l90 00C0                       l58 009F  
                     u70 008C                       u71 008B                      l800 0042  
                    l802 0043                      l708 00BC                      l824 009A  
                    l770 008E                      l772 0090                      l780 001C  
                    l774 0093                      l766 0085                      l790 003B  
                    l782 0023                      l768 008C                      l792 003C  
                    l784 0026                      l776 0014                      l794 003D  
                    l786 0039                      l778 0018                      l796 0040  
                    l788 003A                      l798 0041                      _isr 004D  
                   ?_isr 0070            i1spiWrite@dat 0070                     i1l50 0067  
                   i1l53 007D                     i1l48 0060                     i1l90 00C6  
                   i1l84 00B4                     i1l87 00BA                     i1l98 00B3  
                   u2_20 00BA                     u2_21 00B9                     u8_20 0051  
                   u8_21 0050                     u9_20 0057                     u9_21 0056  
                   _main 009A                     btemp 007E                     start 000C  
             i1_spiWrite 00C1                    ??_isr 0071                    ?_main 0070  
                  _ANSEL 0188                    i1l700 00B4                    i1l702 00AB  
                  i1l704 00B0                    i1l810 0057                    i1l804 00C2  
                  i1l820 0079                    i1l812 005B                    i1l814 0064  
                  i1l822 007C                    i1l806 004D                    i1l808 0051  
                  i1l818 006B                    u10_20 0064                    u10_21 0063  
                  u11_20 006B                    u11_21 006A                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  _SSPIF 0063                    _setup 0014                    pclath 000A  
        __end_of_spiInit 009A          __end_of_spiRead 00B4                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 00AB  
                 ??_main 0078                   ?_setup 0070                   _ANSELH 0189  
                 _TRISC3 043B                   _TRISC5 043D                   _SSPCON 0014  
                 _SSPBUF 0013              ?i1_spiWrite 0070                   saved_w 007E  
       __end_of_spiWrite 00C1                ??_spiInit 0077                ??_spiRead 0070  
__end_of__initialization 0010           __pcstackCOMMON 0070            __end_of_setup 004D  
    __size_ofi1_spiWrite 0006                  ??_setup 0078               __pmaintext 009A  
             __pintentry 0004  __size_of_spiReceiveWait 0007                  _SSPSTAT 0094  
              ?_spiWrite 0070                  __ptext1 00BB                  __ptext2 0014  
                __ptext3 0084                  __ptext4 004D                  __ptext5 00C1  
                __ptext6 00AB                  __ptext7 00B4             __size_of_isr 0037  
                _spiInit 0084                  _spiRead 00AB     end_of_initialization 0010  
           ??i1_spiWrite 0070               ??_spiWrite 0074                _PORTBbits 0006  
     __end_ofi1_spiWrite 00C7              spiWrite@dat 0074           _spiReceiveWait 00B4  
    start_initialization 000F              __end_of_isr 0084   __end_of_spiReceiveWait 00BB  
            __pbssCOMMON 0078                ___latbits 0002          ?_spiReceiveWait 0070  
      __size_of_spiWrite 0006                 ?_spiInit 0074                 ?_spiRead 0070  
         __size_of_setup 0039     spiInit@sTransmitEdge 0076        interrupt_function 0004  
               _IOCBbits 0096       spiInit@sDataSample 0074         __size_of_spiInit 0016  
       __size_of_spiRead 0009                 _contador 0078            __size_of_main 0011  
               _spiWrite 00BB             spiInit@sType 0077        spiInit@sClockIdle 0075  
             _INTCONbits 000B                 intlevel1 0000         ??_spiReceiveWait 0070  
