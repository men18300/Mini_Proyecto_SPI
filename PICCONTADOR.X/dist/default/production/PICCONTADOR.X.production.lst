

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 22:03:04 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0013                     _SSPBUF	set	19
   288  0014                     _SSPCON	set	20
   289  0007                     _PORTC	set	7
   290  0006                     _PORTB	set	6
   291  0005                     _PORTA	set	5
   292  0009                     _PORTE	set	9
   293  0008                     _PORTD	set	8
   294  0006                     _PORTBbits	set	6
   295  000B                     _INTCONbits	set	11
   296  0063                     _SSPIF	set	99
   297  0094                     _SSPSTATbits	set	148
   298  0094                     _SSPSTAT	set	148
   299  0085                     _TRISAbits	set	133
   300  0096                     _IOCBbits	set	150
   301  0089                     _TRISE	set	137
   302  0088                     _TRISD	set	136
   303  0087                     _TRISC	set	135
   304  0086                     _TRISB	set	134
   305  0085                     _TRISA	set	133
   306  043B                     _TRISC3	set	1083
   307  043D                     _TRISC5	set	1085
   308  0189                     _ANSELH	set	393
   309  0188                     _ANSEL	set	392
   310                           
   311                           	psect	cinit
   312  000F                     start_initialization:	
   313                           ; #config settings
   314                           
   315  000F                     __initialization:
   316                           
   317                           ; Clear objects allocated to COMMON
   318  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   319  0010                     end_of_initialization:	
   320                           ;End of C runtime variable initialization code
   321                           
   322  0010                     __end_of__initialization:
   323  0010  0183               	clrf	3
   324  0011  120A  118A  2899   	ljmp	_main	;jump to C main() function
   325                           
   326                           	psect	bssCOMMON
   327  0078                     __pbssCOMMON:
   328  0078                     _contador:
   329  0078                     	ds	1
   330                           
   331                           	psect	cstackCOMMON
   332  0070                     __pcstackCOMMON:
   333  0070                     ?_spiRead:
   334  0070                     ??_spiRead:	
   335                           ; 1 bytes @ 0x0
   336                           
   337  0070                     ?_spiWrite:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  0070                     ?_setup:	
   341                           ; 1 bytes @ 0x0
   342                           
   343  0070                     ?_isr:	
   344                           ; 1 bytes @ 0x0
   345                           
   346  0070                     ?_main:	
   347                           ; 1 bytes @ 0x0
   348                           
   349  0070                     ?_spiReceiveWait:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  0070                     ??_spiReceiveWait:	
   353                           ; 1 bytes @ 0x0
   354                           
   355  0070                     ?i1_spiWrite:	
   356                           ; 1 bytes @ 0x0
   357                           
   358  0070                     ??i1_spiWrite:	
   359                           ; 1 bytes @ 0x0
   360                           
   361  0070                     i1spiWrite@dat:	
   362                           ; 1 bytes @ 0x0
   363                           
   364                           
   365                           ; 1 bytes @ 0x0
   366  0070                     	ds	1
   367  0071                     ??_isr:
   368                           
   369                           ; 1 bytes @ 0x1
   370  0071                     	ds	3
   371  0074                     ??_spiWrite:
   372  0074                     ?_spiInit:	
   373                           ; 1 bytes @ 0x4
   374                           
   375  0074                     spiInit@sDataSample:	
   376                           ; 1 bytes @ 0x4
   377                           
   378  0074                     spiWrite@dat:	
   379                           ; 1 bytes @ 0x4
   380                           
   381                           
   382                           ; 1 bytes @ 0x4
   383  0074                     	ds	1
   384  0075                     spiInit@sClockIdle:
   385                           
   386                           ; 1 bytes @ 0x5
   387  0075                     	ds	1
   388  0076                     spiInit@sTransmitEdge:
   389                           
   390                           ; 1 bytes @ 0x6
   391  0076                     	ds	1
   392  0077                     ??_spiInit:
   393  0077                     spiInit@sType:	
   394                           ; 1 bytes @ 0x7
   395                           
   396                           
   397                           ; 1 bytes @ 0x7
   398  0077                     	ds	1
   399  0078                     ??_setup:
   400  0078                     ??_main:	
   401                           ; 1 bytes @ 0x8
   402                           
   403                           
   404                           	psect	maintext
   405  0099                     __pmaintext:	
   406                           ; 1 bytes @ 0x8
   407 ;;
   408 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   409 ;;
   410 ;; *************** function _main *****************
   411 ;; Defined at:
   412 ;;		line 76 in file "PICCONTADOR.c"
   413 ;; Parameters:    Size  Location     Type
   414 ;;		None
   415 ;; Auto vars:     Size  Location     Type
   416 ;;		None
   417 ;; Return value:  Size  Location     Type
   418 ;;                  1    wreg      void 
   419 ;; Registers used:
   420 ;;		wreg, status,2, status,0, pclath, cstack
   421 ;; Tracked objects:
   422 ;;		On entry : B00/0
   423 ;;		On exit  : 0/0
   424 ;;		Unchanged: 0/0
   425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   426 ;;      Params:         0       0       0       0       0
   427 ;;      Locals:         0       0       0       0       0
   428 ;;      Temps:          0       0       0       0       0
   429 ;;      Totals:         0       0       0       0       0
   430 ;;Total ram usage:        0 bytes
   431 ;; Hardware stack levels required when called:    5
   432 ;; This function calls:
   433 ;;		_setup
   434 ;;		_spiWrite
   435 ;; This function is called by:
   436 ;;		Startup code after reset
   437 ;; This function uses a non-reentrant model
   438 ;;
   439                           
   440                           
   441                           ;psect for function _main
   442  0099                     _main:
   443  0099                     l846:	
   444                           ;incstack = 0
   445                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   446                           
   447                           
   448                           ;PICCONTADOR.c: 77:     setup();
   449  0099  120A  118A  2014  120A  118A  	fcall	_setup
   450  009E                     l60:	
   451                           ;PICCONTADOR.c: 78:     while (1) {
   452                           
   453                           
   454                           ;PICCONTADOR.c: 79:         spiWrite(PORTD);
   455  009E  1283               	bcf	3,5	;RP0=0, select bank0
   456  009F  1303               	bcf	3,6	;RP1=0, select bank0
   457  00A0  0808               	movf	8,w	;volatile
   458  00A1  120A  118A  20BA  120A  118A  	fcall	_spiWrite
   459  00A6  289E               	goto	l60
   460  00A7  120A  118A  280C   	ljmp	start
   461  00AA                     __end_of_main:
   462                           
   463                           	psect	text1
   464  00BA                     __ptext1:	
   465 ;; *************** function _spiWrite *****************
   466 ;; Defined at:
   467 ;;		line 34 in file "SPI.c"
   468 ;; Parameters:    Size  Location     Type
   469 ;;  dat             1    wreg     unsigned char 
   470 ;; Auto vars:     Size  Location     Type
   471 ;;  dat             1    4[COMMON] unsigned char 
   472 ;; Return value:  Size  Location     Type
   473 ;;                  1    wreg      void 
   474 ;; Registers used:
   475 ;;		wreg
   476 ;; Tracked objects:
   477 ;;		On entry : 0/0
   478 ;;		On exit  : 0/0
   479 ;;		Unchanged: 0/0
   480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   481 ;;      Params:         0       0       0       0       0
   482 ;;      Locals:         1       0       0       0       0
   483 ;;      Temps:          0       0       0       0       0
   484 ;;      Totals:         1       0       0       0       0
   485 ;;Total ram usage:        1 bytes
   486 ;; Hardware stack levels used:    1
   487 ;; Hardware stack levels required when called:    3
   488 ;; This function calls:
   489 ;;		Nothing
   490 ;; This function is called by:
   491 ;;		_main
   492 ;; This function uses a non-reentrant model
   493 ;;
   494                           
   495                           
   496                           ;psect for function _spiWrite
   497  00BA                     _spiWrite:
   498                           
   499                           ;incstack = 0
   500                           ; Regs used in _spiWrite: [wreg]
   501                           ;spiWrite@dat stored from wreg
   502  00BA  00F4               	movwf	spiWrite@dat
   503  00BB                     l710:
   504                           
   505                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
   506  00BB  0874               	movf	spiWrite@dat,w
   507  00BC  1283               	bcf	3,5	;RP0=0, select bank0
   508  00BD  1303               	bcf	3,6	;RP1=0, select bank0
   509  00BE  0093               	movwf	19	;volatile
   510  00BF                     l92:
   511  00BF  0008               	return
   512  00C0                     __end_of_spiWrite:
   513                           
   514                           	psect	text2
   515  0014                     __ptext2:	
   516 ;; *************** function _setup *****************
   517 ;; Defined at:
   518 ;;		line 89 in file "PICCONTADOR.c"
   519 ;; Parameters:    Size  Location     Type
   520 ;;		None
   521 ;; Auto vars:     Size  Location     Type
   522 ;;		None
   523 ;; Return value:  Size  Location     Type
   524 ;;                  1    wreg      void 
   525 ;; Registers used:
   526 ;;		wreg, status,2, status,0, pclath, cstack
   527 ;; Tracked objects:
   528 ;;		On entry : 0/0
   529 ;;		On exit  : 0/0
   530 ;;		Unchanged: 0/0
   531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   532 ;;      Params:         0       0       0       0       0
   533 ;;      Locals:         0       0       0       0       0
   534 ;;      Temps:          0       0       0       0       0
   535 ;;      Totals:         0       0       0       0       0
   536 ;;Total ram usage:        0 bytes
   537 ;; Hardware stack levels used:    1
   538 ;; Hardware stack levels required when called:    4
   539 ;; This function calls:
   540 ;;		_spiInit
   541 ;; This function is called by:
   542 ;;		_main
   543 ;; This function uses a non-reentrant model
   544 ;;
   545                           
   546                           
   547                           ;psect for function _setup
   548  0014                     _setup:
   549  0014                     l788:	
   550                           ;incstack = 0
   551                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   552                           
   553                           
   554                           ;PICCONTADOR.c: 91:     ANSEL = 0;
   555  0014  1683               	bsf	3,5	;RP0=1, select bank3
   556  0015  1703               	bsf	3,6	;RP1=1, select bank3
   557  0016  0188               	clrf	8	;volatile
   558                           
   559                           ;PICCONTADOR.c: 92:     ANSELH = 0;
   560  0017  0189               	clrf	9	;volatile
   561                           
   562                           ;PICCONTADOR.c: 93:     TRISA = 0;
   563  0018  1683               	bsf	3,5	;RP0=1, select bank1
   564  0019  1303               	bcf	3,6	;RP1=0, select bank1
   565  001A  0185               	clrf	5	;volatile
   566                           
   567                           ;PICCONTADOR.c: 94:     PORTA = 0;
   568  001B  1283               	bcf	3,5	;RP0=0, select bank0
   569  001C  1303               	bcf	3,6	;RP1=0, select bank0
   570  001D  0185               	clrf	5	;volatile
   571  001E                     l790:
   572                           
   573                           ;PICCONTADOR.c: 95:     TRISB = 0b00000011;
   574  001E  3003               	movlw	3
   575  001F  1683               	bsf	3,5	;RP0=1, select bank1
   576  0020  1303               	bcf	3,6	;RP1=0, select bank1
   577  0021  0086               	movwf	6	;volatile
   578  0022                     l792:
   579                           
   580                           ;PICCONTADOR.c: 96:     PORTB = 0;
   581  0022  1283               	bcf	3,5	;RP0=0, select bank0
   582  0023  1303               	bcf	3,6	;RP1=0, select bank0
   583  0024  0186               	clrf	6	;volatile
   584  0025                     l794:
   585                           
   586                           ;PICCONTADOR.c: 97:     TRISC = 0;
   587  0025  1683               	bsf	3,5	;RP0=1, select bank1
   588  0026  1303               	bcf	3,6	;RP1=0, select bank1
   589  0027  0187               	clrf	7	;volatile
   590  0028                     l796:
   591                           
   592                           ;PICCONTADOR.c: 98:     PORTC = 0;
   593  0028  1283               	bcf	3,5	;RP0=0, select bank0
   594  0029  1303               	bcf	3,6	;RP1=0, select bank0
   595  002A  0187               	clrf	7	;volatile
   596  002B                     l798:
   597                           
   598                           ;PICCONTADOR.c: 99:     TRISD = 0;
   599  002B  1683               	bsf	3,5	;RP0=1, select bank1
   600  002C  1303               	bcf	3,6	;RP1=0, select bank1
   601  002D  0188               	clrf	8	;volatile
   602  002E                     l800:
   603                           
   604                           ;PICCONTADOR.c: 100:     PORTD = 0;
   605  002E  1283               	bcf	3,5	;RP0=0, select bank0
   606  002F  1303               	bcf	3,6	;RP1=0, select bank0
   607  0030  0188               	clrf	8	;volatile
   608  0031                     l802:
   609                           
   610                           ;PICCONTADOR.c: 101:     TRISE = 0;
   611  0031  1683               	bsf	3,5	;RP0=1, select bank1
   612  0032  1303               	bcf	3,6	;RP1=0, select bank1
   613  0033  0189               	clrf	9	;volatile
   614  0034                     l804:
   615                           
   616                           ;PICCONTADOR.c: 102:     PORTE = 0;
   617  0034  1283               	bcf	3,5	;RP0=0, select bank0
   618  0035  1303               	bcf	3,6	;RP1=0, select bank0
   619  0036  0189               	clrf	9	;volatile
   620  0037                     l806:
   621                           
   622                           ;PICCONTADOR.c: 103:     INTCONbits.GIE = 1;
   623  0037  178B               	bsf	11,7	;volatile
   624  0038                     l808:
   625                           
   626                           ;PICCONTADOR.c: 104:     INTCONbits.PEIE = 1;
   627  0038  170B               	bsf	11,6	;volatile
   628  0039                     l810:
   629                           
   630                           ;PICCONTADOR.c: 105:     INTCONbits.RBIE = 1;
   631  0039  158B               	bsf	11,3	;volatile
   632  003A                     l812:
   633                           
   634                           ;PICCONTADOR.c: 106:     INTCONbits.RBIF = 0;
   635  003A  100B               	bcf	11,0	;volatile
   636  003B                     l814:
   637                           
   638                           ;PICCONTADOR.c: 107:     IOCBbits.IOCB0 = 1;
   639  003B  1683               	bsf	3,5	;RP0=1, select bank1
   640  003C  1303               	bcf	3,6	;RP1=0, select bank1
   641  003D  1416               	bsf	22,0	;volatile
   642  003E                     l816:
   643                           
   644                           ;PICCONTADOR.c: 108:     IOCBbits.IOCB1 = 1;
   645  003E  1496               	bsf	22,1	;volatile
   646  003F                     l818:
   647                           
   648                           ;PICCONTADOR.c: 110:     INTCONbits.GIE = 1;
   649  003F  178B               	bsf	11,7	;volatile
   650  0040                     l820:
   651                           
   652                           ;PICCONTADOR.c: 111:     INTCONbits.PEIE = 1;
   653  0040  170B               	bsf	11,6	;volatile
   654  0041                     l822:
   655                           
   656                           ;PICCONTADOR.c: 112:     TRISAbits.TRISA5 = 1;
   657  0041  1685               	bsf	5,5	;volatile
   658  0042                     l824:
   659                           
   660                           ;PICCONTADOR.c: 115:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE
      +                          _LOW, SPI_IDLE_2_ACTIVE);
   661  0042  01F4               	clrf	spiInit@sDataSample
   662  0043  01F5               	clrf	spiInit@sClockIdle
   663  0044  01F6               	clrf	spiInit@sTransmitEdge
   664  0045  3024               	movlw	36
   665  0046  120A  118A  2083  120A  118A  	fcall	_spiInit
   666  004B                     l66:
   667  004B  0008               	return
   668  004C                     __end_of_setup:
   669                           
   670                           	psect	text3
   671  0083                     __ptext3:	
   672 ;; *************** function _spiInit *****************
   673 ;; Defined at:
   674 ;;		line 12 in file "SPI.c"
   675 ;; Parameters:    Size  Location     Type
   676 ;;  sType           1    wreg     enum E1264
   677 ;;  sDataSample     1    4[COMMON] enum E1272
   678 ;;  sClockIdle      1    5[COMMON] enum E1276
   679 ;;  sTransmitEdg    1    6[COMMON] enum E1280
   680 ;; Auto vars:     Size  Location     Type
   681 ;;  sType           1    7[COMMON] enum E1264
   682 ;; Return value:  Size  Location     Type
   683 ;;                  1    wreg      void 
   684 ;; Registers used:
   685 ;;		wreg, status,2, status,0
   686 ;; Tracked objects:
   687 ;;		On entry : 0/0
   688 ;;		On exit  : 0/0
   689 ;;		Unchanged: 0/0
   690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   691 ;;      Params:         3       0       0       0       0
   692 ;;      Locals:         1       0       0       0       0
   693 ;;      Temps:          0       0       0       0       0
   694 ;;      Totals:         4       0       0       0       0
   695 ;;Total ram usage:        4 bytes
   696 ;; Hardware stack levels used:    1
   697 ;; Hardware stack levels required when called:    3
   698 ;; This function calls:
   699 ;;		Nothing
   700 ;; This function is called by:
   701 ;;		_setup
   702 ;; This function uses a non-reentrant model
   703 ;;
   704                           
   705                           
   706                           ;psect for function _spiInit
   707  0083                     _spiInit:
   708                           
   709                           ;incstack = 0
   710                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   711                           ;spiInit@sType stored from wreg
   712  0083  00F7               	movwf	spiInit@sType
   713  0084                     l778:
   714                           
   715                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   716  0084  1683               	bsf	3,5	;RP0=1, select bank1
   717  0085  1303               	bcf	3,6	;RP1=0, select bank1
   718  0086  1287               	bcf	7,5	;volatile
   719                           
   720                           ;SPI.c: 15:     if(sType & 0b00000100)
   721  0087  1D77               	btfss	spiInit@sType,2
   722  0088  288A               	goto	u71
   723  0089  288B               	goto	u70
   724  008A                     u71:
   725  008A  288F               	goto	l784
   726  008B                     u70:
   727  008B                     l780:
   728                           
   729                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   730  008B  0876               	movf	spiInit@sTransmitEdge,w
   731  008C  0094               	movwf	20	;volatile
   732  008D                     l782:
   733                           
   734                           ;SPI.c: 18:         TRISC3 = 1;
   735  008D  1587               	bsf	7,3	;volatile
   736                           
   737                           ;SPI.c: 19:     }
   738  008E  2893               	goto	l82
   739  008F                     l784:
   740                           
   741                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   742  008F  0874               	movf	spiInit@sDataSample,w
   743  0090  0476               	iorwf	spiInit@sTransmitEdge,w
   744  0091  0094               	movwf	20	;volatile
   745  0092                     l786:
   746                           
   747                           ;SPI.c: 23:         TRISC3 = 0;
   748  0092  1187               	bcf	7,3	;volatile
   749  0093                     l82:	
   750                           ;SPI.c: 24:     }
   751                           
   752                           
   753                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   754  0093  0877               	movf	spiInit@sType,w
   755  0094  0475               	iorwf	spiInit@sClockIdle,w
   756  0095  1283               	bcf	3,5	;RP0=0, select bank0
   757  0096  1303               	bcf	3,6	;RP1=0, select bank0
   758  0097  0094               	movwf	20	;volatile
   759  0098                     l83:
   760  0098  0008               	return
   761  0099                     __end_of_spiInit:
   762                           
   763                           	psect	text4
   764  004C                     __ptext4:	
   765 ;; *************** function _isr *****************
   766 ;; Defined at:
   767 ;;		line 48 in file "PICCONTADOR.c"
   768 ;; Parameters:    Size  Location     Type
   769 ;;		None
   770 ;; Auto vars:     Size  Location     Type
   771 ;;		None
   772 ;; Return value:  Size  Location     Type
   773 ;;                  1    wreg      void 
   774 ;; Registers used:
   775 ;;		wreg, status,2, status,0, pclath, cstack
   776 ;; Tracked objects:
   777 ;;		On entry : 0/0
   778 ;;		On exit  : 0/0
   779 ;;		Unchanged: 0/0
   780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   781 ;;      Params:         0       0       0       0       0
   782 ;;      Locals:         0       0       0       0       0
   783 ;;      Temps:          3       0       0       0       0
   784 ;;      Totals:         3       0       0       0       0
   785 ;;Total ram usage:        3 bytes
   786 ;; Hardware stack levels used:    1
   787 ;; Hardware stack levels required when called:    2
   788 ;; This function calls:
   789 ;;		_spiRead
   790 ;;		i1_spiWrite
   791 ;; This function is called by:
   792 ;;		Interrupt level 1
   793 ;; This function uses a non-reentrant model
   794 ;;
   795                           
   796                           
   797                           ;psect for function _isr
   798  004C                     _isr:
   799  004C                     i1l828:
   800  004C  1C0B               	btfss	11,0	;volatile
   801  004D  284F               	goto	u8_21
   802  004E  2850               	goto	u8_20
   803  004F                     u8_21:
   804  004F  287C               	goto	i1l55
   805  0050                     u8_20:
   806  0050                     i1l830:
   807  0050  1283               	bcf	3,5	;RP0=0, select bank0
   808  0051  1303               	bcf	3,6	;RP1=0, select bank0
   809  0052  1C06               	btfss	6,0	;volatile
   810  0053  2855               	goto	u9_21
   811  0054  2856               	goto	u9_20
   812  0055                     u9_21:
   813  0055  285F               	goto	i1l50
   814  0056                     u9_20:
   815  0056                     i1l832:
   816  0056  3001               	movlw	1
   817  0057  00F1               	movwf	??_isr
   818  0058  0871               	movf	??_isr,w
   819  0059  0788               	addwf	8,f	;volatile
   820  005A                     i1l834:
   821  005A  0808               	movf	8,w	;volatile
   822  005B  00F1               	movwf	??_isr
   823  005C  0871               	movf	??_isr,w
   824  005D  00F8               	movwf	_contador
   825  005E  287B               	goto	i1l844
   826  005F                     i1l50:
   827  005F  1C86               	btfss	6,1	;volatile
   828  0060  2862               	goto	u10_21
   829  0061  2863               	goto	u10_20
   830  0062                     u10_21:
   831  0062  2866               	goto	i1l52
   832  0063                     u10_20:
   833  0063                     i1l836:
   834  0063  3001               	movlw	1
   835  0064  0288               	subwf	8,f	;volatile
   836  0065  285A               	goto	i1l834
   837  0066                     i1l52:
   838  0066  1D8C               	btfss	12,3	;volatile
   839  0067  2869               	goto	u11_21
   840  0068  286A               	goto	u11_20
   841  0069                     u11_21:
   842  0069  287B               	goto	i1l844
   843  006A                     u11_20:
   844  006A                     i1l840:
   845  006A  120A  118A  20AA  120A  118A  	fcall	_spiRead
   846  006F  1283               	bcf	3,5	;RP0=0, select bank0
   847  0070  1303               	bcf	3,6	;RP1=0, select bank0
   848  0071  0089               	movwf	9	;volatile
   849  0072  0808               	movf	8,w	;volatile
   850  0073  120A  118A  20C0  120A  118A  	fcall	i1_spiWrite
   851  0078                     i1l842:
   852  0078  1283               	bcf	3,5	;RP0=0, select bank0
   853  0079  1303               	bcf	3,6	;RP1=0, select bank0
   854  007A  118C               	bcf	12,3	;volatile
   855  007B                     i1l844:
   856  007B  100B               	bcf	11,0	;volatile
   857  007C                     i1l55:
   858  007C  0873               	movf	??_isr+2,w
   859  007D  008A               	movwf	10
   860  007E  0E72               	swapf	??_isr+1,w
   861  007F  0083               	movwf	3
   862  0080  0EFE               	swapf	btemp,f
   863  0081  0E7E               	swapf	btemp,w
   864  0082  0009               	retfie
   865  0083                     __end_of_isr:
   866                           
   867                           	psect	intentry
   868  0004                     __pintentry:	
   869                           ;incstack = 0
   870                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
   871                           
   872  0004                     interrupt_function:
   873  007E                     saved_w	set	btemp
   874  0004  00FE               	movwf	btemp
   875  0005  0E03               	swapf	3,w
   876  0006  00F2               	movwf	??_isr+1
   877  0007  080A               	movf	10,w
   878  0008  00F3               	movwf	??_isr+2
   879  0009  120A  118A  284C   	ljmp	_isr
   880                           
   881                           	psect	text5
   882  00C0                     __ptext5:	
   883 ;; *************** function i1_spiWrite *****************
   884 ;; Defined at:
   885 ;;		line 34 in file "SPI.c"
   886 ;; Parameters:    Size  Location     Type
   887 ;;  dat             1    wreg     unsigned char 
   888 ;; Auto vars:     Size  Location     Type
   889 ;;  dat             1    0[COMMON] unsigned char 
   890 ;; Return value:  Size  Location     Type
   891 ;;                  1    wreg      void 
   892 ;; Registers used:
   893 ;;		wreg
   894 ;; Tracked objects:
   895 ;;		On entry : 0/0
   896 ;;		On exit  : 0/0
   897 ;;		Unchanged: 0/0
   898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   899 ;;      Params:         0       0       0       0       0
   900 ;;      Locals:         1       0       0       0       0
   901 ;;      Temps:          0       0       0       0       0
   902 ;;      Totals:         1       0       0       0       0
   903 ;;Total ram usage:        1 bytes
   904 ;; Hardware stack levels used:    1
   905 ;; This function calls:
   906 ;;		Nothing
   907 ;; This function is called by:
   908 ;;		_isr
   909 ;; This function uses a non-reentrant model
   910 ;;
   911                           
   912                           
   913                           ;psect for function i1_spiWrite
   914  00C0                     i1_spiWrite:
   915                           
   916                           ;incstack = 0
   917                           ; Regs used in i1_spiWrite: [wreg]
   918                           ;i1spiWrite@dat stored from wreg
   919  00C0  00F0               	movwf	i1spiWrite@dat
   920  00C1                     i1l826:
   921                           
   922                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
   923  00C1  0870               	movf	i1spiWrite@dat,w
   924  00C2  1283               	bcf	3,5	;RP0=0, select bank0
   925  00C3  1303               	bcf	3,6	;RP1=0, select bank0
   926  00C4  0093               	movwf	19	;volatile
   927  00C5                     i1l92:
   928  00C5  0008               	return
   929  00C6                     __end_ofi1_spiWrite:
   930                           
   931                           	psect	text6
   932  00AA                     __ptext6:	
   933 ;; *************** function _spiRead *****************
   934 ;; Defined at:
   935 ;;		line 47 in file "SPI.c"
   936 ;; Parameters:    Size  Location     Type
   937 ;;		None
   938 ;; Auto vars:     Size  Location     Type
   939 ;;		None
   940 ;; Return value:  Size  Location     Type
   941 ;;                  1    wreg      unsigned char 
   942 ;; Registers used:
   943 ;;		wreg, status,2, status,0, pclath, cstack
   944 ;; Tracked objects:
   945 ;;		On entry : 0/0
   946 ;;		On exit  : 0/0
   947 ;;		Unchanged: 0/0
   948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   949 ;;      Params:         0       0       0       0       0
   950 ;;      Locals:         0       0       0       0       0
   951 ;;      Temps:          0       0       0       0       0
   952 ;;      Totals:         0       0       0       0       0
   953 ;;Total ram usage:        0 bytes
   954 ;; Hardware stack levels used:    1
   955 ;; Hardware stack levels required when called:    1
   956 ;; This function calls:
   957 ;;		_spiReceiveWait
   958 ;; This function is called by:
   959 ;;		_isr
   960 ;; This function uses a non-reentrant model
   961 ;;
   962                           
   963                           
   964                           ;psect for function _spiRead
   965  00AA                     _spiRead:
   966  00AA                     i1l704:	
   967                           ;incstack = 0
   968                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   969                           
   970                           
   971                           ;SPI.c: 49:     spiReceiveWait();
   972  00AA  120A  118A  20B3  120A  118A  	fcall	_spiReceiveWait
   973  00AF                     i1l706:
   974                           
   975                           ;SPI.c: 50:     return(SSPBUF);
   976  00AF  1283               	bcf	3,5	;RP0=0, select bank0
   977  00B0  1303               	bcf	3,6	;RP1=0, select bank0
   978  00B1  0813               	movf	19,w	;volatile
   979  00B2                     i1l100:
   980  00B2  0008               	return
   981  00B3                     __end_of_spiRead:
   982                           
   983                           	psect	text7
   984  00B3                     __ptext7:	
   985 ;; *************** function _spiReceiveWait *****************
   986 ;; Defined at:
   987 ;;		line 29 in file "SPI.c"
   988 ;; Parameters:    Size  Location     Type
   989 ;;		None
   990 ;; Auto vars:     Size  Location     Type
   991 ;;		None
   992 ;; Return value:  Size  Location     Type
   993 ;;                  1    wreg      void 
   994 ;; Registers used:
   995 ;;		None
   996 ;; Tracked objects:
   997 ;;		On entry : 0/0
   998 ;;		On exit  : 0/0
   999 ;;		Unchanged: 0/0
  1000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1001 ;;      Params:         0       0       0       0       0
  1002 ;;      Locals:         0       0       0       0       0
  1003 ;;      Temps:          0       0       0       0       0
  1004 ;;      Totals:         0       0       0       0       0
  1005 ;;Total ram usage:        0 bytes
  1006 ;; Hardware stack levels used:    1
  1007 ;; This function calls:
  1008 ;;		Nothing
  1009 ;; This function is called by:
  1010 ;;		_spiRead
  1011 ;; This function uses a non-reentrant model
  1012 ;;
  1013                           
  1014                           
  1015                           ;psect for function _spiReceiveWait
  1016  00B3                     _spiReceiveWait:
  1017  00B3                     i1l702:	
  1018                           ;incstack = 0
  1019                           ; Regs used in _spiReceiveWait: []
  1020                           
  1021  00B3                     i1l86:	
  1022                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  1023                           
  1024  00B3  1683               	bsf	3,5	;RP0=1, select bank1
  1025  00B4  1303               	bcf	3,6	;RP1=0, select bank1
  1026  00B5  1C14               	btfss	20,0	;volatile
  1027  00B6  28B8               	goto	u2_21
  1028  00B7  28B9               	goto	u2_20
  1029  00B8                     u2_21:
  1030  00B8  28B3               	goto	i1l86
  1031  00B9                     u2_20:
  1032  00B9                     i1l89:
  1033  00B9  0008               	return
  1034  00BA                     __end_of_spiReceiveWait:
  1035  007E                     btemp	set	126	;btemp
  1036  007E                     wtemp0	set	126
  1037                           
  1038                           	psect	config
  1039                           
  1040                           ;Config register CONFIG1 @ 0x2007
  1041                           ;	Oscillator Selection bits
  1042                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1043                           ;	Watchdog Timer Enable bit
  1044                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1045                           ;	Power-up Timer Enable bit
  1046                           ;	PWRTE = OFF, PWRT disabled
  1047                           ;	RE3/MCLR pin function select bit
  1048                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1049                           ;	Code Protection bit
  1050                           ;	CP = OFF, Program memory code protection is disabled
  1051                           ;	Data Code Protection bit
  1052                           ;	CPD = OFF, Data memory code protection is disabled
  1053                           ;	Brown Out Reset Selection bits
  1054                           ;	BOREN = OFF, BOR disabled
  1055                           ;	Internal External Switchover bit
  1056                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1057                           ;	Fail-Safe Clock Monitor Enabled bit
  1058                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1059                           ;	Low Voltage Programming Enable bit
  1060                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1061                           ;	In-Circuit Debugger Mode bit
  1062                           ;	DEBUG = 0x1, unprogrammed default
  1063  2007                     	org	8199
  1064  2007  20F4               	dw	8436
  1065                           
  1066                           ;Config register CONFIG2 @ 0x2008
  1067                           ;	Brown-out Reset Selection bit
  1068                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1069                           ;	Flash Program Memory Self Write Enable bits
  1070                           ;	WRT = OFF, Write protection off
  1071  2008                     	org	8200
  1072  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _isr in COMMON

    _isr->i1_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     375
                              _setup
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              4 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0      22
                                              1 COMMON     3     3      0
                            _spiRead
                         i1_spiWrite
 ---------------------------------------------------------------------------------
 (4) i1_spiWrite                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _spiInit
   _spiWrite

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   i1_spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 22:03:04 2021

            _SSPSTATbits 0094                       l60 009E                       l82 0093  
                     l66 004B                       l83 0098                       l92 00BF  
                     u70 008B                       u71 008A                      l710 00BB  
                    l800 002E                      l810 0039                      l802 0031  
                    l820 0040                      l812 003A                      l804 0034  
                    l822 0041                      l814 003B                      l806 0037  
                    l824 0042                      l816 003E                      l808 0038  
                    l818 003F                      l780 008B                      l782 008D  
                    l790 001E                      l846 0099                      l784 008F  
                    l792 0022                      l786 0092                      l778 0084  
                    l794 0025                      l796 0028                      l788 0014  
                    l798 002B                      _isr 004C                     ?_isr 0070  
          i1spiWrite@dat 0070                     i1l50 005F                     i1l52 0066  
                   i1l55 007C                     i1l92 00C5                     i1l86 00B3  
                   i1l89 00B9                     u2_20 00B9                     u2_21 00B8  
                   u8_20 0050                     u8_21 004F                     u9_20 0056  
                   u9_21 0055                     _main 0099                     btemp 007E  
                   start 000C               i1_spiWrite 00C0                    ??_isr 0071  
                  ?_main 0070                    _ANSEL 0188                    i1l100 00B2  
                  i1l702 00B3                    i1l704 00AA                    i1l706 00AF  
                  i1l830 0050                    i1l840 006A                    i1l832 0056  
                  i1l826 00C1                    i1l842 0078                    i1l834 005A  
                  i1l836 0063                    i1l844 007B                    i1l828 004C  
                  u10_20 0063                    u10_21 0062                    u11_20 006A  
                  u11_21 0069                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _SSPIF 0063  
                  _setup 0014                    pclath 000A          __end_of_spiInit 0099  
        __end_of_spiRead 00B3                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 00AA                   ??_main 0078  
                 ?_setup 0070                   _ANSELH 0189                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
            ?i1_spiWrite 0070                   saved_w 007E         __end_of_spiWrite 00C0  
              ??_spiInit 0077                ??_spiRead 0070  __end_of__initialization 0010  
         __pcstackCOMMON 0070            __end_of_setup 004C      __size_ofi1_spiWrite 0006  
                ??_setup 0078               __pmaintext 0099               __pintentry 0004  
__size_of_spiReceiveWait 0007                  _SSPSTAT 0094                ?_spiWrite 0070  
                __ptext1 00BA                  __ptext2 0014                  __ptext3 0083  
                __ptext4 004C                  __ptext5 00C0                  __ptext6 00AA  
                __ptext7 00B3             __size_of_isr 0037                  _spiInit 0083  
                _spiRead 00AA     end_of_initialization 0010             ??i1_spiWrite 0070  
             ??_spiWrite 0074                _PORTBbits 0006                _TRISAbits 0085  
     __end_ofi1_spiWrite 00C6              spiWrite@dat 0074           _spiReceiveWait 00B3  
    start_initialization 000F              __end_of_isr 0083   __end_of_spiReceiveWait 00BA  
            __pbssCOMMON 0078                ___latbits 0002          ?_spiReceiveWait 0070  
      __size_of_spiWrite 0006                 ?_spiInit 0074                 ?_spiRead 0070  
         __size_of_setup 0038     spiInit@sTransmitEdge 0076        interrupt_function 0004  
               _IOCBbits 0096       spiInit@sDataSample 0074         __size_of_spiInit 0016  
       __size_of_spiRead 0009                 _contador 0078            __size_of_main 0011  
               _spiWrite 00BA             spiInit@sType 0077        spiInit@sClockIdle 0075  
             _INTCONbits 000B                 intlevel1 0000         ??_spiReceiveWait 0070  
