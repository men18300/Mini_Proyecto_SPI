

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 14:51:47 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  0081                     	;# 
   246  0085                     	;# 
   247  0086                     	;# 
   248  0087                     	;# 
   249  0088                     	;# 
   250  0089                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  008E                     	;# 
   254  008F                     	;# 
   255  0090                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009E                     	;# 
   272  009F                     	;# 
   273  0105                     	;# 
   274  0107                     	;# 
   275  0108                     	;# 
   276  0109                     	;# 
   277  010C                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  010F                     	;# 
   282  0185                     	;# 
   283  0187                     	;# 
   284  0188                     	;# 
   285  0189                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288  0000                     	;# 
   289  0001                     	;# 
   290  0002                     	;# 
   291  0003                     	;# 
   292  0004                     	;# 
   293  0005                     	;# 
   294  0006                     	;# 
   295  0007                     	;# 
   296  0008                     	;# 
   297  0009                     	;# 
   298  000A                     	;# 
   299  000B                     	;# 
   300  000C                     	;# 
   301  000D                     	;# 
   302  000E                     	;# 
   303  000E                     	;# 
   304  000F                     	;# 
   305  0010                     	;# 
   306  0011                     	;# 
   307  0012                     	;# 
   308  0013                     	;# 
   309  0014                     	;# 
   310  0015                     	;# 
   311  0015                     	;# 
   312  0016                     	;# 
   313  0017                     	;# 
   314  0018                     	;# 
   315  0019                     	;# 
   316  001A                     	;# 
   317  001B                     	;# 
   318  001B                     	;# 
   319  001C                     	;# 
   320  001D                     	;# 
   321  001E                     	;# 
   322  001F                     	;# 
   323  0081                     	;# 
   324  0085                     	;# 
   325  0086                     	;# 
   326  0087                     	;# 
   327  0088                     	;# 
   328  0089                     	;# 
   329  008C                     	;# 
   330  008D                     	;# 
   331  008E                     	;# 
   332  008F                     	;# 
   333  0090                     	;# 
   334  0091                     	;# 
   335  0092                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0094                     	;# 
   340  0095                     	;# 
   341  0096                     	;# 
   342  0097                     	;# 
   343  0098                     	;# 
   344  0099                     	;# 
   345  009A                     	;# 
   346  009B                     	;# 
   347  009C                     	;# 
   348  009D                     	;# 
   349  009E                     	;# 
   350  009F                     	;# 
   351  0105                     	;# 
   352  0107                     	;# 
   353  0108                     	;# 
   354  0109                     	;# 
   355  010C                     	;# 
   356  010C                     	;# 
   357  010D                     	;# 
   358  010E                     	;# 
   359  010F                     	;# 
   360  0185                     	;# 
   361  0187                     	;# 
   362  0188                     	;# 
   363  0189                     	;# 
   364  018C                     	;# 
   365  018D                     	;# 
   366  0013                     _SSPBUF	set	19
   367  0014                     _SSPCON	set	20
   368  000B                     _INTCONbits	set	11
   369  0007                     _PORTC	set	7
   370  0006                     _PORTB	set	6
   371  0005                     _PORTA	set	5
   372  0009                     _PORTE	set	9
   373  001F                     _ADCON0bits	set	31
   374  001E                     _ADRESH	set	30
   375  0008                     _PORTD	set	8
   376  000C                     _PIR1bits	set	12
   377  0063                     _SSPIF	set	99
   378  0094                     _SSPSTATbits	set	148
   379  0094                     _SSPSTAT	set	148
   380  0086                     _TRISBbits	set	134
   381  0089                     _TRISEbits	set	137
   382  009F                     _ADCON1bits	set	159
   383  0085                     _TRISAbits	set	133
   384  008C                     _PIE1bits	set	140
   385  0089                     _TRISE	set	137
   386  0088                     _TRISD	set	136
   387  0087                     _TRISC	set	135
   388  0086                     _TRISB	set	134
   389  0085                     _TRISA	set	133
   390  043B                     _TRISC3	set	1083
   391  043D                     _TRISC5	set	1085
   392  0189                     _ANSELHbits	set	393
   393  0188                     _ANSELbits	set	392
   394  0189                     _ANSELH	set	393
   395  0188                     _ANSEL	set	392
   396                           
   397                           	psect	cinit
   398  000F                     start_initialization:	
   399                           ; #config settings
   400                           
   401  000F                     __initialization:
   402                           
   403                           ; Clear objects allocated to COMMON
   404  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   405  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   406  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   407  0012                     end_of_initialization:	
   408                           ;End of C runtime variable initialization code
   409                           
   410  0012                     __end_of__initialization:
   411  0012  0183               	clrf	3
   412  0013  120A  118A  29AA   	ljmp	_main	;jump to C main() function
   413                           
   414                           	psect	bssCOMMON
   415  0077                     __pbssCOMMON:
   416  0077                     _t:
   417  0077                     	ds	2
   418  0079                     _contador:
   419  0079                     	ds	1
   420                           
   421                           	psect	cstackCOMMON
   422  0070                     __pcstackCOMMON:
   423  0070                     ?_spiRead:
   424  0070                     ??_spiRead:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0070                     ?_spiWrite:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     ??_spiWrite:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     ?_setup:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0070                     ?_isr:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0070                     ?_spiReceiveWait:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0070                     ??_spiReceiveWait:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0070                     ?_main:	
   446                           ; 1 bytes @ 0x0
   447                           
   448  0070                     spiWrite@dat:	
   449                           ; 2 bytes @ 0x0
   450                           
   451                           
   452                           ; 1 bytes @ 0x0
   453  0070                     	ds	1
   454  0071                     ??_isr:
   455                           
   456                           ; 1 bytes @ 0x1
   457  0071                     	ds	3
   458  0074                     ?_ADC:
   459  0074                     ?_spiInit:	
   460                           ; 1 bytes @ 0x4
   461                           
   462  0074                     ADC@justificado:	
   463                           ; 1 bytes @ 0x4
   464                           
   465  0074                     spiInit@sDataSample:	
   466                           ; 1 bytes @ 0x4
   467                           
   468                           
   469                           ; 1 bytes @ 0x4
   470  0074                     	ds	1
   471  0075                     ??_ADC:
   472  0075                     spiInit@sClockIdle:	
   473                           ; 1 bytes @ 0x5
   474                           
   475                           
   476                           ; 1 bytes @ 0x5
   477  0075                     	ds	1
   478  0076                     spiInit@sTransmitEdge:
   479                           
   480                           ; 1 bytes @ 0x6
   481  0076                     	ds	1
   482  0077                     ??_setup:
   483  0077                     ??_spiInit:	
   484                           ; 1 bytes @ 0x7
   485                           
   486  0077                     ??_main:	
   487                           ; 1 bytes @ 0x7
   488                           
   489                           
   490                           	psect	cstackBANK0
   491  0020                     __pcstackBANK0:	
   492                           ; 1 bytes @ 0x7
   493                           
   494  0020                     ADC@ANA:
   495  0020                     spiInit@sType:	
   496                           ; 1 bytes @ 0x0
   497                           
   498                           
   499                           ; 1 bytes @ 0x0
   500  0020                     	ds	1
   501                           
   502                           	psect	maintext
   503  01AA                     __pmaintext:	
   504 ;;
   505 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   506 ;;
   507 ;; *************** function _main *****************
   508 ;; Defined at:
   509 ;;		line 50 in file "PICADC.c"
   510 ;; Parameters:    Size  Location     Type
   511 ;;		None
   512 ;; Auto vars:     Size  Location     Type
   513 ;;		None
   514 ;; Return value:  Size  Location     Type
   515 ;;                  2   66[None  ] int 
   516 ;; Registers used:
   517 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   518 ;; Tracked objects:
   519 ;;		On entry : B00/0
   520 ;;		On exit  : 0/0
   521 ;;		Unchanged: 0/0
   522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   523 ;;      Params:         0       0       0       0       0
   524 ;;      Locals:         0       0       0       0       0
   525 ;;      Temps:          0       0       0       0       0
   526 ;;      Totals:         0       0       0       0       0
   527 ;;Total ram usage:        0 bytes
   528 ;; Hardware stack levels required when called:    5
   529 ;; This function calls:
   530 ;;		_ADC
   531 ;;		_setup
   532 ;; This function is called by:
   533 ;;		Startup code after reset
   534 ;; This function uses a non-reentrant model
   535 ;;
   536                           
   537                           
   538                           ;psect for function _main
   539  01AA                     _main:
   540  01AA                     l1251:	
   541                           ;incstack = 0
   542                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   543                           
   544                           
   545                           ;PICADC.c: 51:     contador = 0;
   546  01AA  120A  118A  2121  120A  118A  	fcall	_setup
   547  01AF                     l1253:
   548  01AF  01F4               	clrf	ADC@justificado
   549  01B0  3000               	movlw	0
   550  01B1  120A  118A  2016  120A  118A  	fcall	_ADC
   551  01B6                     l1255:
   552  01B6  1283               	bcf	3,5	;RP0=0, select bank0
   553  01B7  1303               	bcf	3,6	;RP1=0, select bank0
   554  01B8  149F               	bsf	31,1	;volatile
   555  01B9                     l67:
   556  01B9                     l68:
   557  01B9  29B9               	goto	l67
   558  01BA  120A  118A  280C   	ljmp	start
   559  01BD                     __end_of_main:
   560                           
   561                           	psect	text1
   562  0121                     __ptext1:	
   563 ;; *************** function _setup *****************
   564 ;; Defined at:
   565 ;;		line 62 in file "PICADC.c"
   566 ;; Parameters:    Size  Location     Type
   567 ;;		None
   568 ;; Auto vars:     Size  Location     Type
   569 ;;		None
   570 ;; Return value:  Size  Location     Type
   571 ;;                  1    wreg      void 
   572 ;; Registers used:
   573 ;;		wreg, status,2, status,0, pclath, cstack
   574 ;; Tracked objects:
   575 ;;		On entry : 0/0
   576 ;;		On exit  : 0/0
   577 ;;		Unchanged: 0/0
   578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   579 ;;      Params:         0       0       0       0       0
   580 ;;      Locals:         0       0       0       0       0
   581 ;;      Temps:          0       0       0       0       0
   582 ;;      Totals:         0       0       0       0       0
   583 ;;Total ram usage:        0 bytes
   584 ;; Hardware stack levels used:    1
   585 ;; Hardware stack levels required when called:    4
   586 ;; This function calls:
   587 ;;		_spiInit
   588 ;; This function is called by:
   589 ;;		_main
   590 ;; This function uses a non-reentrant model
   591 ;;
   592                           
   593                           
   594                           ;psect for function _setup
   595  0121                     _setup:
   596  0121                     l1123:	
   597                           ;incstack = 0
   598                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   599                           
   600  0121  1683               	bsf	3,5	;RP0=1, select bank3
   601  0122  1703               	bsf	3,6	;RP1=1, select bank3
   602  0123  0188               	clrf	8	;volatile
   603  0124  0189               	clrf	9	;volatile
   604  0125  1683               	bsf	3,5	;RP0=1, select bank1
   605  0126  1303               	bcf	3,6	;RP1=0, select bank1
   606  0127  0185               	clrf	5	;volatile
   607  0128  1283               	bcf	3,5	;RP0=0, select bank0
   608  0129  1303               	bcf	3,6	;RP1=0, select bank0
   609  012A  0185               	clrf	5	;volatile
   610  012B                     l1125:
   611  012B  3003               	movlw	3
   612  012C  1683               	bsf	3,5	;RP0=1, select bank1
   613  012D  1303               	bcf	3,6	;RP1=0, select bank1
   614  012E  0086               	movwf	6	;volatile
   615  012F                     l1127:
   616  012F  1283               	bcf	3,5	;RP0=0, select bank0
   617  0130  1303               	bcf	3,6	;RP1=0, select bank0
   618  0131  0186               	clrf	6	;volatile
   619  0132                     l1129:
   620  0132  1683               	bsf	3,5	;RP0=1, select bank1
   621  0133  1303               	bcf	3,6	;RP1=0, select bank1
   622  0134  0187               	clrf	7	;volatile
   623  0135                     l1131:
   624  0135  1283               	bcf	3,5	;RP0=0, select bank0
   625  0136  1303               	bcf	3,6	;RP1=0, select bank0
   626  0137  0187               	clrf	7	;volatile
   627  0138                     l1133:
   628  0138  1683               	bsf	3,5	;RP0=1, select bank1
   629  0139  1303               	bcf	3,6	;RP1=0, select bank1
   630  013A  0188               	clrf	8	;volatile
   631  013B                     l1135:
   632  013B  1283               	bcf	3,5	;RP0=0, select bank0
   633  013C  1303               	bcf	3,6	;RP1=0, select bank0
   634  013D  0188               	clrf	8	;volatile
   635  013E                     l1137:
   636  013E  1683               	bsf	3,5	;RP0=1, select bank1
   637  013F  1303               	bcf	3,6	;RP1=0, select bank1
   638  0140  0189               	clrf	9	;volatile
   639  0141                     l1139:
   640  0141  1283               	bcf	3,5	;RP0=0, select bank0
   641  0142  1303               	bcf	3,6	;RP1=0, select bank0
   642  0143  0189               	clrf	9	;volatile
   643  0144                     l1141:
   644  0144  178B               	bsf	11,7	;volatile
   645  0145                     l1143:
   646  0145  170B               	bsf	11,6	;volatile
   647  0146                     l1145:
   648  0146  01F9               	clrf	_contador
   649  0147                     l1147:
   650                           
   651                           ;PICADC.c: 95:     INTCONbits.GIE = 1;
   652  0147  178B               	bsf	11,7	;volatile
   653  0148                     l1149:
   654                           
   655                           ;PICADC.c: 96:     INTCONbits.PEIE = 1;
   656  0148  170B               	bsf	11,6	;volatile
   657  0149                     l1151:
   658                           
   659                           ;PICADC.c: 97:     PIR1bits.SSPIF = 0;
   660  0149  118C               	bcf	12,3	;volatile
   661  014A                     l1153:
   662                           
   663                           ;PICADC.c: 98:     PIE1bits.SSPIE = 1;
   664  014A  1683               	bsf	3,5	;RP0=1, select bank1
   665  014B  1303               	bcf	3,6	;RP1=0, select bank1
   666  014C  158C               	bsf	12,3	;volatile
   667  014D                     l1155:
   668                           
   669                           ;PICADC.c: 99:     TRISAbits.TRISA5 = 1;
   670  014D  1685               	bsf	5,5	;volatile
   671  014E                     l1157:
   672                           
   673                           ;PICADC.c: 101:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW,
      +                           SPI_IDLE_2_ACTIVE);
   674  014E  01F4               	clrf	spiInit@sDataSample
   675  014F  01F5               	clrf	spiInit@sClockIdle
   676  0150  01F6               	clrf	spiInit@sTransmitEdge
   677  0151  3024               	movlw	36
   678  0152  120A  118A  218C  120A  118A  	fcall	_spiInit
   679  0157                     l73:
   680  0157  0008               	return
   681  0158                     __end_of_setup:
   682                           
   683                           	psect	text2
   684  018C                     __ptext2:	
   685 ;; *************** function _spiInit *****************
   686 ;; Defined at:
   687 ;;		line 12 in file "SPI.c"
   688 ;; Parameters:    Size  Location     Type
   689 ;;  sType           1    wreg     enum E1264
   690 ;;  sDataSample     1    4[COMMON] enum E1272
   691 ;;  sClockIdle      1    5[COMMON] enum E1276
   692 ;;  sTransmitEdg    1    6[COMMON] enum E1280
   693 ;; Auto vars:     Size  Location     Type
   694 ;;  sType           1    0[BANK0 ] enum E1264
   695 ;; Return value:  Size  Location     Type
   696 ;;                  1    wreg      void 
   697 ;; Registers used:
   698 ;;		wreg, status,2, status,0
   699 ;; Tracked objects:
   700 ;;		On entry : 0/0
   701 ;;		On exit  : 0/0
   702 ;;		Unchanged: 0/0
   703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   704 ;;      Params:         3       0       0       0       0
   705 ;;      Locals:         0       1       0       0       0
   706 ;;      Temps:          0       0       0       0       0
   707 ;;      Totals:         3       1       0       0       0
   708 ;;Total ram usage:        4 bytes
   709 ;; Hardware stack levels used:    1
   710 ;; Hardware stack levels required when called:    3
   711 ;; This function calls:
   712 ;;		Nothing
   713 ;; This function is called by:
   714 ;;		_setup
   715 ;; This function uses a non-reentrant model
   716 ;;
   717                           
   718                           
   719                           ;psect for function _spiInit
   720  018C                     _spiInit:
   721                           
   722                           ;incstack = 0
   723                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   724                           ;spiInit@sType stored from wreg
   725  018C  1283               	bcf	3,5	;RP0=0, select bank0
   726  018D  1303               	bcf	3,6	;RP1=0, select bank0
   727  018E  00A0               	movwf	spiInit@sType
   728  018F                     l1113:
   729                           
   730                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   731  018F  1683               	bsf	3,5	;RP0=1, select bank1
   732  0190  1303               	bcf	3,6	;RP1=0, select bank1
   733  0191  1287               	bcf	7,5	;volatile
   734                           
   735                           ;SPI.c: 15:     if(sType & 0b00000100)
   736  0192  1283               	bcf	3,5	;RP0=0, select bank0
   737  0193  1303               	bcf	3,6	;RP1=0, select bank0
   738  0194  1D20               	btfss	spiInit@sType,2
   739  0195  2997               	goto	u101
   740  0196  2998               	goto	u100
   741  0197                     u101:
   742  0197  299E               	goto	l1119
   743  0198                     u100:
   744  0198                     l1115:
   745                           
   746                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   747  0198  0876               	movf	spiInit@sTransmitEdge,w
   748  0199  1683               	bsf	3,5	;RP0=1, select bank1
   749  019A  1303               	bcf	3,6	;RP1=0, select bank1
   750  019B  0094               	movwf	20	;volatile
   751  019C                     l1117:
   752                           
   753                           ;SPI.c: 18:         TRISC3 = 1;
   754  019C  1587               	bsf	7,3	;volatile
   755                           
   756                           ;SPI.c: 19:     }
   757  019D  29A4               	goto	l147
   758  019E                     l1119:
   759                           
   760                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   761  019E  0874               	movf	spiInit@sDataSample,w
   762  019F  0476               	iorwf	spiInit@sTransmitEdge,w
   763  01A0  1683               	bsf	3,5	;RP0=1, select bank1
   764  01A1  1303               	bcf	3,6	;RP1=0, select bank1
   765  01A2  0094               	movwf	20	;volatile
   766  01A3                     l1121:
   767                           
   768                           ;SPI.c: 23:         TRISC3 = 0;
   769  01A3  1187               	bcf	7,3	;volatile
   770  01A4                     l147:	
   771                           ;SPI.c: 24:     }
   772                           
   773                           
   774                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   775  01A4  1283               	bcf	3,5	;RP0=0, select bank0
   776  01A5  1303               	bcf	3,6	;RP1=0, select bank0
   777  01A6  0820               	movf	spiInit@sType,w
   778  01A7  0475               	iorwf	spiInit@sClockIdle,w
   779  01A8  0094               	movwf	20	;volatile
   780  01A9                     l148:
   781  01A9  0008               	return
   782  01AA                     __end_of_spiInit:
   783                           
   784                           	psect	text3
   785  0016                     __ptext3:	
   786 ;; *************** function _ADC *****************
   787 ;; Defined at:
   788 ;;		line 3 in file "ADC.c"
   789 ;; Parameters:    Size  Location     Type
   790 ;;  ANA             1    wreg     unsigned char 
   791 ;;  justificado     1    4[COMMON] unsigned char 
   792 ;; Auto vars:     Size  Location     Type
   793 ;;  ANA             1    0[BANK0 ] unsigned char 
   794 ;; Return value:  Size  Location     Type
   795 ;;                  1    wreg      void 
   796 ;; Registers used:
   797 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   798 ;; Tracked objects:
   799 ;;		On entry : 0/0
   800 ;;		On exit  : 0/0
   801 ;;		Unchanged: 0/0
   802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   803 ;;      Params:         1       0       0       0       0
   804 ;;      Locals:         0       1       0       0       0
   805 ;;      Temps:          2       0       0       0       0
   806 ;;      Totals:         3       1       0       0       0
   807 ;;Total ram usage:        4 bytes
   808 ;; Hardware stack levels used:    1
   809 ;; Hardware stack levels required when called:    3
   810 ;; This function calls:
   811 ;;		Nothing
   812 ;; This function is called by:
   813 ;;		_main
   814 ;; This function uses a non-reentrant model
   815 ;;
   816                           
   817                           
   818                           ;psect for function _ADC
   819  0016                     _ADC:
   820                           
   821                           ;incstack = 0
   822                           ; Regs used in _ADC: [wreg-fsr0h+status,2+status,0]
   823                           ;ADC@ANA stored from wreg
   824  0016  1283               	bcf	3,5	;RP0=0, select bank0
   825  0017  1303               	bcf	3,6	;RP1=0, select bank0
   826  0018  00A0               	movwf	ADC@ANA
   827  0019                     l1159:
   828                           
   829                           ;ADC.c: 6:     ADCON0bits.ADON = 1;
   830  0019  141F               	bsf	31,0	;volatile
   831  001A                     l1161:
   832                           
   833                           ;ADC.c: 7:     ADCON0bits.ADCS = 0b10;
   834  001A  081F               	movf	31,w	;volatile
   835  001B  393F               	andlw	-193
   836  001C  3880               	iorlw	128
   837  001D  009F               	movwf	31	;volatile
   838  001E                     l1163:
   839                           
   840                           ;ADC.c: 8:     ADCON1bits.VCFG1 = 0;
   841  001E  1683               	bsf	3,5	;RP0=1, select bank1
   842  001F  1303               	bcf	3,6	;RP1=0, select bank1
   843  0020  129F               	bcf	31,5	;volatile
   844  0021                     l1165:
   845                           
   846                           ;ADC.c: 9:     ADCON1bits.VCFG0 = 0;
   847  0021  121F               	bcf	31,4	;volatile
   848  0022                     l1167:
   849                           
   850                           ;ADC.c: 10:     PIE1bits.ADIE = 1;
   851  0022  170C               	bsf	12,6	;volatile
   852  0023                     l1169:
   853                           
   854                           ;ADC.c: 11:     PIR1bits.ADIF = 0;
   855  0023  1283               	bcf	3,5	;RP0=0, select bank0
   856  0024  1303               	bcf	3,6	;RP1=0, select bank0
   857  0025  130C               	bcf	12,6	;volatile
   858                           
   859                           ;ADC.c: 13:     if (justificado == 0) {
   860  0026  0874               	movf	ADC@justificado,w
   861  0027  1D03               	btfss	3,2
   862  0028  282A               	goto	u111
   863  0029  282B               	goto	u110
   864  002A                     u111:
   865  002A  2918               	goto	l1207
   866  002B                     u110:
   867  002B                     l1171:
   868                           
   869                           ;ADC.c: 14:         ADCON1bits.ADFM = 0;
   870  002B  1683               	bsf	3,5	;RP0=1, select bank1
   871  002C  1303               	bcf	3,6	;RP1=0, select bank1
   872  002D  139F               	bcf	31,7	;volatile
   873                           
   874                           ;ADC.c: 15:         switch (ANA) {
   875  002E  28E2               	goto	l1205
   876  002F                     l96:	
   877                           ;ADC.c: 16:             case 0:
   878                           
   879                           
   880                           ;ADC.c: 17:                 TRISAbits.TRISA0 = 1;
   881  002F  1683               	bsf	3,5	;RP0=1, select bank1
   882  0030  1303               	bcf	3,6	;RP1=0, select bank1
   883  0031  1405               	bsf	5,0	;volatile
   884                           
   885                           ;ADC.c: 18:                 ANSELbits.ANS0 = 1;
   886  0032  1683               	bsf	3,5	;RP0=1, select bank3
   887  0033  1703               	bsf	3,6	;RP1=1, select bank3
   888  0034  1408               	bsf	8,0	;volatile
   889  0035                     l1173:
   890                           
   891                           ;ADC.c: 19:                 ADCON0bits.CHS = 0b0000;
   892  0035  30C3               	movlw	-61
   893  0036  1283               	bcf	3,5	;RP0=0, select bank0
   894  0037  1303               	bcf	3,6	;RP1=0, select bank0
   895  0038  059F               	andwf	31,f	;volatile
   896                           
   897                           ;ADC.c: 20:                 break;
   898  0039  2920               	goto	l131
   899  003A                     l98:	
   900                           ;ADC.c: 21:             case 1:
   901                           
   902                           
   903                           ;ADC.c: 22:                 TRISAbits.TRISA1 = 1;
   904  003A  1683               	bsf	3,5	;RP0=1, select bank1
   905  003B  1303               	bcf	3,6	;RP1=0, select bank1
   906  003C  1485               	bsf	5,1	;volatile
   907                           
   908                           ;ADC.c: 23:                 ANSELbits.ANS1 = 1;
   909  003D  1683               	bsf	3,5	;RP0=1, select bank3
   910  003E  1703               	bsf	3,6	;RP1=1, select bank3
   911  003F  1488               	bsf	8,1	;volatile
   912  0040                     l1175:
   913                           
   914                           ;ADC.c: 24:                 ADCON0bits.CHS = 0b0001;
   915  0040  1283               	bcf	3,5	;RP0=0, select bank0
   916  0041  1303               	bcf	3,6	;RP1=0, select bank0
   917  0042  081F               	movf	31,w	;volatile
   918  0043  39C3               	andlw	-61
   919  0044  3804               	iorlw	4
   920  0045  009F               	movwf	31	;volatile
   921                           
   922                           ;ADC.c: 25:                 break;
   923  0046  2920               	goto	l131
   924  0047                     l99:	
   925                           ;ADC.c: 26:             case 2:
   926                           
   927                           
   928                           ;ADC.c: 27:                 TRISAbits.TRISA2 = 1;
   929  0047  1683               	bsf	3,5	;RP0=1, select bank1
   930  0048  1303               	bcf	3,6	;RP1=0, select bank1
   931  0049  1505               	bsf	5,2	;volatile
   932                           
   933                           ;ADC.c: 28:                 ANSELbits.ANS2 = 1;
   934  004A  1683               	bsf	3,5	;RP0=1, select bank3
   935  004B  1703               	bsf	3,6	;RP1=1, select bank3
   936  004C  1508               	bsf	8,2	;volatile
   937  004D                     l1177:
   938                           
   939                           ;ADC.c: 29:                 ADCON0bits.CHS = 0b0010;
   940  004D  1283               	bcf	3,5	;RP0=0, select bank0
   941  004E  1303               	bcf	3,6	;RP1=0, select bank0
   942  004F  081F               	movf	31,w	;volatile
   943  0050  39C3               	andlw	-61
   944  0051  3808               	iorlw	8
   945  0052  009F               	movwf	31	;volatile
   946                           
   947                           ;ADC.c: 30:                 break;
   948  0053  2920               	goto	l131
   949  0054                     l100:	
   950                           ;ADC.c: 31:             case 3:
   951                           
   952                           
   953                           ;ADC.c: 32:                 TRISAbits.TRISA3 = 1;
   954  0054  1683               	bsf	3,5	;RP0=1, select bank1
   955  0055  1303               	bcf	3,6	;RP1=0, select bank1
   956  0056  1585               	bsf	5,3	;volatile
   957                           
   958                           ;ADC.c: 33:                 ANSELbits.ANS3 = 1;
   959  0057  1683               	bsf	3,5	;RP0=1, select bank3
   960  0058  1703               	bsf	3,6	;RP1=1, select bank3
   961  0059  1588               	bsf	8,3	;volatile
   962  005A                     l1179:
   963                           
   964                           ;ADC.c: 34:                 ADCON0bits.CHS = 0b0011;
   965  005A  1283               	bcf	3,5	;RP0=0, select bank0
   966  005B  1303               	bcf	3,6	;RP1=0, select bank0
   967  005C  081F               	movf	31,w	;volatile
   968  005D  39C3               	andlw	-61
   969  005E  380C               	iorlw	12
   970  005F  009F               	movwf	31	;volatile
   971                           
   972                           ;ADC.c: 35:                 break;
   973  0060  2920               	goto	l131
   974  0061                     l101:	
   975                           ;ADC.c: 36:             case 4:
   976                           
   977                           
   978                           ;ADC.c: 37:                 TRISAbits.TRISA5 = 1;
   979  0061  1683               	bsf	3,5	;RP0=1, select bank1
   980  0062  1303               	bcf	3,6	;RP1=0, select bank1
   981  0063  1685               	bsf	5,5	;volatile
   982                           
   983                           ;ADC.c: 38:                 ANSELbits.ANS4 = 1;
   984  0064  1683               	bsf	3,5	;RP0=1, select bank3
   985  0065  1703               	bsf	3,6	;RP1=1, select bank3
   986  0066  1608               	bsf	8,4	;volatile
   987  0067                     l1181:
   988                           
   989                           ;ADC.c: 39:                 ADCON0bits.CHS = 0b0100;
   990  0067  1283               	bcf	3,5	;RP0=0, select bank0
   991  0068  1303               	bcf	3,6	;RP1=0, select bank0
   992  0069  081F               	movf	31,w	;volatile
   993  006A  39C3               	andlw	-61
   994  006B  3810               	iorlw	16
   995  006C  009F               	movwf	31	;volatile
   996                           
   997                           ;ADC.c: 40:                 break;
   998  006D  2920               	goto	l131
   999  006E                     l102:	
  1000                           ;ADC.c: 41:             case 5:
  1001                           
  1002                           
  1003                           ;ADC.c: 42:                 TRISEbits.TRISE0 = 1;
  1004  006E  1683               	bsf	3,5	;RP0=1, select bank1
  1005  006F  1303               	bcf	3,6	;RP1=0, select bank1
  1006  0070  1409               	bsf	9,0	;volatile
  1007                           
  1008                           ;ADC.c: 43:                 ANSELbits.ANS5 = 1;
  1009  0071  1683               	bsf	3,5	;RP0=1, select bank3
  1010  0072  1703               	bsf	3,6	;RP1=1, select bank3
  1011  0073  1688               	bsf	8,5	;volatile
  1012  0074                     l1183:
  1013                           
  1014                           ;ADC.c: 44:                 ADCON0bits.CHS = 0b0101;
  1015  0074  1283               	bcf	3,5	;RP0=0, select bank0
  1016  0075  1303               	bcf	3,6	;RP1=0, select bank0
  1017  0076  081F               	movf	31,w	;volatile
  1018  0077  39C3               	andlw	-61
  1019  0078  3814               	iorlw	20
  1020  0079  009F               	movwf	31	;volatile
  1021                           
  1022                           ;ADC.c: 45:                 break;
  1023  007A  2920               	goto	l131
  1024  007B                     l103:	
  1025                           ;ADC.c: 46:             case 6:
  1026                           
  1027                           
  1028                           ;ADC.c: 47:                 TRISEbits.TRISE1 = 1;
  1029  007B  1683               	bsf	3,5	;RP0=1, select bank1
  1030  007C  1303               	bcf	3,6	;RP1=0, select bank1
  1031  007D  1489               	bsf	9,1	;volatile
  1032                           
  1033                           ;ADC.c: 48:                 ANSELbits.ANS6 = 1;
  1034  007E  1683               	bsf	3,5	;RP0=1, select bank3
  1035  007F  1703               	bsf	3,6	;RP1=1, select bank3
  1036  0080  1708               	bsf	8,6	;volatile
  1037  0081                     l1185:
  1038                           
  1039                           ;ADC.c: 49:                 ADCON0bits.CHS = 0b0110;
  1040  0081  1283               	bcf	3,5	;RP0=0, select bank0
  1041  0082  1303               	bcf	3,6	;RP1=0, select bank0
  1042  0083  081F               	movf	31,w	;volatile
  1043  0084  39C3               	andlw	-61
  1044  0085  3818               	iorlw	24
  1045  0086  009F               	movwf	31	;volatile
  1046  0087                     l1187:
  1047                           
  1048                           ;ADC.c: 51:                 TRISEbits.TRISE2 = 1;
  1049  0087  1683               	bsf	3,5	;RP0=1, select bank1
  1050  0088  1303               	bcf	3,6	;RP1=0, select bank1
  1051  0089  1509               	bsf	9,2	;volatile
  1052  008A                     l1189:
  1053                           
  1054                           ;ADC.c: 52:                 ANSELbits.ANS7 = 1;
  1055  008A  1683               	bsf	3,5	;RP0=1, select bank3
  1056  008B  1703               	bsf	3,6	;RP1=1, select bank3
  1057  008C  1788               	bsf	8,7	;volatile
  1058                           
  1059                           ;ADC.c: 53:                 ADCON0bits.CHS = 0b0111;
  1060  008D  1283               	bcf	3,5	;RP0=0, select bank0
  1061  008E  1303               	bcf	3,6	;RP1=0, select bank0
  1062  008F  081F               	movf	31,w	;volatile
  1063  0090  39C3               	andlw	-61
  1064  0091  381C               	iorlw	28
  1065  0092  009F               	movwf	31	;volatile
  1066                           
  1067                           ;ADC.c: 54:                 break;
  1068  0093  2920               	goto	l131
  1069  0094                     l105:	
  1070                           ;ADC.c: 55:             case 8:
  1071                           
  1072                           
  1073                           ;ADC.c: 56:                 TRISBbits.TRISB2 = 1;
  1074  0094  1683               	bsf	3,5	;RP0=1, select bank1
  1075  0095  1303               	bcf	3,6	;RP1=0, select bank1
  1076  0096  1506               	bsf	6,2	;volatile
  1077                           
  1078                           ;ADC.c: 57:                 ANSELHbits.ANS8 = 1;
  1079  0097  1683               	bsf	3,5	;RP0=1, select bank3
  1080  0098  1703               	bsf	3,6	;RP1=1, select bank3
  1081  0099  1409               	bsf	9,0	;volatile
  1082  009A                     l1191:
  1083                           
  1084                           ;ADC.c: 58:                 ADCON0bits.CHS = 0b1000;
  1085  009A  1283               	bcf	3,5	;RP0=0, select bank0
  1086  009B  1303               	bcf	3,6	;RP1=0, select bank0
  1087  009C  081F               	movf	31,w	;volatile
  1088  009D  39C3               	andlw	-61
  1089  009E  3820               	iorlw	32
  1090  009F  009F               	movwf	31	;volatile
  1091                           
  1092                           ;ADC.c: 59:                 break;
  1093  00A0  2920               	goto	l131
  1094  00A1                     l106:	
  1095                           ;ADC.c: 60:             case 9:
  1096                           
  1097                           
  1098                           ;ADC.c: 61:                 TRISBbits.TRISB3 = 1;
  1099  00A1  1683               	bsf	3,5	;RP0=1, select bank1
  1100  00A2  1303               	bcf	3,6	;RP1=0, select bank1
  1101  00A3  1586               	bsf	6,3	;volatile
  1102                           
  1103                           ;ADC.c: 62:                 ANSELHbits.ANS9 = 1;
  1104  00A4  1683               	bsf	3,5	;RP0=1, select bank3
  1105  00A5  1703               	bsf	3,6	;RP1=1, select bank3
  1106  00A6  1489               	bsf	9,1	;volatile
  1107  00A7                     l1193:
  1108                           
  1109                           ;ADC.c: 63:                 ADCON0bits.CHS = 0b1001;
  1110  00A7  1283               	bcf	3,5	;RP0=0, select bank0
  1111  00A8  1303               	bcf	3,6	;RP1=0, select bank0
  1112  00A9  081F               	movf	31,w	;volatile
  1113  00AA  39C3               	andlw	-61
  1114  00AB  3824               	iorlw	36
  1115  00AC  009F               	movwf	31	;volatile
  1116                           
  1117                           ;ADC.c: 64:                 break;
  1118  00AD  2920               	goto	l131
  1119  00AE                     l107:	
  1120                           ;ADC.c: 65:             case 10:
  1121                           
  1122                           
  1123                           ;ADC.c: 66:                 TRISBbits.TRISB1 = 1;
  1124  00AE  1683               	bsf	3,5	;RP0=1, select bank1
  1125  00AF  1303               	bcf	3,6	;RP1=0, select bank1
  1126  00B0  1486               	bsf	6,1	;volatile
  1127                           
  1128                           ;ADC.c: 67:                 ANSELHbits.ANS10 = 1;
  1129  00B1  1683               	bsf	3,5	;RP0=1, select bank3
  1130  00B2  1703               	bsf	3,6	;RP1=1, select bank3
  1131  00B3  1509               	bsf	9,2	;volatile
  1132  00B4                     l1195:
  1133                           
  1134                           ;ADC.c: 68:                 ADCON0bits.CHS = 0b1010;
  1135  00B4  1283               	bcf	3,5	;RP0=0, select bank0
  1136  00B5  1303               	bcf	3,6	;RP1=0, select bank0
  1137  00B6  081F               	movf	31,w	;volatile
  1138  00B7  39C3               	andlw	-61
  1139  00B8  3828               	iorlw	40
  1140  00B9  009F               	movwf	31	;volatile
  1141                           
  1142                           ;ADC.c: 69:                 break;
  1143  00BA  2920               	goto	l131
  1144  00BB                     l108:	
  1145                           ;ADC.c: 70:             case 11:
  1146                           
  1147                           
  1148                           ;ADC.c: 71:                 TRISBbits.TRISB4 = 1;
  1149  00BB  1683               	bsf	3,5	;RP0=1, select bank1
  1150  00BC  1303               	bcf	3,6	;RP1=0, select bank1
  1151  00BD  1606               	bsf	6,4	;volatile
  1152                           
  1153                           ;ADC.c: 72:                 ANSELHbits.ANS11 = 1;
  1154  00BE  1683               	bsf	3,5	;RP0=1, select bank3
  1155  00BF  1703               	bsf	3,6	;RP1=1, select bank3
  1156  00C0  1589               	bsf	9,3	;volatile
  1157  00C1                     l1197:
  1158                           
  1159                           ;ADC.c: 73:                 ADCON0bits.CHS = 0b1011;
  1160  00C1  1283               	bcf	3,5	;RP0=0, select bank0
  1161  00C2  1303               	bcf	3,6	;RP1=0, select bank0
  1162  00C3  081F               	movf	31,w	;volatile
  1163  00C4  39C3               	andlw	-61
  1164  00C5  382C               	iorlw	44
  1165  00C6  009F               	movwf	31	;volatile
  1166                           
  1167                           ;ADC.c: 74:                 break;
  1168  00C7  2920               	goto	l131
  1169  00C8                     l109:	
  1170                           ;ADC.c: 75:             case 12:
  1171                           
  1172                           
  1173                           ;ADC.c: 76:                 TRISBbits.TRISB0 = 1;
  1174  00C8  1683               	bsf	3,5	;RP0=1, select bank1
  1175  00C9  1303               	bcf	3,6	;RP1=0, select bank1
  1176  00CA  1406               	bsf	6,0	;volatile
  1177                           
  1178                           ;ADC.c: 77:                 ANSELHbits.ANS12 = 1;
  1179  00CB  1683               	bsf	3,5	;RP0=1, select bank3
  1180  00CC  1703               	bsf	3,6	;RP1=1, select bank3
  1181  00CD  1609               	bsf	9,4	;volatile
  1182  00CE                     l1199:
  1183                           
  1184                           ;ADC.c: 78:                 ADCON0bits.CHS = 0b1100;
  1185  00CE  1283               	bcf	3,5	;RP0=0, select bank0
  1186  00CF  1303               	bcf	3,6	;RP1=0, select bank0
  1187  00D0  081F               	movf	31,w	;volatile
  1188  00D1  39C3               	andlw	-61
  1189  00D2  3830               	iorlw	48
  1190  00D3  009F               	movwf	31	;volatile
  1191                           
  1192                           ;ADC.c: 79:                 break;
  1193  00D4  2920               	goto	l131
  1194  00D5                     l110:	
  1195                           ;ADC.c: 80:             case 13:
  1196                           
  1197                           
  1198                           ;ADC.c: 81:                 TRISBbits.TRISB5 = 1;
  1199  00D5  1683               	bsf	3,5	;RP0=1, select bank1
  1200  00D6  1303               	bcf	3,6	;RP1=0, select bank1
  1201  00D7  1686               	bsf	6,5	;volatile
  1202                           
  1203                           ;ADC.c: 82:                 ANSELHbits.ANS13 = 1;
  1204  00D8  1683               	bsf	3,5	;RP0=1, select bank3
  1205  00D9  1703               	bsf	3,6	;RP1=1, select bank3
  1206  00DA  1689               	bsf	9,5	;volatile
  1207  00DB                     l1201:
  1208                           
  1209                           ;ADC.c: 83:                 ADCON0bits.CHS = 0b1101;
  1210  00DB  1283               	bcf	3,5	;RP0=0, select bank0
  1211  00DC  1303               	bcf	3,6	;RP1=0, select bank0
  1212  00DD  081F               	movf	31,w	;volatile
  1213  00DE  39C3               	andlw	-61
  1214  00DF  3834               	iorlw	52
  1215  00E0  009F               	movwf	31	;volatile
  1216                           
  1217                           ;ADC.c: 84:                 break;
  1218  00E1  2920               	goto	l131
  1219  00E2                     l1205:
  1220  00E2  1283               	bcf	3,5	;RP0=0, select bank0
  1221  00E3  1303               	bcf	3,6	;RP1=0, select bank0
  1222  00E4  0820               	movf	ADC@ANA,w
  1223  00E5  00F5               	movwf	??_ADC
  1224  00E6  01F6               	clrf	??_ADC+1
  1225                           
  1226                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1227                           ; Switch size 1, requested type "simple"
  1228                           ; Number of cases is 1, Range of values is 0 to 0
  1229                           ; switch strategies available:
  1230                           ; Name         Instructions Cycles
  1231                           ; simple_byte            4     3 (average)
  1232                           ; direct_byte           11     8 (fixed)
  1233                           ; jumptable            260     6 (fixed)
  1234                           ;	Chosen strategy is simple_byte
  1235  00E7  0876               	movf	??_ADC+1,w
  1236  00E8  3A00               	xorlw	0	; case 0
  1237  00E9  1903               	skipnz
  1238  00EA  28EC               	goto	l1277
  1239  00EB  2920               	goto	l131
  1240  00EC                     l1277:
  1241                           
  1242                           ; Switch size 1, requested type "simple"
  1243                           ; Number of cases is 14, Range of values is 0 to 13
  1244                           ; switch strategies available:
  1245                           ; Name         Instructions Cycles
  1246                           ; simple_byte           43    22 (average)
  1247                           ; direct_byte           50     8 (fixed)
  1248                           ; jumptable            260     6 (fixed)
  1249                           ;	Chosen strategy is simple_byte
  1250  00EC  0875               	movf	??_ADC,w
  1251  00ED  3A00               	xorlw	0	; case 0
  1252  00EE  1903               	skipnz
  1253  00EF  282F               	goto	l96
  1254  00F0  3A01               	xorlw	1	; case 1
  1255  00F1  1903               	skipnz
  1256  00F2  283A               	goto	l98
  1257  00F3  3A03               	xorlw	3	; case 2
  1258  00F4  1903               	skipnz
  1259  00F5  2847               	goto	l99
  1260  00F6  3A01               	xorlw	1	; case 3
  1261  00F7  1903               	skipnz
  1262  00F8  2854               	goto	l100
  1263  00F9  3A07               	xorlw	7	; case 4
  1264  00FA  1903               	skipnz
  1265  00FB  2861               	goto	l101
  1266  00FC  3A01               	xorlw	1	; case 5
  1267  00FD  1903               	skipnz
  1268  00FE  286E               	goto	l102
  1269  00FF  3A03               	xorlw	3	; case 6
  1270  0100  1903               	skipnz
  1271  0101  287B               	goto	l103
  1272  0102  3A01               	xorlw	1	; case 7
  1273  0103  1903               	skipnz
  1274  0104  2887               	goto	l1187
  1275  0105  3A0F               	xorlw	15	; case 8
  1276  0106  1903               	skipnz
  1277  0107  2894               	goto	l105
  1278  0108  3A01               	xorlw	1	; case 9
  1279  0109  1903               	skipnz
  1280  010A  28A1               	goto	l106
  1281  010B  3A03               	xorlw	3	; case 10
  1282  010C  1903               	skipnz
  1283  010D  28AE               	goto	l107
  1284  010E  3A01               	xorlw	1	; case 11
  1285  010F  1903               	skipnz
  1286  0110  28BB               	goto	l108
  1287  0111  3A07               	xorlw	7	; case 12
  1288  0112  1903               	skipnz
  1289  0113  28C8               	goto	l109
  1290  0114  3A01               	xorlw	1	; case 13
  1291  0115  1903               	skipnz
  1292  0116  28D5               	goto	l110
  1293  0117  2920               	goto	l131
  1294  0118                     l1207:
  1295  0118  0374               	decf	ADC@justificado,w
  1296  0119  1D03               	btfss	3,2
  1297  011A  291C               	goto	u121
  1298  011B  291D               	goto	u120
  1299  011C                     u121:
  1300  011C  2920               	goto	l131
  1301  011D                     u120:
  1302  011D                     l1209:
  1303                           
  1304                           ;ADC.c: 89:         ADCON1bits.ADFM = 1;
  1305  011D  1683               	bsf	3,5	;RP0=1, select bank1
  1306  011E  1303               	bcf	3,6	;RP1=0, select bank1
  1307  011F  179F               	bsf	31,7	;volatile
  1308  0120                     l131:	
  1309                           ;ADC.c: 90:         switch (ANA) {
  1310                           
  1311  0120  0008               	return
  1312  0121                     __end_of_ADC:
  1313                           
  1314                           	psect	text4
  1315  0158                     __ptext4:	
  1316 ;; *************** function _isr *****************
  1317 ;; Defined at:
  1318 ;;		line 35 in file "PICADC.c"
  1319 ;; Parameters:    Size  Location     Type
  1320 ;;		None
  1321 ;; Auto vars:     Size  Location     Type
  1322 ;;		None
  1323 ;; Return value:  Size  Location     Type
  1324 ;;                  1    wreg      void 
  1325 ;; Registers used:
  1326 ;;		wreg, status,2, status,0, pclath, cstack
  1327 ;; Tracked objects:
  1328 ;;		On entry : 0/0
  1329 ;;		On exit  : 0/0
  1330 ;;		Unchanged: 0/0
  1331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1332 ;;      Params:         0       0       0       0       0
  1333 ;;      Locals:         0       0       0       0       0
  1334 ;;      Temps:          3       0       0       0       0
  1335 ;;      Totals:         3       0       0       0       0
  1336 ;;Total ram usage:        3 bytes
  1337 ;; Hardware stack levels used:    1
  1338 ;; Hardware stack levels required when called:    2
  1339 ;; This function calls:
  1340 ;;		_spiRead
  1341 ;;		_spiWrite
  1342 ;; This function is called by:
  1343 ;;		Interrupt level 1
  1344 ;; This function uses a non-reentrant model
  1345 ;;
  1346                           
  1347                           
  1348                           ;psect for function _isr
  1349  0158                     _isr:
  1350  0158                     i1l905:
  1351                           
  1352                           ;PICADC.c: 37:     ANSEL = 0;
  1353  0158  1283               	bcf	3,5	;RP0=0, select bank0
  1354  0159  1303               	bcf	3,6	;RP1=0, select bank0
  1355  015A  1F0C               	btfss	12,6	;volatile
  1356  015B  295D               	goto	u5_21
  1357  015C  295E               	goto	u5_20
  1358  015D                     u5_21:
  1359  015D  2970               	goto	i1l59
  1360  015E                     u5_20:
  1361  015E                     i1l907:
  1362                           
  1363                           ;PICADC.c: 38:     ANSELH = 0;
  1364  015E  081E               	movf	30,w	;volatile
  1365  015F  0088               	movwf	8	;volatile
  1366                           
  1367                           ;PICADC.c: 39:     TRISA = 0;
  1368  0160  0808               	movf	8,w	;volatile
  1369  0161  00F1               	movwf	??_isr
  1370  0162  0871               	movf	??_isr,w
  1371  0163  00F9               	movwf	_contador
  1372  0164                     i1l909:
  1373                           
  1374                           ;PICADC.c: 40:     PORTA = 0;
  1375  0164  130C               	bcf	12,6	;volatile
  1376                           
  1377                           ;PICADC.c: 41:     TRISB = 0b00000011;
  1378  0165  309F               	movlw	159
  1379  0166  00F1               	movwf	??_isr
  1380  0167                     u13_27:
  1381  0167  2968               	nop2
  1382  0168  0BF1               	decfsz	??_isr,f
  1383  0169  2967               	goto	u13_27
  1384  016A  296B               	nop2
  1385  016B  296C               	nop2
  1386  016C                     i1l911:
  1387                           
  1388                           ;PICADC.c: 42:     PORTB = 0;
  1389  016C  1283               	bcf	3,5	;RP0=0, select bank0
  1390  016D  1303               	bcf	3,6	;RP1=0, select bank0
  1391  016E  149F               	bsf	31,1	;volatile
  1392                           
  1393                           ;PICADC.c: 43:     TRISC = 0;
  1394  016F  2985               	goto	i1l62
  1395  0170                     i1l59:
  1396  0170  1D8C               	btfss	12,3	;volatile
  1397  0171  2973               	goto	u6_21
  1398  0172  2974               	goto	u6_20
  1399  0173                     u6_21:
  1400  0173  2985               	goto	i1l62
  1401  0174                     u6_20:
  1402  0174                     i1l913:
  1403                           
  1404                           ;PICADC.c: 44:     PORTC = 0;
  1405  0174  120A  118A  21BD  120A  118A  	fcall	_spiRead
  1406  0179  1283               	bcf	3,5	;RP0=0, select bank0
  1407  017A  1303               	bcf	3,6	;RP1=0, select bank0
  1408  017B  0089               	movwf	9	;volatile
  1409                           
  1410                           ;PICADC.c: 45:     TRISD = 0;
  1411  017C  0808               	movf	8,w	;volatile
  1412  017D  120A  118A  21CD  120A  118A  	fcall	_spiWrite
  1413  0182                     i1l915:
  1414                           
  1415                           ;PICADC.c: 46:     PORTD = 0;
  1416  0182  1283               	bcf	3,5	;RP0=0, select bank0
  1417  0183  1303               	bcf	3,6	;RP1=0, select bank0
  1418  0184  118C               	bcf	12,3	;volatile
  1419  0185                     i1l62:
  1420  0185  0873               	movf	??_isr+2,w
  1421  0186  008A               	movwf	10
  1422  0187  0E72               	swapf	??_isr+1,w
  1423  0188  0083               	movwf	3
  1424  0189  0EFE               	swapf	btemp,f
  1425  018A  0E7E               	swapf	btemp,w
  1426  018B  0009               	retfie
  1427  018C                     __end_of_isr:
  1428                           
  1429                           	psect	intentry
  1430  0004                     __pintentry:	
  1431                           ;incstack = 0
  1432                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1433                           
  1434  0004                     interrupt_function:
  1435  007E                     saved_w	set	btemp
  1436  0004  00FE               	movwf	btemp
  1437  0005  0E03               	swapf	3,w
  1438  0006  00F2               	movwf	??_isr+1
  1439  0007  080A               	movf	10,w
  1440  0008  00F3               	movwf	??_isr+2
  1441  0009  120A  118A  2958   	ljmp	_isr
  1442                           
  1443                           	psect	text5
  1444  01CD                     __ptext5:	
  1445 ;; *************** function _spiWrite *****************
  1446 ;; Defined at:
  1447 ;;		line 34 in file "SPI.c"
  1448 ;; Parameters:    Size  Location     Type
  1449 ;;  dat             1    wreg     unsigned char 
  1450 ;; Auto vars:     Size  Location     Type
  1451 ;;  dat             1    0[COMMON] unsigned char 
  1452 ;; Return value:  Size  Location     Type
  1453 ;;                  1    wreg      void 
  1454 ;; Registers used:
  1455 ;;		wreg
  1456 ;; Tracked objects:
  1457 ;;		On entry : 0/0
  1458 ;;		On exit  : 0/0
  1459 ;;		Unchanged: 0/0
  1460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1461 ;;      Params:         0       0       0       0       0
  1462 ;;      Locals:         1       0       0       0       0
  1463 ;;      Temps:          0       0       0       0       0
  1464 ;;      Totals:         1       0       0       0       0
  1465 ;;Total ram usage:        1 bytes
  1466 ;; Hardware stack levels used:    1
  1467 ;; This function calls:
  1468 ;;		Nothing
  1469 ;; This function is called by:
  1470 ;;		_isr
  1471 ;; This function uses a non-reentrant model
  1472 ;;
  1473                           
  1474                           
  1475                           ;psect for function _spiWrite
  1476  01CD                     _spiWrite:
  1477                           
  1478                           ;incstack = 0
  1479                           ; Regs used in _spiWrite: [wreg]
  1480                           ;spiWrite@dat stored from wreg
  1481  01CD  00F0               	movwf	spiWrite@dat
  1482  01CE                     i1l775:
  1483                           
  1484                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1485  01CE  0870               	movf	spiWrite@dat,w
  1486  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  1487  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  1488  01D1  0093               	movwf	19	;volatile
  1489  01D2                     i1l157:
  1490  01D2  0008               	return
  1491  01D3                     __end_of_spiWrite:
  1492                           
  1493                           	psect	text6
  1494  01BD                     __ptext6:	
  1495 ;; *************** function _spiRead *****************
  1496 ;; Defined at:
  1497 ;;		line 47 in file "SPI.c"
  1498 ;; Parameters:    Size  Location     Type
  1499 ;;		None
  1500 ;; Auto vars:     Size  Location     Type
  1501 ;;		None
  1502 ;; Return value:  Size  Location     Type
  1503 ;;                  1    wreg      unsigned char 
  1504 ;; Registers used:
  1505 ;;		wreg, status,2, status,0, pclath, cstack
  1506 ;; Tracked objects:
  1507 ;;		On entry : 0/0
  1508 ;;		On exit  : 0/0
  1509 ;;		Unchanged: 0/0
  1510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1511 ;;      Params:         0       0       0       0       0
  1512 ;;      Locals:         0       0       0       0       0
  1513 ;;      Temps:          0       0       0       0       0
  1514 ;;      Totals:         0       0       0       0       0
  1515 ;;Total ram usage:        0 bytes
  1516 ;; Hardware stack levels used:    1
  1517 ;; Hardware stack levels required when called:    1
  1518 ;; This function calls:
  1519 ;;		_spiReceiveWait
  1520 ;; This function is called by:
  1521 ;;		_isr
  1522 ;; This function uses a non-reentrant model
  1523 ;;
  1524                           
  1525                           
  1526                           ;psect for function _spiRead
  1527  01BD                     _spiRead:
  1528  01BD                     i1l769:	
  1529                           ;incstack = 0
  1530                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1531                           
  1532                           
  1533                           ;SPI.c: 49:     spiReceiveWait();
  1534  01BD  120A  118A  21C6  120A  118A  	fcall	_spiReceiveWait
  1535  01C2                     i1l771:
  1536                           
  1537                           ;SPI.c: 50:     return(SSPBUF);
  1538  01C2  1283               	bcf	3,5	;RP0=0, select bank0
  1539  01C3  1303               	bcf	3,6	;RP1=0, select bank0
  1540  01C4  0813               	movf	19,w	;volatile
  1541  01C5                     i1l165:
  1542  01C5  0008               	return
  1543  01C6                     __end_of_spiRead:
  1544                           
  1545                           	psect	text7
  1546  01C6                     __ptext7:	
  1547 ;; *************** function _spiReceiveWait *****************
  1548 ;; Defined at:
  1549 ;;		line 29 in file "SPI.c"
  1550 ;; Parameters:    Size  Location     Type
  1551 ;;		None
  1552 ;; Auto vars:     Size  Location     Type
  1553 ;;		None
  1554 ;; Return value:  Size  Location     Type
  1555 ;;                  1    wreg      void 
  1556 ;; Registers used:
  1557 ;;		None
  1558 ;; Tracked objects:
  1559 ;;		On entry : 0/0
  1560 ;;		On exit  : 0/0
  1561 ;;		Unchanged: 0/0
  1562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1563 ;;      Params:         0       0       0       0       0
  1564 ;;      Locals:         0       0       0       0       0
  1565 ;;      Temps:          0       0       0       0       0
  1566 ;;      Totals:         0       0       0       0       0
  1567 ;;Total ram usage:        0 bytes
  1568 ;; Hardware stack levels used:    1
  1569 ;; This function calls:
  1570 ;;		Nothing
  1571 ;; This function is called by:
  1572 ;;		_spiRead
  1573 ;; This function uses a non-reentrant model
  1574 ;;
  1575                           
  1576                           
  1577                           ;psect for function _spiReceiveWait
  1578  01C6                     _spiReceiveWait:
  1579  01C6                     i1l767:	
  1580                           ;incstack = 0
  1581                           ; Regs used in _spiReceiveWait: []
  1582                           
  1583  01C6                     i1l151:	
  1584                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  1585                           
  1586  01C6  1683               	bsf	3,5	;RP0=1, select bank1
  1587  01C7  1303               	bcf	3,6	;RP1=0, select bank1
  1588  01C8  1C14               	btfss	20,0	;volatile
  1589  01C9  29CB               	goto	u2_21
  1590  01CA  29CC               	goto	u2_20
  1591  01CB                     u2_21:
  1592  01CB  29C6               	goto	i1l151
  1593  01CC                     u2_20:
  1594  01CC                     i1l154:
  1595  01CC  0008               	return
  1596  01CD                     __end_of_spiReceiveWait:
  1597  007E                     btemp	set	126	;btemp
  1598  007E                     wtemp0	set	126
  1599                           
  1600                           	psect	config
  1601                           
  1602                           ;Config register CONFIG1 @ 0x2007
  1603                           ;	Oscillator Selection bits
  1604                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  1605                           ;	Watchdog Timer Enable bit
  1606                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1607                           ;	Power-up Timer Enable bit
  1608                           ;	PWRTE = OFF, PWRT disabled
  1609                           ;	RE3/MCLR pin function select bit
  1610                           ;	MCLRE = 0x1, unprogrammed default
  1611                           ;	Code Protection bit
  1612                           ;	CP = OFF, Program memory code protection is disabled
  1613                           ;	Data Code Protection bit
  1614                           ;	CPD = OFF, Data memory code protection is disabled
  1615                           ;	Brown Out Reset Selection bits
  1616                           ;	BOREN = ON, BOR enabled
  1617                           ;	Internal External Switchover bit
  1618                           ;	IESO = 0x1, unprogrammed default
  1619                           ;	Fail-Safe Clock Monitor Enabled bit
  1620                           ;	FCMEN = 0x1, unprogrammed default
  1621                           ;	Low Voltage Programming Enable bit
  1622                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1623                           ;	In-Circuit Debugger Mode bit
  1624                           ;	DEBUG = 0x1, unprogrammed default
  1625  2007                     	org	8199
  1626  2007  2FF2               	dw	12274
  1627                           
  1628                           ;Config register CONFIG2 @ 0x2008
  1629                           ;	Brown-out Reset Selection bit
  1630                           ;	BOR4V = 0x1, unprogrammed default
  1631                           ;	Flash Program Memory Self Write Enable bits
  1632                           ;	WRT = OFF, Write protection off
  1633  2008                     	org	8200
  1634  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      1       1
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC
    _setup->_spiInit

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    _main->_ADC
    _setup->_spiInit

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     670
                                _ADC
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     456
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              4 COMMON     3     0      3
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC                                                  4     3      1     214
                                              4 COMMON     3     2      1
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0      15
                                              1 COMMON     3     3      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC
   _setup
     _spiInit

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      1       1       5        1.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       B      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 14:51:47 2021

                      _t 0077              _SSPSTATbits 0094                       l73 0157  
                     l67 01B9                       l68 01B9                       l96 002F  
                     l98 003A                       l99 0047                      l100 0054  
                    l101 0061                      l110 00D5                      l102 006E  
                    l103 007B                      l105 0094                      l106 00A1  
                    l107 00AE                      l131 0120                      l108 00BB  
                    l109 00C8                      l147 01A4                      l148 01A9  
                    _ADC 0016                      u100 0198                      u101 0197  
                    u110 002B                      u111 002A                      u120 011D  
                    u121 011C                      _isr 0158                     ?_ADC 0074  
                   l1201 00DB                     l1121 01A3                     l1113 018F  
                   l1115 0198                     l1131 0135                     l1123 0121  
                   l1205 00E2                     l1117 019C                     l1141 0144  
                   l1133 0138                     l1125 012B                     l1207 0118  
                   l1119 019E                     l1151 0149                     l1143 0145  
                   l1135 013B                     l1127 012F                     l1209 011D  
                   l1161 001A                     l1153 014A                     l1145 0146  
                   l1137 013E                     l1129 0132                     l1171 002B  
                   l1163 001E                     l1155 014D                     l1147 0147  
                   l1139 0141                     l1251 01AA                     l1181 0067  
                   l1173 0035                     l1165 0021                     l1157 014E  
                   l1149 0148                     l1253 01AF                     l1191 009A  
                   l1183 0074                     l1175 0040                     l1167 0022  
                   l1159 0019                     l1255 01B6                     l1193 00A7  
                   l1185 0081                     l1177 004D                     l1169 0023  
                   l1195 00B4                     l1187 0087                     l1179 005A  
                   l1277 00EC                     l1197 00C1                     l1189 008A  
                   l1199 00CE                     ?_isr 0070                     i1l62 0185  
                   i1l59 0170                     u2_20 01CC                     u2_21 01CB  
                   u5_20 015E                     u5_21 015D                     u6_20 0174  
                   u6_21 0173                     _main 01AA                     btemp 007E  
                   start 000C                    ??_ADC 0075                    ??_isr 0071  
                  ?_main 0070                    _ANSEL 0188                    i1l151 01C6  
                  i1l154 01CC                    i1l165 01C5                    i1l157 01D2  
                  i1l911 016C                    i1l913 0174                    i1l905 0158  
                  i1l771 01C2                    i1l915 0182                    i1l907 015E  
                  i1l909 0164                    i1l767 01C6                    i1l775 01CE  
                  i1l769 01BD                    u13_27 0167                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  _SSPIF 0063                    _setup 0121                    pclath 000A  
        __end_of_spiInit 01AA          __end_of_spiRead 01C6                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 01BD  
                 ADC@ANA 0020                   ??_main 0077                   _ADRESH 001E  
                 ?_setup 0070                   _ANSELH 0189                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
                 saved_w 007E         __end_of_spiWrite 01D3                ??_spiInit 0077  
              ??_spiRead 0070  __end_of__initialization 0012           ADC@justificado 0074  
         __pcstackCOMMON 0070            __end_of_setup 0158                  ??_setup 0077  
             __pmaintext 01AA               __pintentry 0004  __size_of_spiReceiveWait 0007  
                _SSPSTAT 0094                ?_spiWrite 0070                _ANSELbits 0188  
                __ptext1 0121                  __ptext2 018C                  __ptext3 0016  
                __ptext4 0158                  __ptext5 01CD                  __ptext6 01BD  
                __ptext7 01C6             __size_of_ADC 010B             __size_of_isr 0034  
                _spiInit 018C                  _spiRead 01BD     end_of_initialization 0012  
             ??_spiWrite 0070                _TRISAbits 0085                _TRISBbits 0086  
              _TRISEbits 0089              spiWrite@dat 0070           _spiReceiveWait 01C6  
    start_initialization 000F              __end_of_ADC 0121              __end_of_isr 018C  
 __end_of_spiReceiveWait 01CD              __pbssCOMMON 0077                ___latbits 0002  
          __pcstackBANK0 0020          ?_spiReceiveWait 0070        __size_of_spiWrite 0006  
               ?_spiInit 0074                 ?_spiRead 0070           __size_of_setup 0037  
   spiInit@sTransmitEdge 0076        interrupt_function 0004                 _PIE1bits 008C  
     spiInit@sDataSample 0074                 _PIR1bits 000C               _ADCON0bits 001F  
             _ADCON1bits 009F               _ANSELHbits 0189         __size_of_spiInit 001E  
       __size_of_spiRead 0009                 _contador 0079            __size_of_main 0013  
               _spiWrite 01CD             spiInit@sType 0020        spiInit@sClockIdle 0075  
             _INTCONbits 000B                 intlevel1 0000         ??_spiReceiveWait 0070  
