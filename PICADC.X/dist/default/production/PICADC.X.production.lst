

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 22 17:01:47 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0000                     	;# 
   206  0001                     	;# 
   207  0002                     	;# 
   208  0003                     	;# 
   209  0004                     	;# 
   210  0005                     	;# 
   211  0006                     	;# 
   212  0007                     	;# 
   213  0008                     	;# 
   214  0009                     	;# 
   215  000A                     	;# 
   216  000B                     	;# 
   217  000C                     	;# 
   218  000D                     	;# 
   219  000E                     	;# 
   220  000E                     	;# 
   221  000F                     	;# 
   222  0010                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0014                     	;# 
   227  0015                     	;# 
   228  0015                     	;# 
   229  0016                     	;# 
   230  0017                     	;# 
   231  0018                     	;# 
   232  0019                     	;# 
   233  001A                     	;# 
   234  001B                     	;# 
   235  001B                     	;# 
   236  001C                     	;# 
   237  001D                     	;# 
   238  001E                     	;# 
   239  001F                     	;# 
   240  0081                     	;# 
   241  0085                     	;# 
   242  0086                     	;# 
   243  0087                     	;# 
   244  0088                     	;# 
   245  0089                     	;# 
   246  008C                     	;# 
   247  008D                     	;# 
   248  008E                     	;# 
   249  008F                     	;# 
   250  0090                     	;# 
   251  0091                     	;# 
   252  0092                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0094                     	;# 
   257  0095                     	;# 
   258  0096                     	;# 
   259  0097                     	;# 
   260  0098                     	;# 
   261  0099                     	;# 
   262  009A                     	;# 
   263  009B                     	;# 
   264  009C                     	;# 
   265  009D                     	;# 
   266  009E                     	;# 
   267  009F                     	;# 
   268  0105                     	;# 
   269  0107                     	;# 
   270  0108                     	;# 
   271  0109                     	;# 
   272  010C                     	;# 
   273  010C                     	;# 
   274  010D                     	;# 
   275  010E                     	;# 
   276  010F                     	;# 
   277  0185                     	;# 
   278  0187                     	;# 
   279  0188                     	;# 
   280  0189                     	;# 
   281  018C                     	;# 
   282  018D                     	;# 
   283  000B                     _INTCONbits	set	11
   284  0009                     _PORTE	set	9
   285  0007                     _PORTC	set	7
   286  0006                     _PORTB	set	6
   287  0005                     _PORTA	set	5
   288  001F                     _ADCON0bits	set	31
   289  001E                     _ADRESH	set	30
   290  0008                     _PORTD	set	8
   291  000C                     _PIR1bits	set	12
   292  0086                     _TRISBbits	set	134
   293  0089                     _TRISEbits	set	137
   294  0085                     _TRISAbits	set	133
   295  008C                     _PIE1bits	set	140
   296  009F                     _ADCON1bits	set	159
   297  0089                     _TRISE	set	137
   298  0088                     _TRISD	set	136
   299  0087                     _TRISC	set	135
   300  0086                     _TRISB	set	134
   301  0085                     _TRISA	set	133
   302  0189                     _ANSELHbits	set	393
   303  0188                     _ANSELbits	set	392
   304  0189                     _ANSELH	set	393
   305  0188                     _ANSEL	set	392
   306                           
   307                           	psect	cinit
   308  000F                     start_initialization:	
   309                           ; #config settings
   310                           
   311  000F                     __initialization:
   312                           
   313                           ; Clear objects allocated to COMMON
   314  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   315  0010                     end_of_initialization:	
   316                           ;End of C runtime variable initialization code
   317                           
   318  0010                     __end_of__initialization:
   319  0010  0183               	clrf	3
   320  0011  120A  118A  2944   	ljmp	_main	;jump to C main() function
   321                           
   322                           	psect	bssCOMMON
   323  0077                     __pbssCOMMON:
   324  0077                     _contador:
   325  0077                     	ds	1
   326                           
   327                           	psect	cstackCOMMON
   328  0070                     __pcstackCOMMON:
   329  0070                     ?_setup:
   330  0070                     ?_isr:	
   331                           ; 1 bytes @ 0x0
   332                           
   333  0070                     ??_isr:	
   334                           ; 1 bytes @ 0x0
   335                           
   336  0070                     ?_main:	
   337                           ; 1 bytes @ 0x0
   338                           
   339                           
   340                           ; 2 bytes @ 0x0
   341  0070                     	ds	3
   342  0073                     ??_setup:
   343  0073                     ?_ADC:	
   344                           ; 1 bytes @ 0x3
   345                           
   346  0073                     ADC@justificado:	
   347                           ; 1 bytes @ 0x3
   348                           
   349                           
   350                           ; 1 bytes @ 0x3
   351  0073                     	ds	1
   352  0074                     ??_ADC:
   353                           
   354                           ; 1 bytes @ 0x4
   355  0074                     	ds	2
   356  0076                     ADC@ANA:
   357                           
   358                           ; 1 bytes @ 0x6
   359  0076                     	ds	1
   360  0077                     ??_main:
   361                           
   362                           	psect	maintext
   363  0144                     __pmaintext:	
   364                           ; 1 bytes @ 0x7
   365 ;;
   366 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   367 ;;
   368 ;; *************** function _main *****************
   369 ;; Defined at:
   370 ;;		line 43 in file "PICADC.c"
   371 ;; Parameters:    Size  Location     Type
   372 ;;		None
   373 ;; Auto vars:     Size  Location     Type
   374 ;;		None
   375 ;; Return value:  Size  Location     Type
   376 ;;                  2   50[None  ] int 
   377 ;; Registers used:
   378 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   379 ;; Tracked objects:
   380 ;;		On entry : B00/0
   381 ;;		On exit  : 0/0
   382 ;;		Unchanged: 0/0
   383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   384 ;;      Params:         0       0       0       0       0
   385 ;;      Locals:         0       0       0       0       0
   386 ;;      Temps:          0       0       0       0       0
   387 ;;      Totals:         0       0       0       0       0
   388 ;;Total ram usage:        0 bytes
   389 ;; Hardware stack levels required when called:    2
   390 ;; This function calls:
   391 ;;		_ADC
   392 ;;		_setup
   393 ;; This function is called by:
   394 ;;		Startup code after reset
   395 ;; This function uses a non-reentrant model
   396 ;;
   397                           
   398                           
   399                           ;psect for function _main
   400  0144                     _main:
   401  0144                     l949:	
   402                           ;incstack = 0
   403                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   404                           
   405  0144  120A  118A  2103  120A  118A  	fcall	_setup
   406  0149                     l951:
   407  0149  01F3               	clrf	ADC@justificado
   408  014A  3000               	movlw	0
   409  014B  120A  118A  2014  120A  118A  	fcall	_ADC
   410  0150                     l953:
   411  0150  1283               	bcf	3,5	;RP0=0, select bank0
   412  0151  1303               	bcf	3,6	;RP1=0, select bank0
   413  0152  149F               	bsf	31,1	;volatile
   414  0153                     l51:
   415  0153                     l52:
   416  0153  2953               	goto	l51
   417  0154  120A  118A  280C   	ljmp	start
   418  0157                     __end_of_main:
   419                           
   420                           	psect	text1
   421  0103                     __ptext1:	
   422 ;; *************** function _setup *****************
   423 ;; Defined at:
   424 ;;		line 51 in file "PICADC.c"
   425 ;; Parameters:    Size  Location     Type
   426 ;;		None
   427 ;; Auto vars:     Size  Location     Type
   428 ;;		None
   429 ;; Return value:  Size  Location     Type
   430 ;;                  1    wreg      void 
   431 ;; Registers used:
   432 ;;		wreg, status,2
   433 ;; Tracked objects:
   434 ;;		On entry : 0/0
   435 ;;		On exit  : 0/0
   436 ;;		Unchanged: 0/0
   437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   438 ;;      Params:         0       0       0       0       0
   439 ;;      Locals:         0       0       0       0       0
   440 ;;      Temps:          0       0       0       0       0
   441 ;;      Totals:         0       0       0       0       0
   442 ;;Total ram usage:        0 bytes
   443 ;; Hardware stack levels used:    1
   444 ;; Hardware stack levels required when called:    1
   445 ;; This function calls:
   446 ;;		Nothing
   447 ;; This function is called by:
   448 ;;		_main
   449 ;; This function uses a non-reentrant model
   450 ;;
   451                           
   452                           
   453                           ;psect for function _setup
   454  0103                     _setup:
   455  0103                     l707:	
   456                           ;incstack = 0
   457                           ; Regs used in _setup: [wreg+status,2]
   458                           
   459  0103  1683               	bsf	3,5	;RP0=1, select bank3
   460  0104  1703               	bsf	3,6	;RP1=1, select bank3
   461  0105  0188               	clrf	8	;volatile
   462  0106  0189               	clrf	9	;volatile
   463  0107  1683               	bsf	3,5	;RP0=1, select bank1
   464  0108  1303               	bcf	3,6	;RP1=0, select bank1
   465  0109  0185               	clrf	5	;volatile
   466  010A  1283               	bcf	3,5	;RP0=0, select bank0
   467  010B  1303               	bcf	3,6	;RP1=0, select bank0
   468  010C  0185               	clrf	5	;volatile
   469  010D                     l709:
   470  010D  3003               	movlw	3
   471  010E  1683               	bsf	3,5	;RP0=1, select bank1
   472  010F  1303               	bcf	3,6	;RP1=0, select bank1
   473  0110  0086               	movwf	6	;volatile
   474  0111                     l711:
   475  0111  1283               	bcf	3,5	;RP0=0, select bank0
   476  0112  1303               	bcf	3,6	;RP1=0, select bank0
   477  0113  0186               	clrf	6	;volatile
   478  0114                     l713:
   479  0114  1683               	bsf	3,5	;RP0=1, select bank1
   480  0115  1303               	bcf	3,6	;RP1=0, select bank1
   481  0116  0187               	clrf	7	;volatile
   482  0117                     l715:
   483  0117  1283               	bcf	3,5	;RP0=0, select bank0
   484  0118  1303               	bcf	3,6	;RP1=0, select bank0
   485  0119  0187               	clrf	7	;volatile
   486  011A                     l717:
   487  011A  1683               	bsf	3,5	;RP0=1, select bank1
   488  011B  1303               	bcf	3,6	;RP1=0, select bank1
   489  011C  0188               	clrf	8	;volatile
   490  011D                     l719:
   491  011D  1283               	bcf	3,5	;RP0=0, select bank0
   492  011E  1303               	bcf	3,6	;RP1=0, select bank0
   493  011F  0188               	clrf	8	;volatile
   494  0120                     l721:
   495  0120  1683               	bsf	3,5	;RP0=1, select bank1
   496  0121  1303               	bcf	3,6	;RP1=0, select bank1
   497  0122  0189               	clrf	9	;volatile
   498  0123                     l723:
   499  0123  1283               	bcf	3,5	;RP0=0, select bank0
   500  0124  1303               	bcf	3,6	;RP1=0, select bank0
   501  0125  0189               	clrf	9	;volatile
   502  0126                     l725:
   503  0126  178B               	bsf	11,7	;volatile
   504  0127                     l727:
   505  0127  170B               	bsf	11,6	;volatile
   506  0128                     l729:
   507  0128  01F7               	clrf	_contador
   508  0129                     l57:
   509  0129  0008               	return
   510  012A                     __end_of_setup:
   511                           
   512                           	psect	text2
   513  0014                     __ptext2:	
   514 ;; *************** function _ADC *****************
   515 ;; Defined at:
   516 ;;		line 3 in file "ADC.c"
   517 ;; Parameters:    Size  Location     Type
   518 ;;  ANA             1    wreg     unsigned char 
   519 ;;  justificado     1    3[COMMON] unsigned char 
   520 ;; Auto vars:     Size  Location     Type
   521 ;;  ANA             1    6[COMMON] unsigned char 
   522 ;; Return value:  Size  Location     Type
   523 ;;                  1    wreg      void 
   524 ;; Registers used:
   525 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   526 ;; Tracked objects:
   527 ;;		On entry : 0/0
   528 ;;		On exit  : 0/0
   529 ;;		Unchanged: 0/0
   530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   531 ;;      Params:         1       0       0       0       0
   532 ;;      Locals:         1       0       0       0       0
   533 ;;      Temps:          2       0       0       0       0
   534 ;;      Totals:         4       0       0       0       0
   535 ;;Total ram usage:        4 bytes
   536 ;; Hardware stack levels used:    1
   537 ;; Hardware stack levels required when called:    1
   538 ;; This function calls:
   539 ;;		Nothing
   540 ;; This function is called by:
   541 ;;		_main
   542 ;; This function uses a non-reentrant model
   543 ;;
   544                           
   545                           
   546                           ;psect for function _ADC
   547  0014                     _ADC:
   548                           
   549                           ;incstack = 0
   550                           ; Regs used in _ADC: [wreg-fsr0h+status,2+status,0]
   551                           ;ADC@ANA stored from wreg
   552  0014  00F6               	movwf	ADC@ANA
   553  0015                     l857:
   554                           
   555                           ;ADC.c: 6:     ADCON0bits.ADON = 1;
   556  0015  1283               	bcf	3,5	;RP0=0, select bank0
   557  0016  1303               	bcf	3,6	;RP1=0, select bank0
   558  0017  141F               	bsf	31,0	;volatile
   559  0018                     l859:
   560                           
   561                           ;ADC.c: 7:     ADCON0bits.ADCS = 0b10;
   562  0018  081F               	movf	31,w	;volatile
   563  0019  393F               	andlw	-193
   564  001A  3880               	iorlw	128
   565  001B  009F               	movwf	31	;volatile
   566  001C                     l861:
   567                           
   568                           ;ADC.c: 8:     ADCON1bits.VCFG1 = 0;
   569  001C  1683               	bsf	3,5	;RP0=1, select bank1
   570  001D  1303               	bcf	3,6	;RP1=0, select bank1
   571  001E  129F               	bcf	31,5	;volatile
   572  001F                     l863:
   573                           
   574                           ;ADC.c: 9:     ADCON1bits.VCFG0 = 0;
   575  001F  121F               	bcf	31,4	;volatile
   576  0020                     l865:
   577                           
   578                           ;ADC.c: 10:     PIE1bits.ADIE = 1;
   579  0020  170C               	bsf	12,6	;volatile
   580  0021                     l867:
   581                           
   582                           ;ADC.c: 11:     PIR1bits.ADIF = 0;
   583  0021  1283               	bcf	3,5	;RP0=0, select bank0
   584  0022  1303               	bcf	3,6	;RP1=0, select bank0
   585  0023  130C               	bcf	12,6	;volatile
   586                           
   587                           ;ADC.c: 13:     if (justificado == 0) {
   588  0024  0873               	movf	ADC@justificado,w
   589  0025  1D03               	btfss	3,2
   590  0026  2828               	goto	u41
   591  0027  2829               	goto	u40
   592  0028                     u41:
   593  0028  28FA               	goto	l905
   594  0029                     u40:
   595  0029                     l869:
   596                           
   597                           ;ADC.c: 14:         ADCON1bits.ADFM = 0;
   598  0029  1683               	bsf	3,5	;RP0=1, select bank1
   599  002A  1303               	bcf	3,6	;RP1=0, select bank1
   600  002B  139F               	bcf	31,7	;volatile
   601                           
   602                           ;ADC.c: 15:         switch (ANA) {
   603  002C  28C6               	goto	l903
   604  002D                     l80:	
   605                           ;ADC.c: 16:             case 0:
   606                           
   607                           
   608                           ;ADC.c: 17:                 TRISAbits.TRISA0 = 1;
   609  002D  1405               	bsf	5,0	;volatile
   610                           
   611                           ;ADC.c: 18:                 ANSELbits.ANS0 = 1;
   612  002E  1683               	bsf	3,5	;RP0=1, select bank3
   613  002F  1703               	bsf	3,6	;RP1=1, select bank3
   614  0030  1408               	bsf	8,0	;volatile
   615  0031                     l871:
   616                           
   617                           ;ADC.c: 19:                 ADCON0bits.CHS = 0b0000;
   618  0031  30C3               	movlw	-61
   619  0032  1283               	bcf	3,5	;RP0=0, select bank0
   620  0033  1303               	bcf	3,6	;RP1=0, select bank0
   621  0034  059F               	andwf	31,f	;volatile
   622                           
   623                           ;ADC.c: 20:                 break;
   624  0035  2902               	goto	l115
   625  0036                     l82:	
   626                           ;ADC.c: 21:             case 1:
   627                           
   628                           
   629                           ;ADC.c: 22:                 TRISAbits.TRISA1 = 1;
   630  0036  1485               	bsf	5,1	;volatile
   631                           
   632                           ;ADC.c: 23:                 ANSELbits.ANS1 = 1;
   633  0037  1683               	bsf	3,5	;RP0=1, select bank3
   634  0038  1703               	bsf	3,6	;RP1=1, select bank3
   635  0039  1488               	bsf	8,1	;volatile
   636  003A                     l873:
   637                           
   638                           ;ADC.c: 24:                 ADCON0bits.CHS = 0b0001;
   639  003A  1283               	bcf	3,5	;RP0=0, select bank0
   640  003B  1303               	bcf	3,6	;RP1=0, select bank0
   641  003C  081F               	movf	31,w	;volatile
   642  003D  39C3               	andlw	-61
   643  003E  3804               	iorlw	4
   644  003F  009F               	movwf	31	;volatile
   645                           
   646                           ;ADC.c: 25:                 break;
   647  0040  2902               	goto	l115
   648  0041                     l83:	
   649                           ;ADC.c: 26:             case 2:
   650                           
   651                           
   652                           ;ADC.c: 27:                 TRISAbits.TRISA2 = 1;
   653  0041  1505               	bsf	5,2	;volatile
   654                           
   655                           ;ADC.c: 28:                 ANSELbits.ANS2 = 1;
   656  0042  1683               	bsf	3,5	;RP0=1, select bank3
   657  0043  1703               	bsf	3,6	;RP1=1, select bank3
   658  0044  1508               	bsf	8,2	;volatile
   659  0045                     l875:
   660                           
   661                           ;ADC.c: 29:                 ADCON0bits.CHS = 0b0010;
   662  0045  1283               	bcf	3,5	;RP0=0, select bank0
   663  0046  1303               	bcf	3,6	;RP1=0, select bank0
   664  0047  081F               	movf	31,w	;volatile
   665  0048  39C3               	andlw	-61
   666  0049  3808               	iorlw	8
   667  004A  009F               	movwf	31	;volatile
   668                           
   669                           ;ADC.c: 30:                 break;
   670  004B  2902               	goto	l115
   671  004C                     l84:	
   672                           ;ADC.c: 31:             case 3:
   673                           
   674                           
   675                           ;ADC.c: 32:                 TRISAbits.TRISA3 = 1;
   676  004C  1585               	bsf	5,3	;volatile
   677                           
   678                           ;ADC.c: 33:                 ANSELbits.ANS3 = 1;
   679  004D  1683               	bsf	3,5	;RP0=1, select bank3
   680  004E  1703               	bsf	3,6	;RP1=1, select bank3
   681  004F  1588               	bsf	8,3	;volatile
   682  0050                     l877:
   683                           
   684                           ;ADC.c: 34:                 ADCON0bits.CHS = 0b0011;
   685  0050  1283               	bcf	3,5	;RP0=0, select bank0
   686  0051  1303               	bcf	3,6	;RP1=0, select bank0
   687  0052  081F               	movf	31,w	;volatile
   688  0053  39C3               	andlw	-61
   689  0054  380C               	iorlw	12
   690  0055  009F               	movwf	31	;volatile
   691                           
   692                           ;ADC.c: 35:                 break;
   693  0056  2902               	goto	l115
   694  0057                     l85:	
   695                           ;ADC.c: 36:             case 4:
   696                           
   697                           
   698                           ;ADC.c: 37:                 TRISAbits.TRISA5 = 1;
   699  0057  1685               	bsf	5,5	;volatile
   700                           
   701                           ;ADC.c: 38:                 ANSELbits.ANS4 = 1;
   702  0058  1683               	bsf	3,5	;RP0=1, select bank3
   703  0059  1703               	bsf	3,6	;RP1=1, select bank3
   704  005A  1608               	bsf	8,4	;volatile
   705  005B                     l879:
   706                           
   707                           ;ADC.c: 39:                 ADCON0bits.CHS = 0b0100;
   708  005B  1283               	bcf	3,5	;RP0=0, select bank0
   709  005C  1303               	bcf	3,6	;RP1=0, select bank0
   710  005D  081F               	movf	31,w	;volatile
   711  005E  39C3               	andlw	-61
   712  005F  3810               	iorlw	16
   713  0060  009F               	movwf	31	;volatile
   714                           
   715                           ;ADC.c: 40:                 break;
   716  0061  2902               	goto	l115
   717  0062                     l86:	
   718                           ;ADC.c: 41:             case 5:
   719                           
   720                           
   721                           ;ADC.c: 42:                 TRISEbits.TRISE0 = 1;
   722  0062  1409               	bsf	9,0	;volatile
   723                           
   724                           ;ADC.c: 43:                 ANSELbits.ANS5 = 1;
   725  0063  1683               	bsf	3,5	;RP0=1, select bank3
   726  0064  1703               	bsf	3,6	;RP1=1, select bank3
   727  0065  1688               	bsf	8,5	;volatile
   728  0066                     l881:
   729                           
   730                           ;ADC.c: 44:                 ADCON0bits.CHS = 0b0101;
   731  0066  1283               	bcf	3,5	;RP0=0, select bank0
   732  0067  1303               	bcf	3,6	;RP1=0, select bank0
   733  0068  081F               	movf	31,w	;volatile
   734  0069  39C3               	andlw	-61
   735  006A  3814               	iorlw	20
   736  006B  009F               	movwf	31	;volatile
   737                           
   738                           ;ADC.c: 45:                 break;
   739  006C  2902               	goto	l115
   740  006D                     l87:	
   741                           ;ADC.c: 46:             case 6:
   742                           
   743                           
   744                           ;ADC.c: 47:                 TRISEbits.TRISE1 = 1;
   745  006D  1489               	bsf	9,1	;volatile
   746                           
   747                           ;ADC.c: 48:                 ANSELbits.ANS6 = 1;
   748  006E  1683               	bsf	3,5	;RP0=1, select bank3
   749  006F  1703               	bsf	3,6	;RP1=1, select bank3
   750  0070  1708               	bsf	8,6	;volatile
   751  0071                     l883:
   752                           
   753                           ;ADC.c: 49:                 ADCON0bits.CHS = 0b0110;
   754  0071  1283               	bcf	3,5	;RP0=0, select bank0
   755  0072  1303               	bcf	3,6	;RP1=0, select bank0
   756  0073  081F               	movf	31,w	;volatile
   757  0074  39C3               	andlw	-61
   758  0075  3818               	iorlw	24
   759  0076  009F               	movwf	31	;volatile
   760  0077                     l885:
   761                           
   762                           ;ADC.c: 51:                 TRISEbits.TRISE2 = 1;
   763  0077  1683               	bsf	3,5	;RP0=1, select bank1
   764  0078  1303               	bcf	3,6	;RP1=0, select bank1
   765  0079  1509               	bsf	9,2	;volatile
   766  007A                     l887:
   767                           
   768                           ;ADC.c: 52:                 ANSELbits.ANS7 = 1;
   769  007A  1683               	bsf	3,5	;RP0=1, select bank3
   770  007B  1703               	bsf	3,6	;RP1=1, select bank3
   771  007C  1788               	bsf	8,7	;volatile
   772                           
   773                           ;ADC.c: 53:                 ADCON0bits.CHS = 0b0111;
   774  007D  1283               	bcf	3,5	;RP0=0, select bank0
   775  007E  1303               	bcf	3,6	;RP1=0, select bank0
   776  007F  081F               	movf	31,w	;volatile
   777  0080  39C3               	andlw	-61
   778  0081  381C               	iorlw	28
   779  0082  009F               	movwf	31	;volatile
   780                           
   781                           ;ADC.c: 54:                 break;
   782  0083  2902               	goto	l115
   783  0084                     l89:	
   784                           ;ADC.c: 55:             case 8:
   785                           
   786                           
   787                           ;ADC.c: 56:                 TRISBbits.TRISB2 = 1;
   788  0084  1506               	bsf	6,2	;volatile
   789                           
   790                           ;ADC.c: 57:                 ANSELHbits.ANS8 = 1;
   791  0085  1683               	bsf	3,5	;RP0=1, select bank3
   792  0086  1703               	bsf	3,6	;RP1=1, select bank3
   793  0087  1409               	bsf	9,0	;volatile
   794  0088                     l889:
   795                           
   796                           ;ADC.c: 58:                 ADCON0bits.CHS = 0b1000;
   797  0088  1283               	bcf	3,5	;RP0=0, select bank0
   798  0089  1303               	bcf	3,6	;RP1=0, select bank0
   799  008A  081F               	movf	31,w	;volatile
   800  008B  39C3               	andlw	-61
   801  008C  3820               	iorlw	32
   802  008D  009F               	movwf	31	;volatile
   803                           
   804                           ;ADC.c: 59:                 break;
   805  008E  2902               	goto	l115
   806  008F                     l90:	
   807                           ;ADC.c: 60:             case 9:
   808                           
   809                           
   810                           ;ADC.c: 61:                 TRISBbits.TRISB3 = 1;
   811  008F  1586               	bsf	6,3	;volatile
   812                           
   813                           ;ADC.c: 62:                 ANSELHbits.ANS9 = 1;
   814  0090  1683               	bsf	3,5	;RP0=1, select bank3
   815  0091  1703               	bsf	3,6	;RP1=1, select bank3
   816  0092  1489               	bsf	9,1	;volatile
   817  0093                     l891:
   818                           
   819                           ;ADC.c: 63:                 ADCON0bits.CHS = 0b1001;
   820  0093  1283               	bcf	3,5	;RP0=0, select bank0
   821  0094  1303               	bcf	3,6	;RP1=0, select bank0
   822  0095  081F               	movf	31,w	;volatile
   823  0096  39C3               	andlw	-61
   824  0097  3824               	iorlw	36
   825  0098  009F               	movwf	31	;volatile
   826                           
   827                           ;ADC.c: 64:                 break;
   828  0099  2902               	goto	l115
   829  009A                     l91:	
   830                           ;ADC.c: 65:             case 10:
   831                           
   832                           
   833                           ;ADC.c: 66:                 TRISBbits.TRISB1 = 1;
   834  009A  1486               	bsf	6,1	;volatile
   835                           
   836                           ;ADC.c: 67:                 ANSELHbits.ANS10 = 1;
   837  009B  1683               	bsf	3,5	;RP0=1, select bank3
   838  009C  1703               	bsf	3,6	;RP1=1, select bank3
   839  009D  1509               	bsf	9,2	;volatile
   840  009E                     l893:
   841                           
   842                           ;ADC.c: 68:                 ADCON0bits.CHS = 0b1010;
   843  009E  1283               	bcf	3,5	;RP0=0, select bank0
   844  009F  1303               	bcf	3,6	;RP1=0, select bank0
   845  00A0  081F               	movf	31,w	;volatile
   846  00A1  39C3               	andlw	-61
   847  00A2  3828               	iorlw	40
   848  00A3  009F               	movwf	31	;volatile
   849                           
   850                           ;ADC.c: 69:                 break;
   851  00A4  2902               	goto	l115
   852  00A5                     l92:	
   853                           ;ADC.c: 70:             case 11:
   854                           
   855                           
   856                           ;ADC.c: 71:                 TRISBbits.TRISB4 = 1;
   857  00A5  1606               	bsf	6,4	;volatile
   858                           
   859                           ;ADC.c: 72:                 ANSELHbits.ANS11 = 1;
   860  00A6  1683               	bsf	3,5	;RP0=1, select bank3
   861  00A7  1703               	bsf	3,6	;RP1=1, select bank3
   862  00A8  1589               	bsf	9,3	;volatile
   863  00A9                     l895:
   864                           
   865                           ;ADC.c: 73:                 ADCON0bits.CHS = 0b1011;
   866  00A9  1283               	bcf	3,5	;RP0=0, select bank0
   867  00AA  1303               	bcf	3,6	;RP1=0, select bank0
   868  00AB  081F               	movf	31,w	;volatile
   869  00AC  39C3               	andlw	-61
   870  00AD  382C               	iorlw	44
   871  00AE  009F               	movwf	31	;volatile
   872                           
   873                           ;ADC.c: 74:                 break;
   874  00AF  2902               	goto	l115
   875  00B0                     l93:	
   876                           ;ADC.c: 75:             case 12:
   877                           
   878                           
   879                           ;ADC.c: 76:                 TRISBbits.TRISB0 = 1;
   880  00B0  1406               	bsf	6,0	;volatile
   881                           
   882                           ;ADC.c: 77:                 ANSELHbits.ANS12 = 1;
   883  00B1  1683               	bsf	3,5	;RP0=1, select bank3
   884  00B2  1703               	bsf	3,6	;RP1=1, select bank3
   885  00B3  1609               	bsf	9,4	;volatile
   886  00B4                     l897:
   887                           
   888                           ;ADC.c: 78:                 ADCON0bits.CHS = 0b1100;
   889  00B4  1283               	bcf	3,5	;RP0=0, select bank0
   890  00B5  1303               	bcf	3,6	;RP1=0, select bank0
   891  00B6  081F               	movf	31,w	;volatile
   892  00B7  39C3               	andlw	-61
   893  00B8  3830               	iorlw	48
   894  00B9  009F               	movwf	31	;volatile
   895                           
   896                           ;ADC.c: 79:                 break;
   897  00BA  2902               	goto	l115
   898  00BB                     l94:	
   899                           ;ADC.c: 80:             case 13:
   900                           
   901                           
   902                           ;ADC.c: 81:                 TRISBbits.TRISB5 = 1;
   903  00BB  1686               	bsf	6,5	;volatile
   904                           
   905                           ;ADC.c: 82:                 ANSELHbits.ANS13 = 1;
   906  00BC  1683               	bsf	3,5	;RP0=1, select bank3
   907  00BD  1703               	bsf	3,6	;RP1=1, select bank3
   908  00BE  1689               	bsf	9,5	;volatile
   909  00BF                     l899:
   910                           
   911                           ;ADC.c: 83:                 ADCON0bits.CHS = 0b1101;
   912  00BF  1283               	bcf	3,5	;RP0=0, select bank0
   913  00C0  1303               	bcf	3,6	;RP1=0, select bank0
   914  00C1  081F               	movf	31,w	;volatile
   915  00C2  39C3               	andlw	-61
   916  00C3  3834               	iorlw	52
   917  00C4  009F               	movwf	31	;volatile
   918                           
   919                           ;ADC.c: 84:                 break;
   920  00C5  2902               	goto	l115
   921  00C6                     l903:
   922  00C6  0876               	movf	ADC@ANA,w
   923  00C7  00F4               	movwf	??_ADC
   924  00C8  01F5               	clrf	??_ADC+1
   925                           
   926                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   927                           ; Switch size 1, requested type "simple"
   928                           ; Number of cases is 1, Range of values is 0 to 0
   929                           ; switch strategies available:
   930                           ; Name         Instructions Cycles
   931                           ; simple_byte            4     3 (average)
   932                           ; direct_byte           11     8 (fixed)
   933                           ; jumptable            260     6 (fixed)
   934                           ;	Chosen strategy is simple_byte
   935  00C9  0875               	movf	??_ADC+1,w
   936  00CA  3A00               	xorlw	0	; case 0
   937  00CB  1903               	skipnz
   938  00CC  28CE               	goto	l975
   939  00CD  2902               	goto	l115
   940  00CE                     l975:
   941                           
   942                           ; Switch size 1, requested type "simple"
   943                           ; Number of cases is 14, Range of values is 0 to 13
   944                           ; switch strategies available:
   945                           ; Name         Instructions Cycles
   946                           ; simple_byte           43    22 (average)
   947                           ; direct_byte           50     8 (fixed)
   948                           ; jumptable            260     6 (fixed)
   949                           ;	Chosen strategy is simple_byte
   950  00CE  0874               	movf	??_ADC,w
   951  00CF  3A00               	xorlw	0	; case 0
   952  00D0  1903               	skipnz
   953  00D1  282D               	goto	l80
   954  00D2  3A01               	xorlw	1	; case 1
   955  00D3  1903               	skipnz
   956  00D4  2836               	goto	l82
   957  00D5  3A03               	xorlw	3	; case 2
   958  00D6  1903               	skipnz
   959  00D7  2841               	goto	l83
   960  00D8  3A01               	xorlw	1	; case 3
   961  00D9  1903               	skipnz
   962  00DA  284C               	goto	l84
   963  00DB  3A07               	xorlw	7	; case 4
   964  00DC  1903               	skipnz
   965  00DD  2857               	goto	l85
   966  00DE  3A01               	xorlw	1	; case 5
   967  00DF  1903               	skipnz
   968  00E0  2862               	goto	l86
   969  00E1  3A03               	xorlw	3	; case 6
   970  00E2  1903               	skipnz
   971  00E3  286D               	goto	l87
   972  00E4  3A01               	xorlw	1	; case 7
   973  00E5  1903               	skipnz
   974  00E6  2877               	goto	l885
   975  00E7  3A0F               	xorlw	15	; case 8
   976  00E8  1903               	skipnz
   977  00E9  2884               	goto	l89
   978  00EA  3A01               	xorlw	1	; case 9
   979  00EB  1903               	skipnz
   980  00EC  288F               	goto	l90
   981  00ED  3A03               	xorlw	3	; case 10
   982  00EE  1903               	skipnz
   983  00EF  289A               	goto	l91
   984  00F0  3A01               	xorlw	1	; case 11
   985  00F1  1903               	skipnz
   986  00F2  28A5               	goto	l92
   987  00F3  3A07               	xorlw	7	; case 12
   988  00F4  1903               	skipnz
   989  00F5  28B0               	goto	l93
   990  00F6  3A01               	xorlw	1	; case 13
   991  00F7  1903               	skipnz
   992  00F8  28BB               	goto	l94
   993  00F9  2902               	goto	l115
   994  00FA                     l905:
   995  00FA  0373               	decf	ADC@justificado,w
   996  00FB  1D03               	btfss	3,2
   997  00FC  28FE               	goto	u51
   998  00FD  28FF               	goto	u50
   999  00FE                     u51:
  1000  00FE  2902               	goto	l115
  1001  00FF                     u50:
  1002  00FF                     l907:
  1003                           
  1004                           ;ADC.c: 89:         ADCON1bits.ADFM = 1;
  1005  00FF  1683               	bsf	3,5	;RP0=1, select bank1
  1006  0100  1303               	bcf	3,6	;RP1=0, select bank1
  1007  0101  179F               	bsf	31,7	;volatile
  1008  0102                     l115:	
  1009                           ;ADC.c: 90:         switch (ANA) {
  1010                           
  1011  0102  0008               	return
  1012  0103                     __end_of_ADC:
  1013                           
  1014                           	psect	text3
  1015  012A                     __ptext3:	
  1016 ;; *************** function _isr *****************
  1017 ;; Defined at:
  1018 ;;		line 33 in file "PICADC.c"
  1019 ;; Parameters:    Size  Location     Type
  1020 ;;		None
  1021 ;; Auto vars:     Size  Location     Type
  1022 ;;		None
  1023 ;; Return value:  Size  Location     Type
  1024 ;;                  1    wreg      void 
  1025 ;; Registers used:
  1026 ;;		wreg
  1027 ;; Tracked objects:
  1028 ;;		On entry : 0/0
  1029 ;;		On exit  : 0/0
  1030 ;;		Unchanged: 0/0
  1031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1032 ;;      Params:         0       0       0       0       0
  1033 ;;      Locals:         0       0       0       0       0
  1034 ;;      Temps:          3       0       0       0       0
  1035 ;;      Totals:         3       0       0       0       0
  1036 ;;Total ram usage:        3 bytes
  1037 ;; Hardware stack levels used:    1
  1038 ;; This function calls:
  1039 ;;		Nothing
  1040 ;; This function is called by:
  1041 ;;		Interrupt level 1
  1042 ;; This function uses a non-reentrant model
  1043 ;;
  1044                           
  1045                           
  1046                           ;psect for function _isr
  1047  012A                     _isr:
  1048  012A                     i1l823:
  1049                           
  1050                           ;PICADC.c: 35:     TRISD = 0;
  1051  012A  1283               	bcf	3,5	;RP0=0, select bank0
  1052  012B  1303               	bcf	3,6	;RP1=0, select bank0
  1053  012C  1F0C               	btfss	12,6	;volatile
  1054  012D  292F               	goto	u3_21
  1055  012E  2930               	goto	u3_20
  1056  012F                     u3_21:
  1057  012F  293D               	goto	i1l46
  1058  0130                     u3_20:
  1059  0130                     i1l825:
  1060                           
  1061                           ;PICADC.c: 36:     PORTD = 0;
  1062  0130  081E               	movf	30,w	;volatile
  1063  0131  0088               	movwf	8	;volatile
  1064  0132                     i1l827:
  1065                           
  1066                           ;PICADC.c: 37:     TRISE = 0;
  1067  0132  130C               	bcf	12,6	;volatile
  1068                           
  1069                           ;PICADC.c: 38:     PORTE = 0;
  1070  0133  309F               	movlw	159
  1071  0134  00F0               	movwf	??_isr
  1072  0135                     u6_27:
  1073  0135  2936               	nop2
  1074  0136  0BF0               	decfsz	??_isr,f
  1075  0137  2935               	goto	u6_27
  1076  0138  2939               	nop2
  1077  0139  293A               	nop2
  1078  013A                     i1l829:
  1079                           
  1080                           ;PICADC.c: 39:     INTCONbits.GIE = 1;
  1081  013A  1283               	bcf	3,5	;RP0=0, select bank0
  1082  013B  1303               	bcf	3,6	;RP1=0, select bank0
  1083  013C  149F               	bsf	31,1	;volatile
  1084  013D                     i1l46:
  1085  013D  0872               	movf	??_isr+2,w
  1086  013E  008A               	movwf	10
  1087  013F  0E71               	swapf	??_isr+1,w
  1088  0140  0083               	movwf	3
  1089  0141  0EFE               	swapf	btemp,f
  1090  0142  0E7E               	swapf	btemp,w
  1091  0143  0009               	retfie
  1092  0144                     __end_of_isr:
  1093  007E                     btemp	set	126	;btemp
  1094  007E                     wtemp0	set	126
  1095                           
  1096                           	psect	intentry
  1097  0004                     __pintentry:	
  1098                           ;incstack = 0
  1099                           ; Regs used in _isr: [wreg]
  1100                           
  1101  0004                     interrupt_function:
  1102  007E                     saved_w	set	btemp
  1103  0004  00FE               	movwf	btemp
  1104  0005  0E03               	swapf	3,w
  1105  0006  00F1               	movwf	??_isr+1
  1106  0007  080A               	movf	10,w
  1107  0008  00F2               	movwf	??_isr+2
  1108  0009  120A  118A  292A   	ljmp	_isr
  1109                           
  1110                           	psect	config
  1111                           
  1112                           ;Config register CONFIG1 @ 0x2007
  1113                           ;	Oscillator Selection bits
  1114                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  1115                           ;	Watchdog Timer Enable bit
  1116                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1117                           ;	Power-up Timer Enable bit
  1118                           ;	PWRTE = OFF, PWRT disabled
  1119                           ;	RE3/MCLR pin function select bit
  1120                           ;	MCLRE = 0x1, unprogrammed default
  1121                           ;	Code Protection bit
  1122                           ;	CP = OFF, Program memory code protection is disabled
  1123                           ;	Data Code Protection bit
  1124                           ;	CPD = OFF, Data memory code protection is disabled
  1125                           ;	Brown Out Reset Selection bits
  1126                           ;	BOREN = ON, BOR enabled
  1127                           ;	Internal External Switchover bit
  1128                           ;	IESO = 0x1, unprogrammed default
  1129                           ;	Fail-Safe Clock Monitor Enabled bit
  1130                           ;	FCMEN = 0x1, unprogrammed default
  1131                           ;	Low Voltage Programming Enable bit
  1132                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1133                           ;	In-Circuit Debugger Mode bit
  1134                           ;	DEBUG = 0x1, unprogrammed default
  1135  2007                     	org	8199
  1136  2007  2FF2               	dw	12274
  1137                           
  1138                           ;Config register CONFIG2 @ 0x2008
  1139                           ;	Brown-out Reset Selection bit
  1140                           ;	BOR4V = 0x1, unprogrammed default
  1141                           ;	Flash Program Memory Self Write Enable bits
  1142                           ;	WRT = OFF, Write protection off
  1143  2008                     	org	8200
  1144  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     164
                                _ADC
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC                                                  4     3      1     164
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       8      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 22 17:01:47 2021

                     l51 0153                       l52 0153                       l80 002D  
                     l57 0129                       l90 008F                       l82 0036  
                     l91 009A                       l83 0041                       l92 00A5  
                     l84 004C                       l93 00B0                       l85 0057  
                     l94 00BB                       l86 0062                       l87 006D  
                     l89 0084                       u40 0029                       u41 0028  
                     u50 00FF                       u51 00FE                      l115 0102  
                    _ADC 0014                      l711 0111                      l721 0120  
                    l713 0114                      l723 0123                      l715 0117  
                    l707 0103                      l725 0126                      l717 011A  
                    l709 010D                      l903 00C6                      l727 0127  
                    l719 011D                      l905 00FA                      l729 0128  
                    l907 00FF                      l861 001C                      l871 0031  
                    l863 001F                      l951 0149                      l881 0066  
                    l873 003A                      l865 0020                      l857 0015  
                    l953 0150                      l891 0093                      l883 0071  
                    l875 0045                      l867 0021                      l859 0018  
                    l893 009E                      l885 0077                      l877 0050  
                    l869 0029                      l949 0144                      l975 00CE  
                    l895 00A9                      l887 007A                      l879 005B  
                    l897 00B4                      l889 0088                      l899 00BF  
                    _isr 012A                     ?_ADC 0073                     ?_isr 0070  
                   i1l46 013D                     u3_20 0130                     u3_21 012F  
                   u6_27 0135                     _main 0144                     btemp 007E  
                   start 000C                    ??_ADC 0074                    ??_isr 0070  
                  ?_main 0070                    _ANSEL 0188                    i1l823 012A  
                  i1l825 0130                    i1l827 0132                    i1l829 013A  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    _setup 0103                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 0157                   ADC@ANA 0076                   ??_main 0077  
                 _ADRESH 001E                   ?_setup 0070                   _ANSELH 0189  
                 saved_w 007E  __end_of__initialization 0010           ADC@justificado 0073  
         __pcstackCOMMON 0070            __end_of_setup 012A                  ??_setup 0073  
             __pmaintext 0144               __pintentry 0004                _ANSELbits 0188  
                __ptext1 0103                  __ptext2 0014                  __ptext3 012A  
           __size_of_ADC 00EF             __size_of_isr 001A     end_of_initialization 0010  
              _TRISAbits 0085                _TRISBbits 0086                _TRISEbits 0089  
    start_initialization 000F              __end_of_ADC 0103              __end_of_isr 0144  
            __pbssCOMMON 0077                ___latbits 0002           __size_of_setup 0027  
      interrupt_function 0004                 _PIE1bits 008C                 _PIR1bits 000C  
             _ADCON0bits 001F               _ADCON1bits 009F               _ANSELHbits 0189  
               _contador 0077            __size_of_main 0013               _INTCONbits 000B  
               intlevel1 0000  
