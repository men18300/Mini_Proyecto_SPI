

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 22:36:20 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0000                     	;# 
   288  0001                     	;# 
   289  0002                     	;# 
   290  0003                     	;# 
   291  0004                     	;# 
   292  0005                     	;# 
   293  0006                     	;# 
   294  0007                     	;# 
   295  0008                     	;# 
   296  0009                     	;# 
   297  000A                     	;# 
   298  000B                     	;# 
   299  000C                     	;# 
   300  000D                     	;# 
   301  000E                     	;# 
   302  000E                     	;# 
   303  000F                     	;# 
   304  0010                     	;# 
   305  0011                     	;# 
   306  0012                     	;# 
   307  0013                     	;# 
   308  0014                     	;# 
   309  0015                     	;# 
   310  0015                     	;# 
   311  0016                     	;# 
   312  0017                     	;# 
   313  0018                     	;# 
   314  0019                     	;# 
   315  001A                     	;# 
   316  001B                     	;# 
   317  001B                     	;# 
   318  001C                     	;# 
   319  001D                     	;# 
   320  001E                     	;# 
   321  001F                     	;# 
   322  0081                     	;# 
   323  0085                     	;# 
   324  0086                     	;# 
   325  0087                     	;# 
   326  0088                     	;# 
   327  0089                     	;# 
   328  008C                     	;# 
   329  008D                     	;# 
   330  008E                     	;# 
   331  008F                     	;# 
   332  0090                     	;# 
   333  0091                     	;# 
   334  0092                     	;# 
   335  0093                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0094                     	;# 
   339  0095                     	;# 
   340  0096                     	;# 
   341  0097                     	;# 
   342  0098                     	;# 
   343  0099                     	;# 
   344  009A                     	;# 
   345  009B                     	;# 
   346  009C                     	;# 
   347  009D                     	;# 
   348  009E                     	;# 
   349  009F                     	;# 
   350  0105                     	;# 
   351  0107                     	;# 
   352  0108                     	;# 
   353  0109                     	;# 
   354  010C                     	;# 
   355  010C                     	;# 
   356  010D                     	;# 
   357  010E                     	;# 
   358  010F                     	;# 
   359  0185                     	;# 
   360  0187                     	;# 
   361  0188                     	;# 
   362  0189                     	;# 
   363  018C                     	;# 
   364  018D                     	;# 
   365  0013                     _SSPBUF	set	19
   366  0014                     _SSPCON	set	20
   367  000B                     _INTCONbits	set	11
   368  0007                     _PORTC	set	7
   369  0006                     _PORTB	set	6
   370  0005                     _PORTA	set	5
   371  0009                     _PORTE	set	9
   372  001F                     _ADCON0bits	set	31
   373  001E                     _ADRESH	set	30
   374  0008                     _PORTD	set	8
   375  000C                     _PIR1bits	set	12
   376  0063                     _SSPIF	set	99
   377  0094                     _SSPSTATbits	set	148
   378  0094                     _SSPSTAT	set	148
   379  0086                     _TRISBbits	set	134
   380  0089                     _TRISEbits	set	137
   381  0085                     _TRISAbits	set	133
   382  009F                     _ADCON1bits	set	159
   383  008C                     _PIE1bits	set	140
   384  0089                     _TRISE	set	137
   385  0088                     _TRISD	set	136
   386  0087                     _TRISC	set	135
   387  0086                     _TRISB	set	134
   388  0085                     _TRISA	set	133
   389  043B                     _TRISC3	set	1083
   390  043D                     _TRISC5	set	1085
   391  0189                     _ANSELHbits	set	393
   392  0188                     _ANSELbits	set	392
   393  0189                     _ANSELH	set	393
   394  0188                     _ANSEL	set	392
   395                           
   396                           	psect	cinit
   397  000F                     start_initialization:	
   398                           ; #config settings
   399                           
   400  000F                     __initialization:
   401                           
   402                           ; Clear objects allocated to COMMON
   403  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   404  0010                     end_of_initialization:	
   405                           ;End of C runtime variable initialization code
   406                           
   407  0010                     __end_of__initialization:
   408  0010  0183               	clrf	3
   409  0011  120A  118A  2986   	ljmp	_main	;jump to C main() function
   410                           
   411                           	psect	bssCOMMON
   412  0078                     __pbssCOMMON:
   413  0078                     _contador:
   414  0078                     	ds	1
   415                           
   416                           	psect	cstackCOMMON
   417  0070                     __pcstackCOMMON:
   418  0070                     ?_spiRead:
   419  0070                     ??_spiRead:	
   420                           ; 1 bytes @ 0x0
   421                           
   422  0070                     ?_spiWrite:	
   423                           ; 1 bytes @ 0x0
   424                           
   425  0070                     ??_spiWrite:	
   426                           ; 1 bytes @ 0x0
   427                           
   428  0070                     ?_setup:	
   429                           ; 1 bytes @ 0x0
   430                           
   431  0070                     ?_isr:	
   432                           ; 1 bytes @ 0x0
   433                           
   434  0070                     ?_spiReceiveWait:	
   435                           ; 1 bytes @ 0x0
   436                           
   437  0070                     ??_spiReceiveWait:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  0070                     ?_main:	
   441                           ; 1 bytes @ 0x0
   442                           
   443  0070                     spiWrite@dat:	
   444                           ; 2 bytes @ 0x0
   445                           
   446                           
   447                           ; 1 bytes @ 0x0
   448  0070                     	ds	1
   449  0071                     ??_isr:
   450                           
   451                           ; 1 bytes @ 0x1
   452  0071                     	ds	3
   453  0074                     ?_ADC:
   454  0074                     ?_spiInit:	
   455                           ; 1 bytes @ 0x4
   456                           
   457  0074                     ADC@justificado:	
   458                           ; 1 bytes @ 0x4
   459                           
   460  0074                     spiInit@sDataSample:	
   461                           ; 1 bytes @ 0x4
   462                           
   463                           
   464                           ; 1 bytes @ 0x4
   465  0074                     	ds	1
   466  0075                     ??_ADC:
   467  0075                     spiInit@sClockIdle:	
   468                           ; 1 bytes @ 0x5
   469                           
   470                           
   471                           ; 1 bytes @ 0x5
   472  0075                     	ds	1
   473  0076                     spiInit@sTransmitEdge:
   474                           
   475                           ; 1 bytes @ 0x6
   476  0076                     	ds	1
   477  0077                     ??_spiInit:
   478  0077                     ADC@ANA:	
   479                           ; 1 bytes @ 0x7
   480                           
   481  0077                     spiInit@sType:	
   482                           ; 1 bytes @ 0x7
   483                           
   484                           
   485                           ; 1 bytes @ 0x7
   486  0077                     	ds	1
   487  0078                     ??_setup:
   488  0078                     ??_main:	
   489                           ; 1 bytes @ 0x8
   490                           
   491                           
   492                           	psect	maintext
   493  0186                     __pmaintext:	
   494                           ; 1 bytes @ 0x8
   495 ;;
   496 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   497 ;;
   498 ;; *************** function _main *****************
   499 ;; Defined at:
   500 ;;		line 58 in file "PICADC.c"
   501 ;; Parameters:    Size  Location     Type
   502 ;;		None
   503 ;; Auto vars:     Size  Location     Type
   504 ;;		None
   505 ;; Return value:  Size  Location     Type
   506 ;;                  2   62[None  ] int 
   507 ;; Registers used:
   508 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   509 ;; Tracked objects:
   510 ;;		On entry : B00/0
   511 ;;		On exit  : 0/0
   512 ;;		Unchanged: 0/0
   513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   514 ;;      Params:         0       0       0       0       0
   515 ;;      Locals:         0       0       0       0       0
   516 ;;      Temps:          0       0       0       0       0
   517 ;;      Totals:         0       0       0       0       0
   518 ;;Total ram usage:        0 bytes
   519 ;; Hardware stack levels required when called:    5
   520 ;; This function calls:
   521 ;;		_ADC
   522 ;;		_setup
   523 ;; This function is called by:
   524 ;;		Startup code after reset
   525 ;; This function uses a non-reentrant model
   526 ;;
   527                           
   528                           
   529                           ;psect for function _main
   530  0186                     _main:
   531  0186                     l1059:	
   532                           ;incstack = 0
   533                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   534                           
   535                           
   536                           ;PICADC.c: 59: 
   537  0186  120A  118A  2103  120A  118A  	fcall	_setup
   538  018B                     l1061:
   539                           
   540                           ;PICADC.c: 60: 
   541  018B  01F4               	clrf	ADC@justificado
   542  018C  3000               	movlw	0
   543  018D  120A  118A  2014  120A  118A  	fcall	_ADC
   544  0192                     l1063:
   545                           
   546                           ;PICADC.c: 61: 
   547  0192  1283               	bcf	3,5	;RP0=0, select bank0
   548  0193  1303               	bcf	3,6	;RP1=0, select bank0
   549  0194  149F               	bsf	31,1	;volatile
   550  0195                     l63:	
   551                           ;PICADC.c: 62:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, 
      +                          SPI_IDLE_2_ACTIVE);
   552                           
   553  0195                     l64:
   554  0195  2995               	goto	l63
   555  0196  120A  118A  280C   	ljmp	start
   556  0199                     __end_of_main:
   557                           
   558                           	psect	text1
   559  0103                     __ptext1:	
   560 ;; *************** function _setup *****************
   561 ;; Defined at:
   562 ;;		line 68 in file "PICADC.c"
   563 ;; Parameters:    Size  Location     Type
   564 ;;		None
   565 ;; Auto vars:     Size  Location     Type
   566 ;;		None
   567 ;; Return value:  Size  Location     Type
   568 ;;                  1    wreg      void 
   569 ;; Registers used:
   570 ;;		wreg, status,2, status,0, pclath, cstack
   571 ;; Tracked objects:
   572 ;;		On entry : 0/0
   573 ;;		On exit  : 0/0
   574 ;;		Unchanged: 0/0
   575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   576 ;;      Params:         0       0       0       0       0
   577 ;;      Locals:         0       0       0       0       0
   578 ;;      Temps:          0       0       0       0       0
   579 ;;      Totals:         0       0       0       0       0
   580 ;;Total ram usage:        0 bytes
   581 ;; Hardware stack levels used:    1
   582 ;; Hardware stack levels required when called:    4
   583 ;; This function calls:
   584 ;;		_spiInit
   585 ;; This function is called by:
   586 ;;		_main
   587 ;; This function uses a non-reentrant model
   588 ;;
   589                           
   590                           
   591                           ;psect for function _setup
   592  0103                     _setup:
   593  0103                     l943:	
   594                           ;incstack = 0
   595                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   596                           
   597  0103  1683               	bsf	3,5	;RP0=1, select bank3
   598  0104  1703               	bsf	3,6	;RP1=1, select bank3
   599  0105  0188               	clrf	8	;volatile
   600  0106  0189               	clrf	9	;volatile
   601  0107  1683               	bsf	3,5	;RP0=1, select bank1
   602  0108  1303               	bcf	3,6	;RP1=0, select bank1
   603  0109  0185               	clrf	5	;volatile
   604  010A                     l945:
   605  010A  3020               	movlw	32
   606  010B  0085               	movwf	5	;volatile
   607  010C                     l947:
   608  010C  1283               	bcf	3,5	;RP0=0, select bank0
   609  010D  1303               	bcf	3,6	;RP1=0, select bank0
   610  010E  0185               	clrf	5	;volatile
   611  010F  3003               	movlw	3
   612  0110  1683               	bsf	3,5	;RP0=1, select bank1
   613  0111  1303               	bcf	3,6	;RP1=0, select bank1
   614  0112  0086               	movwf	6	;volatile
   615  0113                     l949:
   616  0113  1283               	bcf	3,5	;RP0=0, select bank0
   617  0114  1303               	bcf	3,6	;RP1=0, select bank0
   618  0115  0186               	clrf	6	;volatile
   619  0116                     l951:
   620  0116  300C               	movlw	12
   621  0117  1683               	bsf	3,5	;RP0=1, select bank1
   622  0118  1303               	bcf	3,6	;RP1=0, select bank1
   623  0119  0087               	movwf	7	;volatile
   624  011A  1283               	bcf	3,5	;RP0=0, select bank0
   625  011B  1303               	bcf	3,6	;RP1=0, select bank0
   626  011C  0187               	clrf	7	;volatile
   627  011D  1683               	bsf	3,5	;RP0=1, select bank1
   628  011E  1303               	bcf	3,6	;RP1=0, select bank1
   629  011F  0188               	clrf	8	;volatile
   630  0120  1283               	bcf	3,5	;RP0=0, select bank0
   631  0121  1303               	bcf	3,6	;RP1=0, select bank0
   632  0122  0188               	clrf	8	;volatile
   633  0123  1683               	bsf	3,5	;RP0=1, select bank1
   634  0124  1303               	bcf	3,6	;RP1=0, select bank1
   635  0125  0189               	clrf	9	;volatile
   636  0126  1283               	bcf	3,5	;RP0=0, select bank0
   637  0127  1303               	bcf	3,6	;RP1=0, select bank0
   638  0128  0189               	clrf	9	;volatile
   639  0129                     l953:
   640  0129  178B               	bsf	11,7	;volatile
   641  012A                     l955:
   642  012A  170B               	bsf	11,6	;volatile
   643  012B  01F8               	clrf	_contador
   644  012C                     l957:
   645  012C  178B               	bsf	11,7	;volatile
   646  012D                     l959:
   647  012D  170B               	bsf	11,6	;volatile
   648  012E                     l961:
   649  012E  118C               	bcf	12,3	;volatile
   650  012F                     l963:
   651  012F  1683               	bsf	3,5	;RP0=1, select bank1
   652  0130  1303               	bcf	3,6	;RP1=0, select bank1
   653  0131  158C               	bsf	12,3	;volatile
   654  0132                     l965:
   655  0132  01F4               	clrf	spiInit@sDataSample
   656  0133  01F5               	clrf	spiInit@sClockIdle
   657  0134  01F6               	clrf	spiInit@sTransmitEdge
   658  0135  3024               	movlw	36
   659  0136  120A  118A  2170  120A  118A  	fcall	_spiInit
   660  013B                     l69:
   661  013B  0008               	return
   662  013C                     __end_of_setup:
   663                           
   664                           	psect	text2
   665  0170                     __ptext2:	
   666 ;; *************** function _spiInit *****************
   667 ;; Defined at:
   668 ;;		line 12 in file "SPI.c"
   669 ;; Parameters:    Size  Location     Type
   670 ;;  sType           1    wreg     enum E1264
   671 ;;  sDataSample     1    4[COMMON] enum E1272
   672 ;;  sClockIdle      1    5[COMMON] enum E1276
   673 ;;  sTransmitEdg    1    6[COMMON] enum E1280
   674 ;; Auto vars:     Size  Location     Type
   675 ;;  sType           1    7[COMMON] enum E1264
   676 ;; Return value:  Size  Location     Type
   677 ;;                  1    wreg      void 
   678 ;; Registers used:
   679 ;;		wreg, status,2, status,0
   680 ;; Tracked objects:
   681 ;;		On entry : 0/0
   682 ;;		On exit  : 0/0
   683 ;;		Unchanged: 0/0
   684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   685 ;;      Params:         3       0       0       0       0
   686 ;;      Locals:         1       0       0       0       0
   687 ;;      Temps:          0       0       0       0       0
   688 ;;      Totals:         4       0       0       0       0
   689 ;;Total ram usage:        4 bytes
   690 ;; Hardware stack levels used:    1
   691 ;; Hardware stack levels required when called:    3
   692 ;; This function calls:
   693 ;;		Nothing
   694 ;; This function is called by:
   695 ;;		_setup
   696 ;; This function uses a non-reentrant model
   697 ;;
   698                           
   699                           
   700                           ;psect for function _spiInit
   701  0170                     _spiInit:
   702                           
   703                           ;incstack = 0
   704                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   705                           ;spiInit@sType stored from wreg
   706  0170  00F7               	movwf	spiInit@sType
   707  0171                     l933:
   708                           
   709                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   710  0171  1683               	bsf	3,5	;RP0=1, select bank1
   711  0172  1303               	bcf	3,6	;RP1=0, select bank1
   712  0173  1287               	bcf	7,5	;volatile
   713                           
   714                           ;SPI.c: 15:     if(sType & 0b00000100)
   715  0174  1D77               	btfss	spiInit@sType,2
   716  0175  2977               	goto	u71
   717  0176  2978               	goto	u70
   718  0177                     u71:
   719  0177  297C               	goto	l939
   720  0178                     u70:
   721  0178                     l935:
   722                           
   723                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   724  0178  0876               	movf	spiInit@sTransmitEdge,w
   725  0179  0094               	movwf	20	;volatile
   726  017A                     l937:
   727                           
   728                           ;SPI.c: 18:         TRISC3 = 1;
   729  017A  1587               	bsf	7,3	;volatile
   730                           
   731                           ;SPI.c: 19:     }
   732  017B  2980               	goto	l143
   733  017C                     l939:
   734                           
   735                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   736  017C  0874               	movf	spiInit@sDataSample,w
   737  017D  0476               	iorwf	spiInit@sTransmitEdge,w
   738  017E  0094               	movwf	20	;volatile
   739  017F                     l941:
   740                           
   741                           ;SPI.c: 23:         TRISC3 = 0;
   742  017F  1187               	bcf	7,3	;volatile
   743  0180                     l143:	
   744                           ;SPI.c: 24:     }
   745                           
   746                           
   747                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   748  0180  0877               	movf	spiInit@sType,w
   749  0181  0475               	iorwf	spiInit@sClockIdle,w
   750  0182  1283               	bcf	3,5	;RP0=0, select bank0
   751  0183  1303               	bcf	3,6	;RP1=0, select bank0
   752  0184  0094               	movwf	20	;volatile
   753  0185                     l144:
   754  0185  0008               	return
   755  0186                     __end_of_spiInit:
   756                           
   757                           	psect	text3
   758  0014                     __ptext3:	
   759 ;; *************** function _ADC *****************
   760 ;; Defined at:
   761 ;;		line 3 in file "ADC.c"
   762 ;; Parameters:    Size  Location     Type
   763 ;;  ANA             1    wreg     unsigned char 
   764 ;;  justificado     1    4[COMMON] unsigned char 
   765 ;; Auto vars:     Size  Location     Type
   766 ;;  ANA             1    7[COMMON] unsigned char 
   767 ;; Return value:  Size  Location     Type
   768 ;;                  1    wreg      void 
   769 ;; Registers used:
   770 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   771 ;; Tracked objects:
   772 ;;		On entry : 0/0
   773 ;;		On exit  : 0/0
   774 ;;		Unchanged: 0/0
   775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   776 ;;      Params:         1       0       0       0       0
   777 ;;      Locals:         1       0       0       0       0
   778 ;;      Temps:          2       0       0       0       0
   779 ;;      Totals:         4       0       0       0       0
   780 ;;Total ram usage:        4 bytes
   781 ;; Hardware stack levels used:    1
   782 ;; Hardware stack levels required when called:    3
   783 ;; This function calls:
   784 ;;		Nothing
   785 ;; This function is called by:
   786 ;;		_main
   787 ;; This function uses a non-reentrant model
   788 ;;
   789                           
   790                           
   791                           ;psect for function _ADC
   792  0014                     _ADC:
   793                           
   794                           ;incstack = 0
   795                           ; Regs used in _ADC: [wreg-fsr0h+status,2+status,0]
   796                           ;ADC@ANA stored from wreg
   797  0014  00F7               	movwf	ADC@ANA
   798  0015                     l967:
   799                           
   800                           ;ADC.c: 6:     ADCON0bits.ADON = 1;
   801  0015  1283               	bcf	3,5	;RP0=0, select bank0
   802  0016  1303               	bcf	3,6	;RP1=0, select bank0
   803  0017  141F               	bsf	31,0	;volatile
   804  0018                     l969:
   805                           
   806                           ;ADC.c: 7:     ADCON0bits.ADCS = 0b10;
   807  0018  081F               	movf	31,w	;volatile
   808  0019  393F               	andlw	-193
   809  001A  3880               	iorlw	128
   810  001B  009F               	movwf	31	;volatile
   811  001C                     l971:
   812                           
   813                           ;ADC.c: 8:     ADCON1bits.VCFG1 = 0;
   814  001C  1683               	bsf	3,5	;RP0=1, select bank1
   815  001D  1303               	bcf	3,6	;RP1=0, select bank1
   816  001E  129F               	bcf	31,5	;volatile
   817  001F                     l973:
   818                           
   819                           ;ADC.c: 9:     ADCON1bits.VCFG0 = 0;
   820  001F  121F               	bcf	31,4	;volatile
   821  0020                     l975:
   822                           
   823                           ;ADC.c: 10:     PIE1bits.ADIE = 1;
   824  0020  170C               	bsf	12,6	;volatile
   825  0021                     l977:
   826                           
   827                           ;ADC.c: 11:     PIR1bits.ADIF = 0;
   828  0021  1283               	bcf	3,5	;RP0=0, select bank0
   829  0022  1303               	bcf	3,6	;RP1=0, select bank0
   830  0023  130C               	bcf	12,6	;volatile
   831                           
   832                           ;ADC.c: 13:     if (justificado == 0) {
   833  0024  0874               	movf	ADC@justificado,w
   834  0025  1D03               	btfss	3,2
   835  0026  2828               	goto	u81
   836  0027  2829               	goto	u80
   837  0028                     u81:
   838  0028  28FA               	goto	l1015
   839  0029                     u80:
   840  0029                     l979:
   841                           
   842                           ;ADC.c: 14:         ADCON1bits.ADFM = 0;
   843  0029  1683               	bsf	3,5	;RP0=1, select bank1
   844  002A  1303               	bcf	3,6	;RP1=0, select bank1
   845  002B  139F               	bcf	31,7	;volatile
   846                           
   847                           ;ADC.c: 15:         switch (ANA) {
   848  002C  28C6               	goto	l1013
   849  002D                     l92:	
   850                           ;ADC.c: 16:             case 0:
   851                           
   852                           
   853                           ;ADC.c: 17:                 TRISAbits.TRISA0 = 1;
   854  002D  1405               	bsf	5,0	;volatile
   855                           
   856                           ;ADC.c: 18:                 ANSELbits.ANS0 = 1;
   857  002E  1683               	bsf	3,5	;RP0=1, select bank3
   858  002F  1703               	bsf	3,6	;RP1=1, select bank3
   859  0030  1408               	bsf	8,0	;volatile
   860  0031                     l981:
   861                           
   862                           ;ADC.c: 19:                 ADCON0bits.CHS = 0b0000;
   863  0031  30C3               	movlw	-61
   864  0032  1283               	bcf	3,5	;RP0=0, select bank0
   865  0033  1303               	bcf	3,6	;RP1=0, select bank0
   866  0034  059F               	andwf	31,f	;volatile
   867                           
   868                           ;ADC.c: 20:                 break;
   869  0035  2902               	goto	l127
   870  0036                     l94:	
   871                           ;ADC.c: 21:             case 1:
   872                           
   873                           
   874                           ;ADC.c: 22:                 TRISAbits.TRISA1 = 1;
   875  0036  1485               	bsf	5,1	;volatile
   876                           
   877                           ;ADC.c: 23:                 ANSELbits.ANS1 = 1;
   878  0037  1683               	bsf	3,5	;RP0=1, select bank3
   879  0038  1703               	bsf	3,6	;RP1=1, select bank3
   880  0039  1488               	bsf	8,1	;volatile
   881  003A                     l983:
   882                           
   883                           ;ADC.c: 24:                 ADCON0bits.CHS = 0b0001;
   884  003A  1283               	bcf	3,5	;RP0=0, select bank0
   885  003B  1303               	bcf	3,6	;RP1=0, select bank0
   886  003C  081F               	movf	31,w	;volatile
   887  003D  39C3               	andlw	-61
   888  003E  3804               	iorlw	4
   889  003F  009F               	movwf	31	;volatile
   890                           
   891                           ;ADC.c: 25:                 break;
   892  0040  2902               	goto	l127
   893  0041                     l95:	
   894                           ;ADC.c: 26:             case 2:
   895                           
   896                           
   897                           ;ADC.c: 27:                 TRISAbits.TRISA2 = 1;
   898  0041  1505               	bsf	5,2	;volatile
   899                           
   900                           ;ADC.c: 28:                 ANSELbits.ANS2 = 1;
   901  0042  1683               	bsf	3,5	;RP0=1, select bank3
   902  0043  1703               	bsf	3,6	;RP1=1, select bank3
   903  0044  1508               	bsf	8,2	;volatile
   904  0045                     l985:
   905                           
   906                           ;ADC.c: 29:                 ADCON0bits.CHS = 0b0010;
   907  0045  1283               	bcf	3,5	;RP0=0, select bank0
   908  0046  1303               	bcf	3,6	;RP1=0, select bank0
   909  0047  081F               	movf	31,w	;volatile
   910  0048  39C3               	andlw	-61
   911  0049  3808               	iorlw	8
   912  004A  009F               	movwf	31	;volatile
   913                           
   914                           ;ADC.c: 30:                 break;
   915  004B  2902               	goto	l127
   916  004C                     l96:	
   917                           ;ADC.c: 31:             case 3:
   918                           
   919                           
   920                           ;ADC.c: 32:                 TRISAbits.TRISA3 = 1;
   921  004C  1585               	bsf	5,3	;volatile
   922                           
   923                           ;ADC.c: 33:                 ANSELbits.ANS3 = 1;
   924  004D  1683               	bsf	3,5	;RP0=1, select bank3
   925  004E  1703               	bsf	3,6	;RP1=1, select bank3
   926  004F  1588               	bsf	8,3	;volatile
   927  0050                     l987:
   928                           
   929                           ;ADC.c: 34:                 ADCON0bits.CHS = 0b0011;
   930  0050  1283               	bcf	3,5	;RP0=0, select bank0
   931  0051  1303               	bcf	3,6	;RP1=0, select bank0
   932  0052  081F               	movf	31,w	;volatile
   933  0053  39C3               	andlw	-61
   934  0054  380C               	iorlw	12
   935  0055  009F               	movwf	31	;volatile
   936                           
   937                           ;ADC.c: 35:                 break;
   938  0056  2902               	goto	l127
   939  0057                     l97:	
   940                           ;ADC.c: 36:             case 4:
   941                           
   942                           
   943                           ;ADC.c: 37:                 TRISAbits.TRISA5 = 1;
   944  0057  1685               	bsf	5,5	;volatile
   945                           
   946                           ;ADC.c: 38:                 ANSELbits.ANS4 = 1;
   947  0058  1683               	bsf	3,5	;RP0=1, select bank3
   948  0059  1703               	bsf	3,6	;RP1=1, select bank3
   949  005A  1608               	bsf	8,4	;volatile
   950  005B                     l989:
   951                           
   952                           ;ADC.c: 39:                 ADCON0bits.CHS = 0b0100;
   953  005B  1283               	bcf	3,5	;RP0=0, select bank0
   954  005C  1303               	bcf	3,6	;RP1=0, select bank0
   955  005D  081F               	movf	31,w	;volatile
   956  005E  39C3               	andlw	-61
   957  005F  3810               	iorlw	16
   958  0060  009F               	movwf	31	;volatile
   959                           
   960                           ;ADC.c: 40:                 break;
   961  0061  2902               	goto	l127
   962  0062                     l98:	
   963                           ;ADC.c: 41:             case 5:
   964                           
   965                           
   966                           ;ADC.c: 42:                 TRISEbits.TRISE0 = 1;
   967  0062  1409               	bsf	9,0	;volatile
   968                           
   969                           ;ADC.c: 43:                 ANSELbits.ANS5 = 1;
   970  0063  1683               	bsf	3,5	;RP0=1, select bank3
   971  0064  1703               	bsf	3,6	;RP1=1, select bank3
   972  0065  1688               	bsf	8,5	;volatile
   973  0066                     l991:
   974                           
   975                           ;ADC.c: 44:                 ADCON0bits.CHS = 0b0101;
   976  0066  1283               	bcf	3,5	;RP0=0, select bank0
   977  0067  1303               	bcf	3,6	;RP1=0, select bank0
   978  0068  081F               	movf	31,w	;volatile
   979  0069  39C3               	andlw	-61
   980  006A  3814               	iorlw	20
   981  006B  009F               	movwf	31	;volatile
   982                           
   983                           ;ADC.c: 45:                 break;
   984  006C  2902               	goto	l127
   985  006D                     l99:	
   986                           ;ADC.c: 46:             case 6:
   987                           
   988                           
   989                           ;ADC.c: 47:                 TRISEbits.TRISE1 = 1;
   990  006D  1489               	bsf	9,1	;volatile
   991                           
   992                           ;ADC.c: 48:                 ANSELbits.ANS6 = 1;
   993  006E  1683               	bsf	3,5	;RP0=1, select bank3
   994  006F  1703               	bsf	3,6	;RP1=1, select bank3
   995  0070  1708               	bsf	8,6	;volatile
   996  0071                     l993:
   997                           
   998                           ;ADC.c: 49:                 ADCON0bits.CHS = 0b0110;
   999  0071  1283               	bcf	3,5	;RP0=0, select bank0
  1000  0072  1303               	bcf	3,6	;RP1=0, select bank0
  1001  0073  081F               	movf	31,w	;volatile
  1002  0074  39C3               	andlw	-61
  1003  0075  3818               	iorlw	24
  1004  0076  009F               	movwf	31	;volatile
  1005  0077                     l995:
  1006                           
  1007                           ;ADC.c: 51:                 TRISEbits.TRISE2 = 1;
  1008  0077  1683               	bsf	3,5	;RP0=1, select bank1
  1009  0078  1303               	bcf	3,6	;RP1=0, select bank1
  1010  0079  1509               	bsf	9,2	;volatile
  1011  007A                     l997:
  1012                           
  1013                           ;ADC.c: 52:                 ANSELbits.ANS7 = 1;
  1014  007A  1683               	bsf	3,5	;RP0=1, select bank3
  1015  007B  1703               	bsf	3,6	;RP1=1, select bank3
  1016  007C  1788               	bsf	8,7	;volatile
  1017                           
  1018                           ;ADC.c: 53:                 ADCON0bits.CHS = 0b0111;
  1019  007D  1283               	bcf	3,5	;RP0=0, select bank0
  1020  007E  1303               	bcf	3,6	;RP1=0, select bank0
  1021  007F  081F               	movf	31,w	;volatile
  1022  0080  39C3               	andlw	-61
  1023  0081  381C               	iorlw	28
  1024  0082  009F               	movwf	31	;volatile
  1025                           
  1026                           ;ADC.c: 54:                 break;
  1027  0083  2902               	goto	l127
  1028  0084                     l101:	
  1029                           ;ADC.c: 55:             case 8:
  1030                           
  1031                           
  1032                           ;ADC.c: 56:                 TRISBbits.TRISB2 = 1;
  1033  0084  1506               	bsf	6,2	;volatile
  1034                           
  1035                           ;ADC.c: 57:                 ANSELHbits.ANS8 = 1;
  1036  0085  1683               	bsf	3,5	;RP0=1, select bank3
  1037  0086  1703               	bsf	3,6	;RP1=1, select bank3
  1038  0087  1409               	bsf	9,0	;volatile
  1039  0088                     l999:
  1040                           
  1041                           ;ADC.c: 58:                 ADCON0bits.CHS = 0b1000;
  1042  0088  1283               	bcf	3,5	;RP0=0, select bank0
  1043  0089  1303               	bcf	3,6	;RP1=0, select bank0
  1044  008A  081F               	movf	31,w	;volatile
  1045  008B  39C3               	andlw	-61
  1046  008C  3820               	iorlw	32
  1047  008D  009F               	movwf	31	;volatile
  1048                           
  1049                           ;ADC.c: 59:                 break;
  1050  008E  2902               	goto	l127
  1051  008F                     l102:	
  1052                           ;ADC.c: 60:             case 9:
  1053                           
  1054                           
  1055                           ;ADC.c: 61:                 TRISBbits.TRISB3 = 1;
  1056  008F  1586               	bsf	6,3	;volatile
  1057                           
  1058                           ;ADC.c: 62:                 ANSELHbits.ANS9 = 1;
  1059  0090  1683               	bsf	3,5	;RP0=1, select bank3
  1060  0091  1703               	bsf	3,6	;RP1=1, select bank3
  1061  0092  1489               	bsf	9,1	;volatile
  1062  0093                     l1001:
  1063                           
  1064                           ;ADC.c: 63:                 ADCON0bits.CHS = 0b1001;
  1065  0093  1283               	bcf	3,5	;RP0=0, select bank0
  1066  0094  1303               	bcf	3,6	;RP1=0, select bank0
  1067  0095  081F               	movf	31,w	;volatile
  1068  0096  39C3               	andlw	-61
  1069  0097  3824               	iorlw	36
  1070  0098  009F               	movwf	31	;volatile
  1071                           
  1072                           ;ADC.c: 64:                 break;
  1073  0099  2902               	goto	l127
  1074  009A                     l103:	
  1075                           ;ADC.c: 65:             case 10:
  1076                           
  1077                           
  1078                           ;ADC.c: 66:                 TRISBbits.TRISB1 = 1;
  1079  009A  1486               	bsf	6,1	;volatile
  1080                           
  1081                           ;ADC.c: 67:                 ANSELHbits.ANS10 = 1;
  1082  009B  1683               	bsf	3,5	;RP0=1, select bank3
  1083  009C  1703               	bsf	3,6	;RP1=1, select bank3
  1084  009D  1509               	bsf	9,2	;volatile
  1085  009E                     l1003:
  1086                           
  1087                           ;ADC.c: 68:                 ADCON0bits.CHS = 0b1010;
  1088  009E  1283               	bcf	3,5	;RP0=0, select bank0
  1089  009F  1303               	bcf	3,6	;RP1=0, select bank0
  1090  00A0  081F               	movf	31,w	;volatile
  1091  00A1  39C3               	andlw	-61
  1092  00A2  3828               	iorlw	40
  1093  00A3  009F               	movwf	31	;volatile
  1094                           
  1095                           ;ADC.c: 69:                 break;
  1096  00A4  2902               	goto	l127
  1097  00A5                     l104:	
  1098                           ;ADC.c: 70:             case 11:
  1099                           
  1100                           
  1101                           ;ADC.c: 71:                 TRISBbits.TRISB4 = 1;
  1102  00A5  1606               	bsf	6,4	;volatile
  1103                           
  1104                           ;ADC.c: 72:                 ANSELHbits.ANS11 = 1;
  1105  00A6  1683               	bsf	3,5	;RP0=1, select bank3
  1106  00A7  1703               	bsf	3,6	;RP1=1, select bank3
  1107  00A8  1589               	bsf	9,3	;volatile
  1108  00A9                     l1005:
  1109                           
  1110                           ;ADC.c: 73:                 ADCON0bits.CHS = 0b1011;
  1111  00A9  1283               	bcf	3,5	;RP0=0, select bank0
  1112  00AA  1303               	bcf	3,6	;RP1=0, select bank0
  1113  00AB  081F               	movf	31,w	;volatile
  1114  00AC  39C3               	andlw	-61
  1115  00AD  382C               	iorlw	44
  1116  00AE  009F               	movwf	31	;volatile
  1117                           
  1118                           ;ADC.c: 74:                 break;
  1119  00AF  2902               	goto	l127
  1120  00B0                     l105:	
  1121                           ;ADC.c: 75:             case 12:
  1122                           
  1123                           
  1124                           ;ADC.c: 76:                 TRISBbits.TRISB0 = 1;
  1125  00B0  1406               	bsf	6,0	;volatile
  1126                           
  1127                           ;ADC.c: 77:                 ANSELHbits.ANS12 = 1;
  1128  00B1  1683               	bsf	3,5	;RP0=1, select bank3
  1129  00B2  1703               	bsf	3,6	;RP1=1, select bank3
  1130  00B3  1609               	bsf	9,4	;volatile
  1131  00B4                     l1007:
  1132                           
  1133                           ;ADC.c: 78:                 ADCON0bits.CHS = 0b1100;
  1134  00B4  1283               	bcf	3,5	;RP0=0, select bank0
  1135  00B5  1303               	bcf	3,6	;RP1=0, select bank0
  1136  00B6  081F               	movf	31,w	;volatile
  1137  00B7  39C3               	andlw	-61
  1138  00B8  3830               	iorlw	48
  1139  00B9  009F               	movwf	31	;volatile
  1140                           
  1141                           ;ADC.c: 79:                 break;
  1142  00BA  2902               	goto	l127
  1143  00BB                     l106:	
  1144                           ;ADC.c: 80:             case 13:
  1145                           
  1146                           
  1147                           ;ADC.c: 81:                 TRISBbits.TRISB5 = 1;
  1148  00BB  1686               	bsf	6,5	;volatile
  1149                           
  1150                           ;ADC.c: 82:                 ANSELHbits.ANS13 = 1;
  1151  00BC  1683               	bsf	3,5	;RP0=1, select bank3
  1152  00BD  1703               	bsf	3,6	;RP1=1, select bank3
  1153  00BE  1689               	bsf	9,5	;volatile
  1154  00BF                     l1009:
  1155                           
  1156                           ;ADC.c: 83:                 ADCON0bits.CHS = 0b1101;
  1157  00BF  1283               	bcf	3,5	;RP0=0, select bank0
  1158  00C0  1303               	bcf	3,6	;RP1=0, select bank0
  1159  00C1  081F               	movf	31,w	;volatile
  1160  00C2  39C3               	andlw	-61
  1161  00C3  3834               	iorlw	52
  1162  00C4  009F               	movwf	31	;volatile
  1163                           
  1164                           ;ADC.c: 84:                 break;
  1165  00C5  2902               	goto	l127
  1166  00C6                     l1013:
  1167  00C6  0877               	movf	ADC@ANA,w
  1168  00C7  00F5               	movwf	??_ADC
  1169  00C8  01F6               	clrf	??_ADC+1
  1170                           
  1171                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1172                           ; Switch size 1, requested type "simple"
  1173                           ; Number of cases is 1, Range of values is 0 to 0
  1174                           ; switch strategies available:
  1175                           ; Name         Instructions Cycles
  1176                           ; simple_byte            4     3 (average)
  1177                           ; direct_byte           11     8 (fixed)
  1178                           ; jumptable            260     6 (fixed)
  1179                           ;	Chosen strategy is simple_byte
  1180  00C9  0876               	movf	??_ADC+1,w
  1181  00CA  3A00               	xorlw	0	; case 0
  1182  00CB  1903               	skipnz
  1183  00CC  28CE               	goto	l1085
  1184  00CD  2902               	goto	l127
  1185  00CE                     l1085:
  1186                           
  1187                           ; Switch size 1, requested type "simple"
  1188                           ; Number of cases is 14, Range of values is 0 to 13
  1189                           ; switch strategies available:
  1190                           ; Name         Instructions Cycles
  1191                           ; simple_byte           43    22 (average)
  1192                           ; direct_byte           50     8 (fixed)
  1193                           ; jumptable            260     6 (fixed)
  1194                           ;	Chosen strategy is simple_byte
  1195  00CE  0875               	movf	??_ADC,w
  1196  00CF  3A00               	xorlw	0	; case 0
  1197  00D0  1903               	skipnz
  1198  00D1  282D               	goto	l92
  1199  00D2  3A01               	xorlw	1	; case 1
  1200  00D3  1903               	skipnz
  1201  00D4  2836               	goto	l94
  1202  00D5  3A03               	xorlw	3	; case 2
  1203  00D6  1903               	skipnz
  1204  00D7  2841               	goto	l95
  1205  00D8  3A01               	xorlw	1	; case 3
  1206  00D9  1903               	skipnz
  1207  00DA  284C               	goto	l96
  1208  00DB  3A07               	xorlw	7	; case 4
  1209  00DC  1903               	skipnz
  1210  00DD  2857               	goto	l97
  1211  00DE  3A01               	xorlw	1	; case 5
  1212  00DF  1903               	skipnz
  1213  00E0  2862               	goto	l98
  1214  00E1  3A03               	xorlw	3	; case 6
  1215  00E2  1903               	skipnz
  1216  00E3  286D               	goto	l99
  1217  00E4  3A01               	xorlw	1	; case 7
  1218  00E5  1903               	skipnz
  1219  00E6  2877               	goto	l995
  1220  00E7  3A0F               	xorlw	15	; case 8
  1221  00E8  1903               	skipnz
  1222  00E9  2884               	goto	l101
  1223  00EA  3A01               	xorlw	1	; case 9
  1224  00EB  1903               	skipnz
  1225  00EC  288F               	goto	l102
  1226  00ED  3A03               	xorlw	3	; case 10
  1227  00EE  1903               	skipnz
  1228  00EF  289A               	goto	l103
  1229  00F0  3A01               	xorlw	1	; case 11
  1230  00F1  1903               	skipnz
  1231  00F2  28A5               	goto	l104
  1232  00F3  3A07               	xorlw	7	; case 12
  1233  00F4  1903               	skipnz
  1234  00F5  28B0               	goto	l105
  1235  00F6  3A01               	xorlw	1	; case 13
  1236  00F7  1903               	skipnz
  1237  00F8  28BB               	goto	l106
  1238  00F9  2902               	goto	l127
  1239  00FA                     l1015:
  1240  00FA  0374               	decf	ADC@justificado,w
  1241  00FB  1D03               	btfss	3,2
  1242  00FC  28FE               	goto	u91
  1243  00FD  28FF               	goto	u90
  1244  00FE                     u91:
  1245  00FE  2902               	goto	l127
  1246  00FF                     u90:
  1247  00FF                     l1017:
  1248                           
  1249                           ;ADC.c: 89:         ADCON1bits.ADFM = 1;
  1250  00FF  1683               	bsf	3,5	;RP0=1, select bank1
  1251  0100  1303               	bcf	3,6	;RP1=0, select bank1
  1252  0101  179F               	bsf	31,7	;volatile
  1253  0102                     l127:	
  1254                           ;ADC.c: 90:         switch (ANA) {
  1255                           
  1256  0102  0008               	return
  1257  0103                     __end_of_ADC:
  1258                           
  1259                           	psect	text4
  1260  013C                     __ptext4:	
  1261 ;; *************** function _isr *****************
  1262 ;; Defined at:
  1263 ;;		line 43 in file "PICADC.c"
  1264 ;; Parameters:    Size  Location     Type
  1265 ;;		None
  1266 ;; Auto vars:     Size  Location     Type
  1267 ;;		None
  1268 ;; Return value:  Size  Location     Type
  1269 ;;                  1    wreg      void 
  1270 ;; Registers used:
  1271 ;;		wreg, status,2, status,0, pclath, cstack
  1272 ;; Tracked objects:
  1273 ;;		On entry : 0/0
  1274 ;;		On exit  : 0/0
  1275 ;;		Unchanged: 0/0
  1276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1277 ;;      Params:         0       0       0       0       0
  1278 ;;      Locals:         0       0       0       0       0
  1279 ;;      Temps:          3       0       0       0       0
  1280 ;;      Totals:         3       0       0       0       0
  1281 ;;Total ram usage:        3 bytes
  1282 ;; Hardware stack levels used:    1
  1283 ;; Hardware stack levels required when called:    2
  1284 ;; This function calls:
  1285 ;;		_spiRead
  1286 ;;		_spiWrite
  1287 ;; This function is called by:
  1288 ;;		Interrupt level 1
  1289 ;; This function uses a non-reentrant model
  1290 ;;
  1291                           
  1292                           
  1293                           ;psect for function _isr
  1294  013C                     _isr:
  1295  013C                     i1l889:
  1296                           
  1297                           ;PICADC.c: 45:     PORTC = 0;
  1298  013C  1283               	bcf	3,5	;RP0=0, select bank0
  1299  013D  1303               	bcf	3,6	;RP1=0, select bank0
  1300  013E  1F0C               	btfss	12,6	;volatile
  1301  013F  2941               	goto	u5_21
  1302  0140  2942               	goto	u5_20
  1303  0141                     u5_21:
  1304  0141  2954               	goto	i1l55
  1305  0142                     u5_20:
  1306  0142                     i1l891:
  1307                           
  1308                           ;PICADC.c: 46:     TRISD = 0;
  1309  0142  081E               	movf	30,w	;volatile
  1310  0143  0088               	movwf	8	;volatile
  1311                           
  1312                           ;PICADC.c: 47:     PORTD = 0;
  1313  0144  0808               	movf	8,w	;volatile
  1314  0145  00F1               	movwf	??_isr
  1315  0146  0871               	movf	??_isr,w
  1316  0147  00F8               	movwf	_contador
  1317  0148                     i1l893:
  1318                           
  1319                           ;PICADC.c: 48:     TRISE = 0;
  1320  0148  130C               	bcf	12,6	;volatile
  1321                           
  1322                           ;PICADC.c: 49:     PORTE = 0;
  1323  0149  309F               	movlw	159
  1324  014A  00F1               	movwf	??_isr
  1325  014B                     u10_27:
  1326  014B  294C               	nop2
  1327  014C  0BF1               	decfsz	??_isr,f
  1328  014D  294B               	goto	u10_27
  1329  014E  294F               	nop2
  1330  014F  2950               	nop2
  1331  0150                     i1l895:
  1332                           
  1333                           ;PICADC.c: 50:     INTCONbits.GIE = 1;
  1334  0150  1283               	bcf	3,5	;RP0=0, select bank0
  1335  0151  1303               	bcf	3,6	;RP1=0, select bank0
  1336  0152  149F               	bsf	31,1	;volatile
  1337                           
  1338                           ;PICADC.c: 51:     INTCONbits.PEIE = 1;
  1339  0153  2969               	goto	i1l58
  1340  0154                     i1l55:
  1341  0154  1D8C               	btfss	12,3	;volatile
  1342  0155  2957               	goto	u6_21
  1343  0156  2958               	goto	u6_20
  1344  0157                     u6_21:
  1345  0157  2969               	goto	i1l58
  1346  0158                     u6_20:
  1347  0158                     i1l897:
  1348                           
  1349                           ;PICADC.c: 52:     contador = 0;
  1350  0158  120A  118A  2199  120A  118A  	fcall	_spiRead
  1351  015D  1283               	bcf	3,5	;RP0=0, select bank0
  1352  015E  1303               	bcf	3,6	;RP1=0, select bank0
  1353  015F  0089               	movwf	9	;volatile
  1354                           
  1355                           ;PICADC.c: 53: 
  1356  0160  0808               	movf	8,w	;volatile
  1357  0161  120A  118A  21A9  120A  118A  	fcall	_spiWrite
  1358  0166                     i1l899:
  1359                           
  1360                           ;PICADC.c: 54: 
  1361  0166  1283               	bcf	3,5	;RP0=0, select bank0
  1362  0167  1303               	bcf	3,6	;RP1=0, select bank0
  1363  0168  118C               	bcf	12,3	;volatile
  1364  0169                     i1l58:
  1365  0169  0873               	movf	??_isr+2,w
  1366  016A  008A               	movwf	10
  1367  016B  0E72               	swapf	??_isr+1,w
  1368  016C  0083               	movwf	3
  1369  016D  0EFE               	swapf	btemp,f
  1370  016E  0E7E               	swapf	btemp,w
  1371  016F  0009               	retfie
  1372  0170                     __end_of_isr:
  1373                           
  1374                           	psect	intentry
  1375  0004                     __pintentry:	
  1376                           ;incstack = 0
  1377                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1378                           
  1379  0004                     interrupt_function:
  1380  007E                     saved_w	set	btemp
  1381  0004  00FE               	movwf	btemp
  1382  0005  0E03               	swapf	3,w
  1383  0006  00F2               	movwf	??_isr+1
  1384  0007  080A               	movf	10,w
  1385  0008  00F3               	movwf	??_isr+2
  1386  0009  120A  118A  293C   	ljmp	_isr
  1387                           
  1388                           	psect	text5
  1389  01A9                     __ptext5:	
  1390 ;; *************** function _spiWrite *****************
  1391 ;; Defined at:
  1392 ;;		line 34 in file "SPI.c"
  1393 ;; Parameters:    Size  Location     Type
  1394 ;;  dat             1    wreg     unsigned char 
  1395 ;; Auto vars:     Size  Location     Type
  1396 ;;  dat             1    0[COMMON] unsigned char 
  1397 ;; Return value:  Size  Location     Type
  1398 ;;                  1    wreg      void 
  1399 ;; Registers used:
  1400 ;;		wreg
  1401 ;; Tracked objects:
  1402 ;;		On entry : 0/0
  1403 ;;		On exit  : 0/0
  1404 ;;		Unchanged: 0/0
  1405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1406 ;;      Params:         0       0       0       0       0
  1407 ;;      Locals:         1       0       0       0       0
  1408 ;;      Temps:          0       0       0       0       0
  1409 ;;      Totals:         1       0       0       0       0
  1410 ;;Total ram usage:        1 bytes
  1411 ;; Hardware stack levels used:    1
  1412 ;; This function calls:
  1413 ;;		Nothing
  1414 ;; This function is called by:
  1415 ;;		_isr
  1416 ;; This function uses a non-reentrant model
  1417 ;;
  1418                           
  1419                           
  1420                           ;psect for function _spiWrite
  1421  01A9                     _spiWrite:
  1422                           
  1423                           ;incstack = 0
  1424                           ; Regs used in _spiWrite: [wreg]
  1425                           ;spiWrite@dat stored from wreg
  1426  01A9  00F0               	movwf	spiWrite@dat
  1427  01AA                     i1l771:
  1428                           
  1429                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1430  01AA  0870               	movf	spiWrite@dat,w
  1431  01AB  1283               	bcf	3,5	;RP0=0, select bank0
  1432  01AC  1303               	bcf	3,6	;RP1=0, select bank0
  1433  01AD  0093               	movwf	19	;volatile
  1434  01AE                     i1l153:
  1435  01AE  0008               	return
  1436  01AF                     __end_of_spiWrite:
  1437                           
  1438                           	psect	text6
  1439  0199                     __ptext6:	
  1440 ;; *************** function _spiRead *****************
  1441 ;; Defined at:
  1442 ;;		line 47 in file "SPI.c"
  1443 ;; Parameters:    Size  Location     Type
  1444 ;;		None
  1445 ;; Auto vars:     Size  Location     Type
  1446 ;;		None
  1447 ;; Return value:  Size  Location     Type
  1448 ;;                  1    wreg      unsigned char 
  1449 ;; Registers used:
  1450 ;;		wreg, status,2, status,0, pclath, cstack
  1451 ;; Tracked objects:
  1452 ;;		On entry : 0/0
  1453 ;;		On exit  : 0/0
  1454 ;;		Unchanged: 0/0
  1455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1456 ;;      Params:         0       0       0       0       0
  1457 ;;      Locals:         0       0       0       0       0
  1458 ;;      Temps:          0       0       0       0       0
  1459 ;;      Totals:         0       0       0       0       0
  1460 ;;Total ram usage:        0 bytes
  1461 ;; Hardware stack levels used:    1
  1462 ;; Hardware stack levels required when called:    1
  1463 ;; This function calls:
  1464 ;;		_spiReceiveWait
  1465 ;; This function is called by:
  1466 ;;		_isr
  1467 ;; This function uses a non-reentrant model
  1468 ;;
  1469                           
  1470                           
  1471                           ;psect for function _spiRead
  1472  0199                     _spiRead:
  1473  0199                     i1l765:	
  1474                           ;incstack = 0
  1475                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1476                           
  1477                           
  1478                           ;SPI.c: 49:     spiReceiveWait();
  1479  0199  120A  118A  21A2  120A  118A  	fcall	_spiReceiveWait
  1480  019E                     i1l767:
  1481                           
  1482                           ;SPI.c: 50:     return(SSPBUF);
  1483  019E  1283               	bcf	3,5	;RP0=0, select bank0
  1484  019F  1303               	bcf	3,6	;RP1=0, select bank0
  1485  01A0  0813               	movf	19,w	;volatile
  1486  01A1                     i1l161:
  1487  01A1  0008               	return
  1488  01A2                     __end_of_spiRead:
  1489                           
  1490                           	psect	text7
  1491  01A2                     __ptext7:	
  1492 ;; *************** function _spiReceiveWait *****************
  1493 ;; Defined at:
  1494 ;;		line 29 in file "SPI.c"
  1495 ;; Parameters:    Size  Location     Type
  1496 ;;		None
  1497 ;; Auto vars:     Size  Location     Type
  1498 ;;		None
  1499 ;; Return value:  Size  Location     Type
  1500 ;;                  1    wreg      void 
  1501 ;; Registers used:
  1502 ;;		None
  1503 ;; Tracked objects:
  1504 ;;		On entry : 0/0
  1505 ;;		On exit  : 0/0
  1506 ;;		Unchanged: 0/0
  1507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1508 ;;      Params:         0       0       0       0       0
  1509 ;;      Locals:         0       0       0       0       0
  1510 ;;      Temps:          0       0       0       0       0
  1511 ;;      Totals:         0       0       0       0       0
  1512 ;;Total ram usage:        0 bytes
  1513 ;; Hardware stack levels used:    1
  1514 ;; This function calls:
  1515 ;;		Nothing
  1516 ;; This function is called by:
  1517 ;;		_spiRead
  1518 ;; This function uses a non-reentrant model
  1519 ;;
  1520                           
  1521                           
  1522                           ;psect for function _spiReceiveWait
  1523  01A2                     _spiReceiveWait:
  1524  01A2                     i1l763:	
  1525                           ;incstack = 0
  1526                           ; Regs used in _spiReceiveWait: []
  1527                           
  1528  01A2                     i1l147:	
  1529                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  1530                           
  1531  01A2  1683               	bsf	3,5	;RP0=1, select bank1
  1532  01A3  1303               	bcf	3,6	;RP1=0, select bank1
  1533  01A4  1C14               	btfss	20,0	;volatile
  1534  01A5  29A7               	goto	u2_21
  1535  01A6  29A8               	goto	u2_20
  1536  01A7                     u2_21:
  1537  01A7  29A2               	goto	i1l147
  1538  01A8                     u2_20:
  1539  01A8                     i1l150:
  1540  01A8  0008               	return
  1541  01A9                     __end_of_spiReceiveWait:
  1542  007E                     btemp	set	126	;btemp
  1543  007E                     wtemp0	set	126
  1544                           
  1545                           	psect	config
  1546                           
  1547                           ;Config register CONFIG1 @ 0x2007
  1548                           ;	Oscillator Selection bits
  1549                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  1550                           ;	Watchdog Timer Enable bit
  1551                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1552                           ;	Power-up Timer Enable bit
  1553                           ;	PWRTE = OFF, PWRT disabled
  1554                           ;	RE3/MCLR pin function select bit
  1555                           ;	MCLRE = 0x1, unprogrammed default
  1556                           ;	Code Protection bit
  1557                           ;	CP = OFF, Program memory code protection is disabled
  1558                           ;	Data Code Protection bit
  1559                           ;	CPD = OFF, Data memory code protection is disabled
  1560                           ;	Brown Out Reset Selection bits
  1561                           ;	BOREN = ON, BOR enabled
  1562                           ;	Internal External Switchover bit
  1563                           ;	IESO = 0x1, unprogrammed default
  1564                           ;	Fail-Safe Clock Monitor Enabled bit
  1565                           ;	FCMEN = 0x1, unprogrammed default
  1566                           ;	Low Voltage Programming Enable bit
  1567                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1568                           ;	In-Circuit Debugger Mode bit
  1569                           ;	DEBUG = 0x1, unprogrammed default
  1570  2007                     	org	8199
  1571  2007  2FF2               	dw	12274
  1572                           
  1573                           ;Config register CONFIG2 @ 0x2008
  1574                           ;	Brown-out Reset Selection bit
  1575                           ;	BOR4V = 0x1, unprogrammed default
  1576                           ;	Flash Program Memory Self Write Enable bits
  1577                           ;	WRT = OFF, Write protection off
  1578  2008                     	org	8200
  1579  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC
    _setup->_spiInit

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     524
                                _ADC
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              4 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _ADC                                                  4     3      1     164
                                              4 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0      15
                                              1 COMMON     3     3      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC
   _setup
     _spiInit

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 22:36:20 2021

            _SSPSTATbits 0094                       l63 0195                       l64 0195  
                     l92 002D                       l69 013B                       l94 0036  
                     l95 0041                       l96 004C                       l97 0057  
                     l98 0062                       l99 006D                       u70 0178  
                     u71 0177                       u80 0029                       u81 0028  
                     u90 00FF                       u91 00FE                      l101 0084  
                    l102 008F                      l103 009A                      l104 00A5  
                    l105 00B0                      l106 00BB                      l127 0102  
                    l143 0180                      l144 0185                      _ADC 0014  
                    l941 017F                      l933 0171                      l935 0178  
                    l951 0116                      l943 0103                      l937 017A  
                    l961 012E                      l953 0129                      l945 010A  
                    l971 001C                      l939 017C                      l963 012F  
                    l955 012A                      l947 010C                      l981 0031  
                    l973 001F                      l965 0132                      l957 012C  
                    l949 0113                      l991 0066                      l983 003A  
                    l975 0020                      l967 0015                      l959 012D  
                    l993 0071                      l985 0045                      l977 0021  
                    l969 0018                      l995 0077                      l987 0050  
                    l979 0029                      l997 007A                      l989 005B  
                    l999 0088                      _isr 013C                     ?_ADC 0074  
                   l1001 0093                     l1003 009E                     l1005 00A9  
                   l1013 00C6                     l1007 00B4                     l1015 00FA  
                   l1017 00FF                     l1009 00BF                     l1061 018B  
                   l1063 0192                     l1059 0186                     l1085 00CE  
                   ?_isr 0070                     i1l55 0154                     i1l58 0169  
                   u2_20 01A8                     u2_21 01A7                     u5_20 0142  
                   u5_21 0141                     u6_20 0158                     u6_21 0157  
                   _main 0186                     btemp 007E                     start 000C  
                  ??_ADC 0075                    ??_isr 0071                    ?_main 0070  
                  _ANSEL 0188                    i1l150 01A8                    i1l161 01A1  
                  i1l153 01AE                    i1l147 01A2                    i1l763 01A2  
                  i1l771 01AA                    i1l765 0199                    i1l767 019E  
                  i1l891 0142                    i1l893 0148                    i1l895 0150  
                  i1l897 0158                    i1l889 013C                    i1l899 0166  
                  u10_27 014B                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _SSPIF 0063  
                  _setup 0103                    pclath 000A          __end_of_spiInit 0186  
        __end_of_spiRead 01A2                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0199                   ADC@ANA 0077  
                 ??_main 0078                   _ADRESH 001E                   ?_setup 0070  
                 _ANSELH 0189                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013                   saved_w 007E  
       __end_of_spiWrite 01AF                ??_spiInit 0077                ??_spiRead 0070  
__end_of__initialization 0010           ADC@justificado 0074           __pcstackCOMMON 0070  
          __end_of_setup 013C                  ??_setup 0078               __pmaintext 0186  
             __pintentry 0004  __size_of_spiReceiveWait 0007                  _SSPSTAT 0094  
              ?_spiWrite 0070                _ANSELbits 0188                  __ptext1 0103  
                __ptext2 0170                  __ptext3 0014                  __ptext4 013C  
                __ptext5 01A9                  __ptext6 0199                  __ptext7 01A2  
           __size_of_ADC 00EF             __size_of_isr 0034                  _spiInit 0170  
                _spiRead 0199     end_of_initialization 0010               ??_spiWrite 0070  
              _TRISAbits 0085                _TRISBbits 0086                _TRISEbits 0089  
            spiWrite@dat 0070           _spiReceiveWait 01A2      start_initialization 000F  
            __end_of_ADC 0103              __end_of_isr 0170   __end_of_spiReceiveWait 01A9  
            __pbssCOMMON 0078                ___latbits 0002          ?_spiReceiveWait 0070  
      __size_of_spiWrite 0006                 ?_spiInit 0074                 ?_spiRead 0070  
         __size_of_setup 0039     spiInit@sTransmitEdge 0076        interrupt_function 0004  
               _PIE1bits 008C       spiInit@sDataSample 0074                 _PIR1bits 000C  
             _ADCON0bits 001F               _ADCON1bits 009F               _ANSELHbits 0189  
       __size_of_spiInit 0016         __size_of_spiRead 0009                 _contador 0078  
          __size_of_main 0013                 _spiWrite 01A9             spiInit@sType 0077  
      spiInit@sClockIdle 0075               _INTCONbits 000B                 intlevel1 0000  
       ??_spiReceiveWait 0070  
